[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar Session = Package.session.Session;\nvar EJSON = Package.ejson.EJSON;\nvar check = Package.check.check;\nvar Match = Package.check.Match;\nvar DiffSequence = Package['diff-sequence'].DiffSequence;\nvar MongoID = Package['mongo-id'].MongoID;\nvar _ = Package.underscore._;\nvar Tracker = Package.tracker.Tracker;\nvar Deps = Package.tracker.Deps;\nvar Mongo = Package.mongo.Mongo;\nvar LocalCollection = Package.minimongo.LocalCollection;\nvar Minimongo = Package.minimongo.Minimongo;\nvar ObserveSequence = Package['observe-sequence'].ObserveSequence;\nvar ReactiveVar = Package['reactive-var'].ReactiveVar;\n\n(function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/angular-meteor-data/.npm/package/node_modules/angular-meteor/dist/angular-meteor.js                       //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n/*! angular-meteor v1.3.11 */                                                                                         // 1\n(function webpackUniversalModuleDefinition(root, factory) {                                                           // 2\n\tif(typeof exports === 'object' && typeof module === 'object')                                                        // 3\n\t\tmodule.exports = factory(require(\"underscore\"), require(\"jsondiffpatch\"));                                          // 4\n\telse if(typeof define === 'function' && define.amd)                                                                  // 5\n\t\tdefine([\"underscore\", \"jsondiffpatch\"], factory);                                                                   // 6\n\telse if(typeof exports === 'object')                                                                                 // 7\n\t\texports[\"angularMeteor\"] = factory(require(\"underscore\"), require(\"jsondiffpatch\"));                                // 8\n\telse                                                                                                                 // 9\n\t\troot[\"angularMeteor\"] = factory(root[\"_\"], root[\"jsondiffpatch\"]);                                                  // 10\n})(this, function(__WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_22__) {                                    // 11\nreturn /******/ (function(modules) { // webpackBootstrap                                                              // 12\n/******/ \t// The module cache                                                                                         // 13\n/******/ \tvar installedModules = {};                                                                                  // 14\n                                                                                                                      // 15\n/******/ \t// The require function                                                                                     // 16\n/******/ \tfunction __webpack_require__(moduleId) {                                                                    // 17\n                                                                                                                      // 18\n/******/ \t\t// Check if module is in cache                                                                             // 19\n/******/ \t\tif(installedModules[moduleId])                                                                             // 20\n/******/ \t\t\treturn installedModules[moduleId].exports;                                                                // 21\n                                                                                                                      // 22\n/******/ \t\t// Create a new module (and put it into the cache)                                                         // 23\n/******/ \t\tvar module = installedModules[moduleId] = {                                                                // 24\n/******/ \t\t\texports: {},                                                                                              // 25\n/******/ \t\t\tid: moduleId,                                                                                             // 26\n/******/ \t\t\tloaded: false                                                                                             // 27\n/******/ \t\t};                                                                                                         // 28\n                                                                                                                      // 29\n/******/ \t\t// Execute the module function                                                                             // 30\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);                       // 31\n                                                                                                                      // 32\n/******/ \t\t// Flag the module as loaded                                                                               // 33\n/******/ \t\tmodule.loaded = true;                                                                                      // 34\n                                                                                                                      // 35\n/******/ \t\t// Return the exports of the module                                                                        // 36\n/******/ \t\treturn module.exports;                                                                                     // 37\n/******/ \t}                                                                                                           // 38\n                                                                                                                      // 39\n                                                                                                                      // 40\n/******/ \t// expose the modules object (__webpack_modules__)                                                          // 41\n/******/ \t__webpack_require__.m = modules;                                                                            // 42\n                                                                                                                      // 43\n/******/ \t// expose the module cache                                                                                  // 44\n/******/ \t__webpack_require__.c = installedModules;                                                                   // 45\n                                                                                                                      // 46\n/******/ \t// __webpack_public_path__                                                                                  // 47\n/******/ \t__webpack_require__.p = \"\";                                                                                 // 48\n                                                                                                                      // 49\n/******/ \t// Load entry module and return exports                                                                     // 50\n/******/ \treturn __webpack_require__(0);                                                                              // 51\n/******/ })                                                                                                           // 52\n/************************************************************************/                                            // 53\n/******/ ([                                                                                                           // 54\n/* 0 */                                                                                                               // 55\n/***/ function(module, exports, __webpack_require__) {                                                                // 56\n                                                                                                                      // 57\n\t'use strict';                                                                                                        // 58\n                                                                                                                      // 59\n\tObject.defineProperty(exports, \"__esModule\", {                                                                       // 60\n\t  value: true                                                                                                        // 61\n\t});                                                                                                                  // 62\n                                                                                                                      // 63\n\t__webpack_require__(1);                                                                                              // 64\n                                                                                                                      // 65\n\t__webpack_require__(4);                                                                                              // 66\n                                                                                                                      // 67\n\t__webpack_require__(5);                                                                                              // 68\n                                                                                                                      // 69\n\t__webpack_require__(6);                                                                                              // 70\n                                                                                                                      // 71\n\t__webpack_require__(7);                                                                                              // 72\n                                                                                                                      // 73\n\t__webpack_require__(8);                                                                                              // 74\n                                                                                                                      // 75\n\t__webpack_require__(9);                                                                                              // 76\n                                                                                                                      // 77\n\t__webpack_require__(10);                                                                                             // 78\n                                                                                                                      // 79\n\t__webpack_require__(11);                                                                                             // 80\n                                                                                                                      // 81\n\t__webpack_require__(12);                                                                                             // 82\n                                                                                                                      // 83\n\t__webpack_require__(13);                                                                                             // 84\n                                                                                                                      // 85\n\t__webpack_require__(14);                                                                                             // 86\n                                                                                                                      // 87\n\t__webpack_require__(15);                                                                                             // 88\n                                                                                                                      // 89\n\tvar _utils = __webpack_require__(16);                                                                                // 90\n                                                                                                                      // 91\n\tvar _mixer = __webpack_require__(17);                                                                                // 92\n                                                                                                                      // 93\n\tvar _scope = __webpack_require__(18);                                                                                // 94\n                                                                                                                      // 95\n\tvar _core = __webpack_require__(19);                                                                                 // 96\n                                                                                                                      // 97\n\tvar _viewModel = __webpack_require__(20);                                                                            // 98\n                                                                                                                      // 99\n\tvar _reactive = __webpack_require__(21);                                                                             // 100\n                                                                                                                      // 101\n\tvar _templates = __webpack_require__(23);                                                                            // 102\n                                                                                                                      // 103\n\t// legacy                                                                                                            // 104\n\t// lib                                                                                                               // 105\n                                                                                                                      // 106\n                                                                                                                      // 107\n\tvar name = 'angular-meteor';                                                                                         // 108\n                                                                                                                      // 109\n\t// new                                                                                                               // 110\n                                                                                                                      // 111\n\texports.default = name;                                                                                              // 112\n                                                                                                                      // 113\n                                                                                                                      // 114\n\tangular.module(name, [                                                                                               // 115\n\t// new                                                                                                               // 116\n\t_utils.name, _mixer.name, _scope.name, _core.name, _viewModel.name, _reactive.name, _templates.name,                 // 117\n                                                                                                                      // 118\n\t// legacy                                                                                                            // 119\n\t'angular-meteor.ironrouter', 'angular-meteor.utils', 'angular-meteor.subscribe', 'angular-meteor.collection', 'angular-meteor.object', 'angular-meteor.user', 'angular-meteor.methods', 'angular-meteor.session', 'angular-meteor.camera']).run([_mixer.Mixer, _core.Core, _viewModel.ViewModel, _reactive.Reactive, function ($Mixer, $$Core, $$ViewModel, $$Reactive) {\n\t  // Load all mixins                                                                                                 // 121\n\t  $Mixer.mixin($$Core).mixin($$ViewModel).mixin($$Reactive);                                                         // 122\n\t}])                                                                                                                  // 123\n                                                                                                                      // 124\n\t// legacy                                                                                                            // 125\n\t// Putting all services under $meteor service for syntactic sugar                                                    // 126\n\t.service('$meteor', ['$meteorCollection', '$meteorCollectionFS', '$meteorObject', '$meteorMethods', '$meteorSession', '$meteorSubscribe', '$meteorUtils', '$meteorCamera', '$meteorUser', function ($meteorCollection, $meteorCollectionFS, $meteorObject, $meteorMethods, $meteorSession, $meteorSubscribe, $meteorUtils, $meteorCamera, $meteorUser) {\n\t  var _this = this;                                                                                                  // 128\n                                                                                                                      // 129\n\t  this.collection = $meteorCollection;                                                                               // 130\n\t  this.collectionFS = $meteorCollectionFS;                                                                           // 131\n\t  this.object = $meteorObject;                                                                                       // 132\n\t  this.subscribe = $meteorSubscribe.subscribe;                                                                       // 133\n\t  this.call = $meteorMethods.call;                                                                                   // 134\n\t  this.session = $meteorSession;                                                                                     // 135\n\t  this.autorun = $meteorUtils.autorun;                                                                               // 136\n\t  this.getCollectionByName = $meteorUtils.getCollectionByName;                                                       // 137\n\t  this.getPicture = $meteorCamera.getPicture;                                                                        // 138\n                                                                                                                      // 139\n\t  // $meteorUser                                                                                                     // 140\n\t  ['loginWithPassword', 'requireUser', 'requireValidUser', 'waitForUser', 'createUser', 'changePassword', 'forgotPassword', 'resetPassword', 'verifyEmail', 'loginWithMeteorDeveloperAccount', 'loginWithFacebook', 'loginWithGithub', 'loginWithGoogle', 'loginWithMeetup', 'loginWithTwitter', 'loginWithWeibo', 'logout', 'logoutOtherClients'].forEach(function (method) {\n\t    _this[method] = $meteorUser[method];                                                                             // 142\n\t  });                                                                                                                // 143\n\t}]);                                                                                                                 // 144\n\tmodule.exports = exports['default'];                                                                                 // 145\n                                                                                                                      // 146\n/***/ },                                                                                                              // 147\n/* 1 */                                                                                                               // 148\n/***/ function(module, exports, __webpack_require__) {                                                                // 149\n                                                                                                                      // 150\n\t'use strict';                                                                                                        // 151\n                                                                                                                      // 152\n\tvar _underscore = __webpack_require__(2);                                                                            // 153\n                                                                                                                      // 154\n\tvar _underscore2 = _interopRequireDefault(_underscore);                                                              // 155\n                                                                                                                      // 156\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }                      // 157\n                                                                                                                      // 158\n\t'use strict';                                                                                                        // 159\n                                                                                                                      // 160\n\t// https://github.com/DAB0mB/get-updates                                                                             // 161\n\t/*global                                                                                                             // 162\n\t angular, _                                                                                                          // 163\n\t */                                                                                                                  // 164\n                                                                                                                      // 165\n\t(function () {                                                                                                       // 166\n\t  var module = angular.module('getUpdates', []);                                                                     // 167\n                                                                                                                      // 168\n\t  var utils = function () {                                                                                          // 169\n\t    var rip = function rip(obj, level) {                                                                             // 170\n\t      if (level < 1) return {};                                                                                      // 171\n                                                                                                                      // 172\n\t      return _underscore2.default.reduce(obj, function (clone, v, k) {                                               // 173\n\t        v = _underscore2.default.isObject(v) ? rip(v, --level) : v;                                                  // 174\n\t        clone[k] = v;                                                                                                // 175\n\t        return clone;                                                                                                // 176\n\t      }, {});                                                                                                        // 177\n\t    };                                                                                                               // 178\n                                                                                                                      // 179\n\t    var toPaths = function toPaths(obj) {                                                                            // 180\n\t      var keys = getKeyPaths(obj);                                                                                   // 181\n\t      var values = getDeepValues(obj);                                                                               // 182\n\t      return _underscore2.default.object(keys, values);                                                              // 183\n\t    };                                                                                                               // 184\n                                                                                                                      // 185\n\t    var getKeyPaths = function getKeyPaths(obj) {                                                                    // 186\n\t      var keys = _underscore2.default.keys(obj).map(function (k) {                                                   // 187\n\t        var v = obj[k];                                                                                              // 188\n\t        if (!_underscore2.default.isObject(v) || _underscore2.default.isEmpty(v) || _underscore2.default.isArray(v)) return k;\n                                                                                                                      // 190\n\t        return getKeyPaths(v).map(function (subKey) {                                                                // 191\n\t          return k + '.' + subKey;                                                                                   // 192\n\t        });                                                                                                          // 193\n\t      });                                                                                                            // 194\n                                                                                                                      // 195\n\t      return _underscore2.default.flatten(keys);                                                                     // 196\n\t    };                                                                                                               // 197\n                                                                                                                      // 198\n\t    var getDeepValues = function getDeepValues(obj, arr) {                                                           // 199\n\t      arr = arr || [];                                                                                               // 200\n                                                                                                                      // 201\n\t      _underscore2.default.values(obj).forEach(function (v) {                                                        // 202\n\t        if (!_underscore2.default.isObject(v) || _underscore2.default.isEmpty(v) || _underscore2.default.isArray(v)) arr.push(v);else getDeepValues(v, arr);\n\t      });                                                                                                            // 204\n                                                                                                                      // 205\n\t      return arr;                                                                                                    // 206\n\t    };                                                                                                               // 207\n                                                                                                                      // 208\n\t    var flatten = function flatten(arr) {                                                                            // 209\n\t      return arr.reduce(function (flattened, v, i) {                                                                 // 210\n\t        if (_underscore2.default.isArray(v) && !_underscore2.default.isEmpty(v)) flattened.push.apply(flattened, flatten(v));else flattened.push(v);\n                                                                                                                      // 212\n\t        return flattened;                                                                                            // 213\n\t      }, []);                                                                                                        // 214\n\t    };                                                                                                               // 215\n                                                                                                                      // 216\n\t    var setFilled = function setFilled(obj, k, v) {                                                                  // 217\n\t      if (!_underscore2.default.isEmpty(v)) obj[k] = v;                                                              // 218\n\t    };                                                                                                               // 219\n                                                                                                                      // 220\n\t    var assert = function assert(result, msg) {                                                                      // 221\n\t      if (!result) throwErr(msg);                                                                                    // 222\n\t    };                                                                                                               // 223\n                                                                                                                      // 224\n\t    var throwErr = function throwErr(msg) {                                                                          // 225\n\t      throw Error('get-updates error - ' + msg);                                                                     // 226\n\t    };                                                                                                               // 227\n                                                                                                                      // 228\n\t    return {                                                                                                         // 229\n\t      rip: rip,                                                                                                      // 230\n\t      toPaths: toPaths,                                                                                              // 231\n\t      getKeyPaths: getKeyPaths,                                                                                      // 232\n\t      getDeepValues: getDeepValues,                                                                                  // 233\n\t      setFilled: setFilled,                                                                                          // 234\n\t      assert: assert,                                                                                                // 235\n\t      throwErr: throwErr                                                                                             // 236\n\t    };                                                                                                               // 237\n\t  }();                                                                                                               // 238\n                                                                                                                      // 239\n\t  var getDifference = function () {                                                                                  // 240\n\t    var getDifference = function getDifference(src, dst, isShallow) {                                                // 241\n\t      var level;                                                                                                     // 242\n                                                                                                                      // 243\n\t      if (isShallow > 1) level = isShallow;else if (isShallow) level = 1;                                            // 244\n                                                                                                                      // 245\n\t      if (level) {                                                                                                   // 246\n\t        src = utils.rip(src, level);                                                                                 // 247\n\t        dst = utils.rip(dst, level);                                                                                 // 248\n\t      }                                                                                                              // 249\n                                                                                                                      // 250\n\t      return compare(src, dst);                                                                                      // 251\n\t    };                                                                                                               // 252\n                                                                                                                      // 253\n\t    var compare = function compare(src, dst) {                                                                       // 254\n\t      var srcKeys = _underscore2.default.keys(src);                                                                  // 255\n\t      var dstKeys = _underscore2.default.keys(dst);                                                                  // 256\n                                                                                                                      // 257\n\t      var keys = _underscore2.default.chain([]).concat(srcKeys).concat(dstKeys).uniq().without('$$hashKey').value();\n                                                                                                                      // 259\n\t      return keys.reduce(function (diff, k) {                                                                        // 260\n\t        var srcValue = src[k];                                                                                       // 261\n\t        var dstValue = dst[k];                                                                                       // 262\n                                                                                                                      // 263\n\t        if (_underscore2.default.isDate(srcValue) && _underscore2.default.isDate(dstValue)) {                        // 264\n\t          if (srcValue.getTime() != dstValue.getTime()) diff[k] = dstValue;                                          // 265\n\t        }                                                                                                            // 266\n                                                                                                                      // 267\n\t        if (_underscore2.default.isObject(srcValue) && _underscore2.default.isObject(dstValue)) {                    // 268\n\t          var valueDiff = getDifference(srcValue, dstValue);                                                         // 269\n\t          utils.setFilled(diff, k, valueDiff);                                                                       // 270\n\t        } else if (srcValue !== dstValue) {                                                                          // 271\n\t          diff[k] = dstValue;                                                                                        // 272\n\t        }                                                                                                            // 273\n                                                                                                                      // 274\n\t        return diff;                                                                                                 // 275\n\t      }, {});                                                                                                        // 276\n\t    };                                                                                                               // 277\n                                                                                                                      // 278\n\t    return getDifference;                                                                                            // 279\n\t  }();                                                                                                               // 280\n                                                                                                                      // 281\n\t  var getUpdates = function () {                                                                                     // 282\n\t    var getUpdates = function getUpdates(src, dst, isShallow) {                                                      // 283\n\t      utils.assert(_underscore2.default.isObject(src), 'first argument must be an object');                          // 284\n\t      utils.assert(_underscore2.default.isObject(dst), 'second argument must be an object');                         // 285\n                                                                                                                      // 286\n\t      var diff = getDifference(src, dst, isShallow);                                                                 // 287\n\t      var paths = utils.toPaths(diff);                                                                               // 288\n                                                                                                                      // 289\n\t      var set = createSet(paths);                                                                                    // 290\n\t      var unset = createUnset(paths);                                                                                // 291\n\t      var pull = createPull(unset);                                                                                  // 292\n                                                                                                                      // 293\n\t      var updates = {};                                                                                              // 294\n\t      utils.setFilled(updates, '$set', set);                                                                         // 295\n\t      utils.setFilled(updates, '$unset', unset);                                                                     // 296\n\t      utils.setFilled(updates, '$pull', pull);                                                                       // 297\n                                                                                                                      // 298\n\t      return updates;                                                                                                // 299\n\t    };                                                                                                               // 300\n                                                                                                                      // 301\n\t    var createSet = function createSet(paths) {                                                                      // 302\n\t      var undefinedKeys = getUndefinedKeys(paths);                                                                   // 303\n\t      return _underscore2.default.omit(paths, undefinedKeys);                                                        // 304\n\t    };                                                                                                               // 305\n                                                                                                                      // 306\n\t    var createUnset = function createUnset(paths) {                                                                  // 307\n\t      var undefinedKeys = getUndefinedKeys(paths);                                                                   // 308\n\t      var unset = _underscore2.default.pick(paths, undefinedKeys);                                                   // 309\n                                                                                                                      // 310\n\t      return _underscore2.default.reduce(unset, function (result, v, k) {                                            // 311\n\t        result[k] = true;                                                                                            // 312\n\t        return result;                                                                                               // 313\n\t      }, {});                                                                                                        // 314\n\t    };                                                                                                               // 315\n                                                                                                                      // 316\n\t    var createPull = function createPull(unset) {                                                                    // 317\n\t      var arrKeyPaths = _underscore2.default.keys(unset).map(function (k) {                                          // 318\n\t        var split = k.match(/(.*)\\.\\d+$/);                                                                           // 319\n\t        return split && split[1];                                                                                    // 320\n\t      });                                                                                                            // 321\n                                                                                                                      // 322\n\t      return _underscore2.default.compact(arrKeyPaths).reduce(function (pull, k) {                                   // 323\n\t        pull[k] = null;                                                                                              // 324\n\t        return pull;                                                                                                 // 325\n\t      }, {});                                                                                                        // 326\n\t    };                                                                                                               // 327\n                                                                                                                      // 328\n\t    var getUndefinedKeys = function getUndefinedKeys(obj) {                                                          // 329\n\t      return _underscore2.default.keys(obj).filter(function (k) {                                                    // 330\n\t        var v = obj[k];                                                                                              // 331\n\t        return _underscore2.default.isUndefined(v);                                                                  // 332\n\t      });                                                                                                            // 333\n\t    };                                                                                                               // 334\n                                                                                                                      // 335\n\t    return getUpdates;                                                                                               // 336\n\t  }();                                                                                                               // 337\n                                                                                                                      // 338\n\t  module.value('getUpdates', getUpdates);                                                                            // 339\n\t})();                                                                                                                // 340\n                                                                                                                      // 341\n/***/ },                                                                                                              // 342\n/* 2 */                                                                                                               // 343\n/***/ function(module, exports, __webpack_require__) {                                                                // 344\n                                                                                                                      // 345\n\t'use strict';                                                                                                        // 346\n                                                                                                                      // 347\n\tObject.defineProperty(exports, \"__esModule\", {                                                                       // 348\n\t  value: true                                                                                                        // 349\n\t});                                                                                                                  // 350\n                                                                                                                      // 351\n\tvar _underscore = __webpack_require__(3);                                                                            // 352\n                                                                                                                      // 353\n\tvar _underscore2 = _interopRequireDefault(_underscore);                                                              // 354\n                                                                                                                      // 355\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }                      // 356\n                                                                                                                      // 357\n\tif (typeof _underscore2.default === 'undefined') {                                                                   // 358\n\t  if (typeof Package.underscore === 'undefined') {                                                                   // 359\n\t    throw new Error('underscore is missing');                                                                        // 360\n\t  }                                                                                                                  // 361\n\t}                                                                                                                    // 362\n                                                                                                                      // 363\n\texports.default = _underscore2.default || Package.underscore._;                                                      // 364\n\tmodule.exports = exports['default'];                                                                                 // 365\n                                                                                                                      // 366\n/***/ },                                                                                                              // 367\n/* 3 */                                                                                                               // 368\n/***/ function(module, exports) {                                                                                     // 369\n                                                                                                                      // 370\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_3__;                                                                      // 371\n                                                                                                                      // 372\n/***/ },                                                                                                              // 373\n/* 4 */                                                                                                               // 374\n/***/ function(module, exports, __webpack_require__) {                                                                // 375\n                                                                                                                      // 376\n\t'use strict';                                                                                                        // 377\n                                                                                                                      // 378\n\tvar _underscore = __webpack_require__(2);                                                                            // 379\n                                                                                                                      // 380\n\tvar _underscore2 = _interopRequireDefault(_underscore);                                                              // 381\n                                                                                                                      // 382\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }                      // 383\n                                                                                                                      // 384\n\t'use strict'; /*global                                                                                               // 385\n\t               angular, _, Package                                                                                   // 386\n\t               */                                                                                                    // 387\n                                                                                                                      // 388\n\tvar _module = angular.module('diffArray', ['getUpdates']);                                                           // 389\n                                                                                                                      // 390\n\t_module.factory('diffArray', ['getUpdates', function (getUpdates) {                                                  // 391\n\t  var LocalCollection = Package.minimongo.LocalCollection;                                                           // 392\n\t  var idStringify = LocalCollection._idStringify || Package['mongo-id'].MongoID.idStringify;                         // 393\n\t  var idParse = LocalCollection._idParse || Package['mongo-id'].MongoID.idParse;                                     // 394\n                                                                                                                      // 395\n\t  // Calculates the differences between `lastSeqArray` and                                                           // 396\n\t  // `seqArray` and calls appropriate functions from `callbacks`.                                                    // 397\n\t  // Reuses Minimongo's diff algorithm implementation.                                                               // 398\n\t  // XXX Should be replaced with the original diffArray function here:                                               // 399\n\t  // https://github.com/meteor/meteor/blob/devel/packages/observe-sequence/observe_sequence.js#L152                  // 400\n\t  // When it will become nested as well, tracking here: https://github.com/meteor/meteor/issues/3764                 // 401\n\t  function diffArray(lastSeqArray, seqArray, callbacks, preventNestedDiff) {                                         // 402\n\t    preventNestedDiff = !!preventNestedDiff;                                                                         // 403\n                                                                                                                      // 404\n\t    var diffFn = Package.minimongo.LocalCollection._diffQueryOrderedChanges || Package['diff-sequence'].DiffSequence.diffQueryOrderedChanges;\n                                                                                                                      // 406\n\t    var oldObjIds = [];                                                                                              // 407\n\t    var newObjIds = [];                                                                                              // 408\n\t    var posOld = {}; // maps from idStringify'd ids                                                                  // 409\n\t    var posNew = {}; // ditto                                                                                        // 410\n\t    var posCur = {};                                                                                                 // 411\n\t    var lengthCur = lastSeqArray.length;                                                                             // 412\n                                                                                                                      // 413\n\t    _underscore2.default.each(seqArray, function (doc, i) {                                                          // 414\n\t      newObjIds.push({ _id: doc._id });                                                                              // 415\n\t      posNew[idStringify(doc._id)] = i;                                                                              // 416\n\t    });                                                                                                              // 417\n                                                                                                                      // 418\n\t    _underscore2.default.each(lastSeqArray, function (doc, i) {                                                      // 419\n\t      oldObjIds.push({ _id: doc._id });                                                                              // 420\n\t      posOld[idStringify(doc._id)] = i;                                                                              // 421\n\t      posCur[idStringify(doc._id)] = i;                                                                              // 422\n\t    });                                                                                                              // 423\n                                                                                                                      // 424\n\t    // Arrays can contain arbitrary objects. We don't diff the                                                       // 425\n\t    // objects. Instead we always fire 'changedAt' callback on every                                                 // 426\n\t    // object. The consumer of `observe-sequence` should deal with                                                   // 427\n\t    // it appropriately.                                                                                             // 428\n\t    diffFn(oldObjIds, newObjIds, {                                                                                   // 429\n\t      addedBefore: function addedBefore(id, doc, before) {                                                           // 430\n\t        var position = before ? posCur[idStringify(before)] : lengthCur;                                             // 431\n                                                                                                                      // 432\n\t        _underscore2.default.each(posCur, function (pos, id) {                                                       // 433\n\t          if (pos >= position) posCur[id]++;                                                                         // 434\n\t        });                                                                                                          // 435\n                                                                                                                      // 436\n\t        lengthCur++;                                                                                                 // 437\n\t        posCur[idStringify(id)] = position;                                                                          // 438\n                                                                                                                      // 439\n\t        callbacks.addedAt(id, seqArray[posNew[idStringify(id)]], position, before);                                  // 440\n\t      },                                                                                                             // 441\n                                                                                                                      // 442\n\t      movedBefore: function movedBefore(id, before) {                                                                // 443\n\t        var prevPosition = posCur[idStringify(id)];                                                                  // 444\n\t        var position = before ? posCur[idStringify(before)] : lengthCur - 1;                                         // 445\n                                                                                                                      // 446\n\t        _underscore2.default.each(posCur, function (pos, id) {                                                       // 447\n\t          if (pos >= prevPosition && pos <= position) posCur[id]--;else if (pos <= prevPosition && pos >= position) posCur[id]++;\n\t        });                                                                                                          // 449\n                                                                                                                      // 450\n\t        posCur[idStringify(id)] = position;                                                                          // 451\n                                                                                                                      // 452\n\t        callbacks.movedTo(id, seqArray[posNew[idStringify(id)]], prevPosition, position, before);                    // 453\n\t      },                                                                                                             // 454\n\t      removed: function removed(id) {                                                                                // 455\n\t        var prevPosition = posCur[idStringify(id)];                                                                  // 456\n                                                                                                                      // 457\n\t        _underscore2.default.each(posCur, function (pos, id) {                                                       // 458\n\t          if (pos >= prevPosition) posCur[id]--;                                                                     // 459\n\t        });                                                                                                          // 460\n                                                                                                                      // 461\n\t        delete posCur[idStringify(id)];                                                                              // 462\n\t        lengthCur--;                                                                                                 // 463\n                                                                                                                      // 464\n\t        callbacks.removedAt(id, lastSeqArray[posOld[idStringify(id)]], prevPosition);                                // 465\n\t      }                                                                                                              // 466\n\t    });                                                                                                              // 467\n                                                                                                                      // 468\n\t    _underscore2.default.each(posNew, function (pos, idString) {                                                     // 469\n\t      if (!_underscore2.default.has(posOld, idString)) return;                                                       // 470\n                                                                                                                      // 471\n\t      var id = idParse(idString);                                                                                    // 472\n\t      var newItem = seqArray[pos] || {};                                                                             // 473\n\t      var oldItem = lastSeqArray[posOld[idString]];                                                                  // 474\n\t      var updates = getUpdates(oldItem, newItem, preventNestedDiff);                                                 // 475\n                                                                                                                      // 476\n\t      if (!_underscore2.default.isEmpty(updates)) callbacks.changedAt(id, updates, pos, oldItem);                    // 477\n\t    });                                                                                                              // 478\n\t  }                                                                                                                  // 479\n                                                                                                                      // 480\n\t  diffArray.shallow = function (lastSeqArray, seqArray, callbacks) {                                                 // 481\n\t    return diffArray(lastSeqArray, seqArray, callbacks, true);                                                       // 482\n\t  };                                                                                                                 // 483\n                                                                                                                      // 484\n\t  diffArray.deepCopyChanges = function (oldItem, newItem) {                                                          // 485\n\t    var setDiff = getUpdates(oldItem, newItem).$set;                                                                 // 486\n                                                                                                                      // 487\n\t    _underscore2.default.each(setDiff, function (v, deepKey) {                                                       // 488\n\t      setDeep(oldItem, deepKey, v);                                                                                  // 489\n\t    });                                                                                                              // 490\n\t  };                                                                                                                 // 491\n                                                                                                                      // 492\n\t  diffArray.deepCopyRemovals = function (oldItem, newItem) {                                                         // 493\n\t    var unsetDiff = getUpdates(oldItem, newItem).$unset;                                                             // 494\n                                                                                                                      // 495\n\t    _underscore2.default.each(unsetDiff, function (v, deepKey) {                                                     // 496\n\t      unsetDeep(oldItem, deepKey);                                                                                   // 497\n\t    });                                                                                                              // 498\n\t  };                                                                                                                 // 499\n                                                                                                                      // 500\n\t  // Finds changes between two collections                                                                           // 501\n\t  diffArray.getChanges = function (newCollection, oldCollection, diffMethod) {                                       // 502\n\t    var changes = { added: [], removed: [], changed: [] };                                                           // 503\n                                                                                                                      // 504\n\t    diffMethod(oldCollection, newCollection, {                                                                       // 505\n\t      addedAt: function addedAt(id, item, index) {                                                                   // 506\n\t        changes.added.push({ item: item, index: index });                                                            // 507\n\t      },                                                                                                             // 508\n                                                                                                                      // 509\n\t      removedAt: function removedAt(id, item, index) {                                                               // 510\n\t        changes.removed.push({ item: item, index: index });                                                          // 511\n\t      },                                                                                                             // 512\n                                                                                                                      // 513\n\t      changedAt: function changedAt(id, updates, index, oldItem) {                                                   // 514\n\t        changes.changed.push({ selector: id, modifier: updates });                                                   // 515\n\t      },                                                                                                             // 516\n                                                                                                                      // 517\n\t      movedTo: function movedTo(id, item, fromIndex, toIndex) {                                                      // 518\n\t        // XXX do we need this?                                                                                      // 519\n\t      }                                                                                                              // 520\n\t    });                                                                                                              // 521\n                                                                                                                      // 522\n\t    return changes;                                                                                                  // 523\n\t  };                                                                                                                 // 524\n                                                                                                                      // 525\n\t  var setDeep = function setDeep(obj, deepKey, v) {                                                                  // 526\n\t    var split = deepKey.split('.');                                                                                  // 527\n\t    var initialKeys = _underscore2.default.initial(split);                                                           // 528\n\t    var lastKey = _underscore2.default.last(split);                                                                  // 529\n                                                                                                                      // 530\n\t    initialKeys.reduce(function (subObj, k, i) {                                                                     // 531\n\t      var nextKey = split[i + 1];                                                                                    // 532\n                                                                                                                      // 533\n\t      if (isNumStr(nextKey)) {                                                                                       // 534\n\t        if (subObj[k] === null) subObj[k] = [];                                                                      // 535\n\t        if (subObj[k].length == parseInt(nextKey)) subObj[k].push(null);                                             // 536\n\t      } else if (subObj[k] === null || !isHash(subObj[k])) {                                                         // 537\n\t        subObj[k] = {};                                                                                              // 538\n\t      }                                                                                                              // 539\n                                                                                                                      // 540\n\t      return subObj[k];                                                                                              // 541\n\t    }, obj);                                                                                                         // 542\n                                                                                                                      // 543\n\t    var deepObj = getDeep(obj, initialKeys);                                                                         // 544\n\t    deepObj[lastKey] = v;                                                                                            // 545\n\t    return v;                                                                                                        // 546\n\t  };                                                                                                                 // 547\n                                                                                                                      // 548\n\t  var unsetDeep = function unsetDeep(obj, deepKey) {                                                                 // 549\n\t    var split = deepKey.split('.');                                                                                  // 550\n\t    var initialKeys = _underscore2.default.initial(split);                                                           // 551\n\t    var lastKey = _underscore2.default.last(split);                                                                  // 552\n\t    var deepObj = getDeep(obj, initialKeys);                                                                         // 553\n                                                                                                                      // 554\n\t    if (_underscore2.default.isArray(deepObj) && isNumStr(lastKey)) return !!deepObj.splice(lastKey, 1);else return delete deepObj[lastKey];\n\t  };                                                                                                                 // 556\n                                                                                                                      // 557\n\t  var getDeep = function getDeep(obj, keys) {                                                                        // 558\n\t    return keys.reduce(function (subObj, k) {                                                                        // 559\n\t      return subObj[k];                                                                                              // 560\n\t    }, obj);                                                                                                         // 561\n\t  };                                                                                                                 // 562\n                                                                                                                      // 563\n\t  var isHash = function isHash(obj) {                                                                                // 564\n\t    return _underscore2.default.isObject(obj) && Object.getPrototypeOf(obj) === Object.prototype;                    // 565\n\t  };                                                                                                                 // 566\n                                                                                                                      // 567\n\t  var isNumStr = function isNumStr(str) {                                                                            // 568\n\t    return str.match(/^\\d+$/);                                                                                       // 569\n\t  };                                                                                                                 // 570\n                                                                                                                      // 571\n\t  return diffArray;                                                                                                  // 572\n\t}]);                                                                                                                 // 573\n                                                                                                                      // 574\n/***/ },                                                                                                              // 575\n/* 5 */                                                                                                               // 576\n/***/ function(module, exports) {                                                                                     // 577\n                                                                                                                      // 578\n\t'use strict';                                                                                                        // 579\n                                                                                                                      // 580\n\tangular.module('angular-meteor.settings', []).constant('$angularMeteorSettings', {                                   // 581\n\t  suppressWarnings: true                                                                                             // 582\n\t});                                                                                                                  // 583\n                                                                                                                      // 584\n/***/ },                                                                                                              // 585\n/* 6 */                                                                                                               // 586\n/***/ function(module, exports) {                                                                                     // 587\n                                                                                                                      // 588\n\t'use strict';                                                                                                        // 589\n                                                                                                                      // 590\n\tangular.module('angular-meteor.ironrouter', []).run(['$compile', '$document', '$rootScope', function ($compile, $document, $rootScope) {\n\t  var Router = (Package['iron:router'] || {}).Router;                                                                // 592\n\t  if (!Router) return;                                                                                               // 593\n                                                                                                                      // 594\n\t  var isLoaded = false;                                                                                              // 595\n                                                                                                                      // 596\n\t  // Recompile after iron:router builds page                                                                         // 597\n\t  Router.onAfterAction(function (req, res, next) {                                                                   // 598\n\t    Tracker.afterFlush(function () {                                                                                 // 599\n\t      if (isLoaded) return;                                                                                          // 600\n\t      $compile($document)($rootScope);                                                                               // 601\n\t      if (!$rootScope.$$phase) $rootScope.$apply();                                                                  // 602\n\t      isLoaded = true;                                                                                               // 603\n\t    });                                                                                                              // 604\n\t  });                                                                                                                // 605\n\t}]);                                                                                                                 // 606\n                                                                                                                      // 607\n/***/ },                                                                                                              // 608\n/* 7 */                                                                                                               // 609\n/***/ function(module, exports, __webpack_require__) {                                                                // 610\n                                                                                                                      // 611\n\t'use strict';                                                                                                        // 612\n                                                                                                                      // 613\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; }; /*global\n\t                                                                                                                                                                                                                                                   angular, _, Tracker, EJSON, FS, Mongo\n\t                                                                                                                                                                                                                                                   */\n                                                                                                                      // 617\n\tvar _underscore = __webpack_require__(2);                                                                            // 618\n                                                                                                                      // 619\n\tvar _underscore2 = _interopRequireDefault(_underscore);                                                              // 620\n                                                                                                                      // 621\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }                      // 622\n                                                                                                                      // 623\n\t'use strict';                                                                                                        // 624\n                                                                                                                      // 625\n\tvar angularMeteorUtils = angular.module('angular-meteor.utils', ['angular-meteor.settings']);                        // 626\n                                                                                                                      // 627\n\tangularMeteorUtils.service('$meteorUtils', ['$q', '$timeout', '$angularMeteorSettings', function ($q, $timeout, $angularMeteorSettings) {\n                                                                                                                      // 629\n\t  var self = this;                                                                                                   // 630\n                                                                                                                      // 631\n\t  this.autorun = function (scope, fn) {                                                                              // 632\n\t    if (!$angularMeteorSettings.suppressWarnings) console.warn('[angular-meteor.utils.autorun] Please note that this method is deprecated since 1.3.0 and will be removed in 1.4.0! For more info: http://www.angular-meteor.com/api/1.3.6/autorun. You can disable this warning by following this guide http://www.angular-meteor.com/api/1.3.6/settings');\n                                                                                                                      // 634\n\t    // wrapping around Deps.autorun                                                                                  // 635\n\t    var comp = Tracker.autorun(function (c) {                                                                        // 636\n\t      fn(c);                                                                                                         // 637\n\t      // this is run immediately for the first call                                                                  // 638\n\t      // but after that, we need to $apply to start Angular digest                                                   // 639\n\t      if (!c.firstRun) $timeout(angular.noop, 0);                                                                    // 640\n\t    });                                                                                                              // 641\n                                                                                                                      // 642\n\t    // stop autorun when scope is destroyed                                                                          // 643\n\t    scope.$on('$destroy', function () {                                                                              // 644\n\t      comp.stop();                                                                                                   // 645\n\t    });                                                                                                              // 646\n                                                                                                                      // 647\n\t    // return autorun object so that it can be stopped manually                                                      // 648\n\t    return comp;                                                                                                     // 649\n\t  };                                                                                                                 // 650\n                                                                                                                      // 651\n\t  // Borrowed from angularFire                                                                                       // 652\n\t  // https://github.com/firebase/angularfire/blob/master/src/utils.js#L445-L454                                      // 653\n\t  this.stripDollarPrefixedKeys = function (data) {                                                                   // 654\n\t    if (!_underscore2.default.isObject(data) || data instanceof Date || data instanceof File || EJSON.toJSONValue(data).$type === 'oid' || (typeof FS === 'undefined' ? 'undefined' : _typeof(FS)) === 'object' && data instanceof FS.File) return data;\n                                                                                                                      // 656\n\t    var out = _underscore2.default.isArray(data) ? [] : {};                                                          // 657\n                                                                                                                      // 658\n\t    _underscore2.default.each(data, function (v, k) {                                                                // 659\n\t      if (typeof k !== 'string' || k.charAt(0) !== '$') out[k] = self.stripDollarPrefixedKeys(v);                    // 660\n\t    });                                                                                                              // 661\n                                                                                                                      // 662\n\t    return out;                                                                                                      // 663\n\t  };                                                                                                                 // 664\n                                                                                                                      // 665\n\t  // Returns a callback which fulfills promise                                                                       // 666\n\t  this.fulfill = function (deferred, boundError, boundResult) {                                                      // 667\n\t    return function (err, result) {                                                                                  // 668\n\t      if (err) deferred.reject(boundError == null ? err : boundError);else if (typeof boundResult == \"function\") deferred.resolve(boundResult == null ? result : boundResult(result));else deferred.resolve(boundResult == null ? result : boundResult);\n\t    };                                                                                                               // 670\n\t  };                                                                                                                 // 671\n                                                                                                                      // 672\n\t  // creates a function which invokes method with the given arguments and returns a promise                          // 673\n\t  this.promissor = function (obj, method) {                                                                          // 674\n\t    return function () {                                                                                             // 675\n\t      var deferred = $q.defer();                                                                                     // 676\n\t      var fulfill = self.fulfill(deferred);                                                                          // 677\n\t      var args = _underscore2.default.toArray(arguments).concat(fulfill);                                            // 678\n\t      obj[method].apply(obj, args);                                                                                  // 679\n\t      return deferred.promise;                                                                                       // 680\n\t    };                                                                                                               // 681\n\t  };                                                                                                                 // 682\n                                                                                                                      // 683\n\t  // creates a $q.all() promise and call digestion loop on fulfillment                                               // 684\n\t  this.promiseAll = function (promises) {                                                                            // 685\n\t    var allPromise = $q.all(promises);                                                                               // 686\n                                                                                                                      // 687\n\t    allPromise.finally(function () {                                                                                 // 688\n\t      // calls digestion loop with no conflicts                                                                      // 689\n\t      $timeout(angular.noop);                                                                                        // 690\n\t    });                                                                                                              // 691\n                                                                                                                      // 692\n\t    return allPromise;                                                                                               // 693\n\t  };                                                                                                                 // 694\n                                                                                                                      // 695\n\t  this.getCollectionByName = function (string) {                                                                     // 696\n\t    return Mongo.Collection.get(string);                                                                             // 697\n\t  };                                                                                                                 // 698\n                                                                                                                      // 699\n\t  this.findIndexById = function (collection, doc) {                                                                  // 700\n\t    var foundDoc = _underscore2.default.find(collection, function (colDoc) {                                         // 701\n\t      // EJSON.equals used to compare Mongo.ObjectIDs and Strings.                                                   // 702\n\t      return EJSON.equals(colDoc._id, doc._id);                                                                      // 703\n\t    });                                                                                                              // 704\n                                                                                                                      // 705\n\t    return _underscore2.default.indexOf(collection, foundDoc);                                                       // 706\n\t  };                                                                                                                 // 707\n\t}]);                                                                                                                 // 708\n                                                                                                                      // 709\n\tangularMeteorUtils.run(['$rootScope', '$meteorUtils', function ($rootScope, $meteorUtils) {                          // 710\n\t  Object.getPrototypeOf($rootScope).$meteorAutorun = function (fn) {                                                 // 711\n\t    return $meteorUtils.autorun(this, fn);                                                                           // 712\n\t  };                                                                                                                 // 713\n\t}]);                                                                                                                 // 714\n                                                                                                                      // 715\n/***/ },                                                                                                              // 716\n/* 8 */                                                                                                               // 717\n/***/ function(module, exports) {                                                                                     // 718\n                                                                                                                      // 719\n\t/*global                                                                                                             // 720\n\t angular, Meteor                                                                                                     // 721\n\t */                                                                                                                  // 722\n                                                                                                                      // 723\n\t'use strict';                                                                                                        // 724\n                                                                                                                      // 725\n\tvar angularMeteorSubscribe = angular.module('angular-meteor.subscribe', ['angular-meteor.settings']);                // 726\n                                                                                                                      // 727\n\tangularMeteorSubscribe.service('$meteorSubscribe', ['$q', '$angularMeteorSettings', function ($q, $angularMeteorSettings) {\n                                                                                                                      // 729\n\t  var self = this;                                                                                                   // 730\n                                                                                                                      // 731\n\t  this._subscribe = function (scope, deferred, args) {                                                               // 732\n\t    if (!$angularMeteorSettings.suppressWarnings) console.warn('[angular-meteor.subscribe] Please note that this module is deprecated since 1.3.0 and will be removed in 1.4.0! Replace it with the new syntax described here: http://www.angular-meteor.com/api/1.3.6/subscribe. You can disable this warning by following this guide http://www.angular-meteor.com/api/1.3.6/settings');\n                                                                                                                      // 734\n\t    var subscription = null;                                                                                         // 735\n\t    var lastArg = args[args.length - 1];                                                                             // 736\n                                                                                                                      // 737\n\t    // User supplied onStop callback                                                                                 // 738\n\t    // save it for later use and remove                                                                              // 739\n\t    // from subscription arguments                                                                                   // 740\n\t    if (angular.isObject(lastArg) && angular.isFunction(lastArg.onStop)) {                                           // 741\n\t      var _onStop = lastArg.onStop;                                                                                  // 742\n                                                                                                                      // 743\n\t      args.pop();                                                                                                    // 744\n\t    }                                                                                                                // 745\n                                                                                                                      // 746\n\t    args.push({                                                                                                      // 747\n\t      onReady: function onReady() {                                                                                  // 748\n\t        deferred.resolve(subscription);                                                                              // 749\n\t      },                                                                                                             // 750\n\t      onStop: function onStop(err) {                                                                                 // 751\n\t        if (!deferred.promise.$$state.status) {                                                                      // 752\n\t          if (err) deferred.reject(err);else deferred.reject(new Meteor.Error(\"Subscription Stopped\", \"Subscription stopped by a call to stop method. Either by the client or by the server.\"));\n\t        } else if (_onStop)                                                                                          // 754\n\t          // After promise was resolved or rejected                                                                  // 755\n\t          // call user supplied onStop callback.                                                                     // 756\n\t          _onStop.apply(this, Array.prototype.slice.call(arguments));                                                // 757\n\t      }                                                                                                              // 758\n\t    });                                                                                                              // 759\n                                                                                                                      // 760\n\t    subscription = Meteor.subscribe.apply(scope, args);                                                              // 761\n                                                                                                                      // 762\n\t    return subscription;                                                                                             // 763\n\t  };                                                                                                                 // 764\n                                                                                                                      // 765\n\t  this.subscribe = function () {                                                                                     // 766\n\t    var deferred = $q.defer();                                                                                       // 767\n\t    var args = Array.prototype.slice.call(arguments);                                                                // 768\n\t    var subscription = null;                                                                                         // 769\n                                                                                                                      // 770\n\t    self._subscribe(this, deferred, args);                                                                           // 771\n                                                                                                                      // 772\n\t    return deferred.promise;                                                                                         // 773\n\t  };                                                                                                                 // 774\n\t}]);                                                                                                                 // 775\n                                                                                                                      // 776\n\tangularMeteorSubscribe.run(['$rootScope', '$q', '$meteorSubscribe', function ($rootScope, $q, $meteorSubscribe) {    // 777\n\t  Object.getPrototypeOf($rootScope).$meteorSubscribe = function () {                                                 // 778\n\t    var deferred = $q.defer();                                                                                       // 779\n\t    var args = Array.prototype.slice.call(arguments);                                                                // 780\n                                                                                                                      // 781\n\t    var subscription = $meteorSubscribe._subscribe(this, deferred, args);                                            // 782\n                                                                                                                      // 783\n\t    this.$on('$destroy', function () {                                                                               // 784\n\t      subscription.stop();                                                                                           // 785\n\t    });                                                                                                              // 786\n                                                                                                                      // 787\n\t    return deferred.promise;                                                                                         // 788\n\t  };                                                                                                                 // 789\n\t}]);                                                                                                                 // 790\n                                                                                                                      // 791\n/***/ },                                                                                                              // 792\n/* 9 */                                                                                                               // 793\n/***/ function(module, exports, __webpack_require__) {                                                                // 794\n                                                                                                                      // 795\n\t'use strict';                                                                                                        // 796\n                                                                                                                      // 797\n\tvar _underscore = __webpack_require__(2);                                                                            // 798\n                                                                                                                      // 799\n\tvar _underscore2 = _interopRequireDefault(_underscore);                                                              // 800\n                                                                                                                      // 801\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }                      // 802\n                                                                                                                      // 803\n\t'use strict'; /*global                                                                                               // 804\n\t               angular, _, Tracker, check, Match, Mongo                                                              // 805\n\t               */                                                                                                    // 806\n                                                                                                                      // 807\n\tvar angularMeteorCollection = angular.module('angular-meteor.collection', ['angular-meteor.stopper', 'angular-meteor.subscribe', 'angular-meteor.utils', 'diffArray', 'angular-meteor.settings']);\n                                                                                                                      // 809\n\t// The reason angular meteor collection is a factory function and not something                                      // 810\n\t// that inherit from array comes from here:                                                                          // 811\n\t// http://perfectionkills.com/how-ecmascript-5-still-does-not-allow-to-subclass-an-array/                            // 812\n\t// We went with the direct extensions approach.                                                                      // 813\n\tangularMeteorCollection.factory('AngularMeteorCollection', ['$q', '$meteorSubscribe', '$meteorUtils', '$rootScope', '$timeout', 'diffArray', '$angularMeteorSettings', function ($q, $meteorSubscribe, $meteorUtils, $rootScope, $timeout, diffArray, $angularMeteorSettings) {\n                                                                                                                      // 815\n\t  function AngularMeteorCollection(curDefFunc, collection, diffArrayFunc, autoClientSave) {                          // 816\n\t    if (!$angularMeteorSettings.suppressWarnings) console.warn('[angular-meteor.$meteorCollection] Please note that this method is deprecated since 1.3.0 and will be removed in 1.4.0! For more info: http://www.angular-meteor.com/api/1.3.0/meteorCollection. You can disable this warning by following this guide http://www.angular-meteor.com/api/1.3.6/settings');\n                                                                                                                      // 818\n\t    var data = [];                                                                                                   // 819\n\t    // Server backup data to evaluate what changes come from client                                                  // 820\n\t    // after each server update.                                                                                     // 821\n\t    data._serverBackup = [];                                                                                         // 822\n\t    // Array differ function.                                                                                        // 823\n\t    data._diffArrayFunc = diffArrayFunc;                                                                             // 824\n\t    // Handler of the cursor observer.                                                                               // 825\n\t    data._hObserve = null;                                                                                           // 826\n\t    // On new cursor autorun handler                                                                                 // 827\n\t    // (autorun for reactive variables).                                                                             // 828\n\t    data._hNewCurAutorun = null;                                                                                     // 829\n\t    // On new data autorun handler                                                                                   // 830\n\t    // (autorun for cursor.fetch).                                                                                   // 831\n\t    data._hDataAutorun = null;                                                                                       // 832\n                                                                                                                      // 833\n\t    if (angular.isDefined(collection)) {                                                                             // 834\n\t      data.$$collection = collection;                                                                                // 835\n\t    } else {                                                                                                         // 836\n\t      var cursor = curDefFunc();                                                                                     // 837\n\t      data.$$collection = $meteorUtils.getCollectionByName(cursor.collection.name);                                  // 838\n\t    }                                                                                                                // 839\n                                                                                                                      // 840\n\t    _underscore2.default.extend(data, AngularMeteorCollection);                                                      // 841\n\t    data._startCurAutorun(curDefFunc, autoClientSave);                                                               // 842\n                                                                                                                      // 843\n\t    return data;                                                                                                     // 844\n\t  }                                                                                                                  // 845\n                                                                                                                      // 846\n\t  AngularMeteorCollection._startCurAutorun = function (curDefFunc, autoClientSave) {                                 // 847\n\t    var self = this;                                                                                                 // 848\n                                                                                                                      // 849\n\t    self._hNewCurAutorun = Tracker.autorun(function () {                                                             // 850\n\t      // When the reactive func gets recomputated we need to stop any previous                                       // 851\n\t      // observeChanges.                                                                                             // 852\n\t      Tracker.onInvalidate(function () {                                                                             // 853\n\t        self._stopCursor();                                                                                          // 854\n\t      });                                                                                                            // 855\n                                                                                                                      // 856\n\t      if (autoClientSave) self._setAutoClientSave();                                                                 // 857\n\t      self._updateCursor(curDefFunc(), autoClientSave);                                                              // 858\n\t    });                                                                                                              // 859\n\t  };                                                                                                                 // 860\n                                                                                                                      // 861\n\t  AngularMeteorCollection.subscribe = function () {                                                                  // 862\n\t    $meteorSubscribe.subscribe.apply(this, arguments);                                                               // 863\n\t    return this;                                                                                                     // 864\n\t  };                                                                                                                 // 865\n                                                                                                                      // 866\n\t  AngularMeteorCollection.save = function (docs, useUnsetModifier) {                                                 // 867\n\t    // save whole collection                                                                                         // 868\n\t    if (!docs) docs = this;                                                                                          // 869\n\t    // save single doc                                                                                               // 870\n\t    docs = [].concat(docs);                                                                                          // 871\n                                                                                                                      // 872\n\t    var promises = docs.map(function (doc) {                                                                         // 873\n\t      return this._upsertDoc(doc, useUnsetModifier);                                                                 // 874\n\t    }, this);                                                                                                        // 875\n                                                                                                                      // 876\n\t    return $meteorUtils.promiseAll(promises);                                                                        // 877\n\t  };                                                                                                                 // 878\n                                                                                                                      // 879\n\t  AngularMeteorCollection._upsertDoc = function (doc, useUnsetModifier) {                                            // 880\n\t    var deferred = $q.defer();                                                                                       // 881\n\t    var collection = this.$$collection;                                                                              // 882\n\t    var createFulfill = _underscore2.default.partial($meteorUtils.fulfill, deferred, null);                          // 883\n                                                                                                                      // 884\n\t    // delete $$hashkey                                                                                              // 885\n\t    doc = $meteorUtils.stripDollarPrefixedKeys(doc);                                                                 // 886\n\t    var docId = doc._id;                                                                                             // 887\n\t    var isExist = collection.findOne(docId);                                                                         // 888\n                                                                                                                      // 889\n\t    // update                                                                                                        // 890\n\t    if (isExist) {                                                                                                   // 891\n\t      // Deletes _id property (from the copy) so that                                                                // 892\n\t      // it can be $set using update.                                                                                // 893\n\t      delete doc._id;                                                                                                // 894\n\t      var modifier = useUnsetModifier ? { $unset: doc } : { $set: doc };                                             // 895\n\t      // NOTE: do not use #upsert() method, since it does not exist in some collections                              // 896\n\t      collection.update(docId, modifier, createFulfill(function () {                                                 // 897\n\t        return { _id: docId, action: 'updated' };                                                                    // 898\n\t      }));                                                                                                           // 899\n\t    }                                                                                                                // 900\n\t    // insert                                                                                                        // 901\n\t    else {                                                                                                           // 902\n\t        collection.insert(doc, createFulfill(function (id) {                                                         // 903\n\t          return { _id: id, action: 'inserted' };                                                                    // 904\n\t        }));                                                                                                         // 905\n\t      }                                                                                                              // 906\n                                                                                                                      // 907\n\t    return deferred.promise;                                                                                         // 908\n\t  };                                                                                                                 // 909\n                                                                                                                      // 910\n\t  // performs $pull operations parallely.                                                                            // 911\n\t  // used for handling splice operations returned from getUpdates() to prevent conflicts.                            // 912\n\t  // see issue: https://github.com/Urigo/angular-meteor/issues/793                                                   // 913\n\t  AngularMeteorCollection._updateDiff = function (selector, update, callback) {                                      // 914\n\t    callback = callback || angular.noop;                                                                             // 915\n\t    var setters = _underscore2.default.omit(update, '$pull');                                                        // 916\n\t    var updates = [setters];                                                                                         // 917\n                                                                                                                      // 918\n\t    _underscore2.default.each(update.$pull, function (pull, prop) {                                                  // 919\n\t      var puller = {};                                                                                               // 920\n\t      puller[prop] = pull;                                                                                           // 921\n\t      updates.push({ $pull: puller });                                                                               // 922\n\t    });                                                                                                              // 923\n                                                                                                                      // 924\n\t    this._updateParallel(selector, updates, callback);                                                               // 925\n\t  };                                                                                                                 // 926\n                                                                                                                      // 927\n\t  // performs each update operation parallely                                                                        // 928\n\t  AngularMeteorCollection._updateParallel = function (selector, updates, callback) {                                 // 929\n\t    var self = this;                                                                                                 // 930\n\t    var done = _underscore2.default.after(updates.length, callback);                                                 // 931\n                                                                                                                      // 932\n\t    var next = function next(err, affectedDocsNum) {                                                                 // 933\n\t      if (err) return callback(err);                                                                                 // 934\n\t      done(null, affectedDocsNum);                                                                                   // 935\n\t    };                                                                                                               // 936\n                                                                                                                      // 937\n\t    _underscore2.default.each(updates, function (update) {                                                           // 938\n\t      self.$$collection.update(selector, update, next);                                                              // 939\n\t    });                                                                                                              // 940\n\t  };                                                                                                                 // 941\n                                                                                                                      // 942\n\t  AngularMeteorCollection.remove = function (keyOrDocs) {                                                            // 943\n\t    var keys;                                                                                                        // 944\n                                                                                                                      // 945\n\t    // remove whole collection                                                                                       // 946\n\t    if (!keyOrDocs) {                                                                                                // 947\n\t      keys = _underscore2.default.pluck(this, '_id');                                                                // 948\n\t    }                                                                                                                // 949\n\t    // remove docs                                                                                                   // 950\n\t    else {                                                                                                           // 951\n\t        keyOrDocs = [].concat(keyOrDocs);                                                                            // 952\n                                                                                                                      // 953\n\t        keys = _underscore2.default.map(keyOrDocs, function (keyOrDoc) {                                             // 954\n\t          return keyOrDoc._id || keyOrDoc;                                                                           // 955\n\t        });                                                                                                          // 956\n\t      }                                                                                                              // 957\n                                                                                                                      // 958\n\t    // Checks if all keys are correct.                                                                               // 959\n\t    check(keys, [Match.OneOf(String, Mongo.ObjectID)]);                                                              // 960\n                                                                                                                      // 961\n\t    var promises = keys.map(function (key) {                                                                         // 962\n\t      return this._removeDoc(key);                                                                                   // 963\n\t    }, this);                                                                                                        // 964\n                                                                                                                      // 965\n\t    return $meteorUtils.promiseAll(promises);                                                                        // 966\n\t  };                                                                                                                 // 967\n                                                                                                                      // 968\n\t  AngularMeteorCollection._removeDoc = function (id) {                                                               // 969\n\t    var deferred = $q.defer();                                                                                       // 970\n\t    var collection = this.$$collection;                                                                              // 971\n\t    var fulfill = $meteorUtils.fulfill(deferred, null, { _id: id, action: 'removed' });                              // 972\n\t    collection.remove(id, fulfill);                                                                                  // 973\n\t    return deferred.promise;                                                                                         // 974\n\t  };                                                                                                                 // 975\n                                                                                                                      // 976\n\t  AngularMeteorCollection._updateCursor = function (cursor, autoClientSave) {                                        // 977\n\t    var self = this;                                                                                                 // 978\n\t    // XXX - consider adding an option for a non-orderd result for faster performance                                // 979\n\t    if (self._hObserve) self._stopObserving();                                                                       // 980\n                                                                                                                      // 981\n\t    self._hObserve = cursor.observe({                                                                                // 982\n\t      addedAt: function addedAt(doc, atIndex) {                                                                      // 983\n\t        self.splice(atIndex, 0, doc);                                                                                // 984\n\t        self._serverBackup.splice(atIndex, 0, doc);                                                                  // 985\n\t        self._setServerUpdateMode();                                                                                 // 986\n\t      },                                                                                                             // 987\n                                                                                                                      // 988\n\t      changedAt: function changedAt(doc, oldDoc, atIndex) {                                                          // 989\n\t        diffArray.deepCopyChanges(self[atIndex], doc);                                                               // 990\n\t        diffArray.deepCopyRemovals(self[atIndex], doc);                                                              // 991\n\t        self._serverBackup[atIndex] = self[atIndex];                                                                 // 992\n\t        self._setServerUpdateMode();                                                                                 // 993\n\t      },                                                                                                             // 994\n                                                                                                                      // 995\n\t      movedTo: function movedTo(doc, fromIndex, toIndex) {                                                           // 996\n\t        self.splice(fromIndex, 1);                                                                                   // 997\n\t        self.splice(toIndex, 0, doc);                                                                                // 998\n\t        self._serverBackup.splice(fromIndex, 1);                                                                     // 999\n\t        self._serverBackup.splice(toIndex, 0, doc);                                                                  // 1000\n\t        self._setServerUpdateMode();                                                                                 // 1001\n\t      },                                                                                                             // 1002\n                                                                                                                      // 1003\n\t      removedAt: function removedAt(oldDoc) {                                                                        // 1004\n\t        var removedIndex = $meteorUtils.findIndexById(self, oldDoc);                                                 // 1005\n                                                                                                                      // 1006\n\t        if (removedIndex != -1) {                                                                                    // 1007\n\t          self.splice(removedIndex, 1);                                                                              // 1008\n\t          self._serverBackup.splice(removedIndex, 1);                                                                // 1009\n\t          self._setServerUpdateMode();                                                                               // 1010\n\t        } else {                                                                                                     // 1011\n\t          // If it's been removed on client then it's already not in collection                                      // 1012\n\t          // itself but still is in the _serverBackup.                                                               // 1013\n\t          removedIndex = $meteorUtils.findIndexById(self._serverBackup, oldDoc);                                     // 1014\n                                                                                                                      // 1015\n\t          if (removedIndex != -1) {                                                                                  // 1016\n\t            self._serverBackup.splice(removedIndex, 1);                                                              // 1017\n\t          }                                                                                                          // 1018\n\t        }                                                                                                            // 1019\n\t      }                                                                                                              // 1020\n\t    });                                                                                                              // 1021\n                                                                                                                      // 1022\n\t    self._hDataAutorun = Tracker.autorun(function () {                                                               // 1023\n\t      cursor.fetch();                                                                                                // 1024\n\t      if (self._serverMode) self._unsetServerUpdateMode(autoClientSave);                                             // 1025\n\t    });                                                                                                              // 1026\n\t  };                                                                                                                 // 1027\n                                                                                                                      // 1028\n\t  AngularMeteorCollection._stopObserving = function () {                                                             // 1029\n\t    this._hObserve.stop();                                                                                           // 1030\n\t    this._hDataAutorun.stop();                                                                                       // 1031\n\t    delete this._serverMode;                                                                                         // 1032\n\t    delete this._hUnsetTimeout;                                                                                      // 1033\n\t  };                                                                                                                 // 1034\n                                                                                                                      // 1035\n\t  AngularMeteorCollection._setServerUpdateMode = function (name) {                                                   // 1036\n\t    this._serverMode = true;                                                                                         // 1037\n\t    // To simplify server update logic, we don't follow                                                              // 1038\n\t    // updates from the client at the same time.                                                                     // 1039\n\t    this._unsetAutoClientSave();                                                                                     // 1040\n\t  };                                                                                                                 // 1041\n                                                                                                                      // 1042\n\t  // Here we use $timeout to combine multiple updates that go                                                        // 1043\n\t  // each one after another.                                                                                         // 1044\n\t  AngularMeteorCollection._unsetServerUpdateMode = function (autoClientSave) {                                       // 1045\n\t    var self = this;                                                                                                 // 1046\n                                                                                                                      // 1047\n\t    if (self._hUnsetTimeout) {                                                                                       // 1048\n\t      $timeout.cancel(self._hUnsetTimeout);                                                                          // 1049\n\t      self._hUnsetTimeout = null;                                                                                    // 1050\n\t    }                                                                                                                // 1051\n                                                                                                                      // 1052\n\t    self._hUnsetTimeout = $timeout(function () {                                                                     // 1053\n\t      self._serverMode = false;                                                                                      // 1054\n\t      // Finds updates that was potentially done from the client side                                                // 1055\n\t      // and saves them.                                                                                             // 1056\n\t      var changes = diffArray.getChanges(self, self._serverBackup, self._diffArrayFunc);                             // 1057\n\t      self._saveChanges(changes);                                                                                    // 1058\n\t      // After, continues following client updates.                                                                  // 1059\n\t      if (autoClientSave) self._setAutoClientSave();                                                                 // 1060\n\t    }, 0);                                                                                                           // 1061\n\t  };                                                                                                                 // 1062\n                                                                                                                      // 1063\n\t  AngularMeteorCollection.stop = function () {                                                                       // 1064\n\t    this._stopCursor();                                                                                              // 1065\n\t    this._hNewCurAutorun.stop();                                                                                     // 1066\n\t  };                                                                                                                 // 1067\n                                                                                                                      // 1068\n\t  AngularMeteorCollection._stopCursor = function () {                                                                // 1069\n\t    this._unsetAutoClientSave();                                                                                     // 1070\n                                                                                                                      // 1071\n\t    if (this._hObserve) {                                                                                            // 1072\n\t      this._hObserve.stop();                                                                                         // 1073\n\t      this._hDataAutorun.stop();                                                                                     // 1074\n\t    }                                                                                                                // 1075\n                                                                                                                      // 1076\n\t    this.splice(0);                                                                                                  // 1077\n\t    this._serverBackup.splice(0);                                                                                    // 1078\n\t  };                                                                                                                 // 1079\n                                                                                                                      // 1080\n\t  AngularMeteorCollection._unsetAutoClientSave = function (name) {                                                   // 1081\n\t    if (this._hRegAutoBind) {                                                                                        // 1082\n\t      this._hRegAutoBind();                                                                                          // 1083\n\t      this._hRegAutoBind = null;                                                                                     // 1084\n\t    }                                                                                                                // 1085\n\t  };                                                                                                                 // 1086\n                                                                                                                      // 1087\n\t  AngularMeteorCollection._setAutoClientSave = function () {                                                         // 1088\n\t    var self = this;                                                                                                 // 1089\n                                                                                                                      // 1090\n\t    // Always unsets auto save to keep only one $watch handler.                                                      // 1091\n\t    self._unsetAutoClientSave();                                                                                     // 1092\n                                                                                                                      // 1093\n\t    self._hRegAutoBind = $rootScope.$watch(function () {                                                             // 1094\n\t      return self;                                                                                                   // 1095\n\t    }, function (nItems, oItems) {                                                                                   // 1096\n\t      if (nItems === oItems) return;                                                                                 // 1097\n                                                                                                                      // 1098\n\t      var changes = diffArray.getChanges(self, oItems, self._diffArrayFunc);                                         // 1099\n\t      self._unsetAutoClientSave();                                                                                   // 1100\n\t      self._saveChanges(changes);                                                                                    // 1101\n\t      self._setAutoClientSave();                                                                                     // 1102\n\t    }, true);                                                                                                        // 1103\n\t  };                                                                                                                 // 1104\n                                                                                                                      // 1105\n\t  AngularMeteorCollection._saveChanges = function (changes) {                                                        // 1106\n\t    var self = this;                                                                                                 // 1107\n                                                                                                                      // 1108\n\t    // Saves added documents                                                                                         // 1109\n\t    // Using reversed iteration to prevent indexes from changing during splice                                       // 1110\n\t    var addedDocs = changes.added.reverse().map(function (descriptor) {                                              // 1111\n\t      self.splice(descriptor.index, 1);                                                                              // 1112\n\t      return descriptor.item;                                                                                        // 1113\n\t    });                                                                                                              // 1114\n                                                                                                                      // 1115\n\t    if (addedDocs.length) self.save(addedDocs);                                                                      // 1116\n                                                                                                                      // 1117\n\t    // Removes deleted documents                                                                                     // 1118\n\t    var removedDocs = changes.removed.map(function (descriptor) {                                                    // 1119\n\t      return descriptor.item;                                                                                        // 1120\n\t    });                                                                                                              // 1121\n                                                                                                                      // 1122\n\t    if (removedDocs.length) self.remove(removedDocs);                                                                // 1123\n                                                                                                                      // 1124\n\t    // Updates changed documents                                                                                     // 1125\n\t    changes.changed.forEach(function (descriptor) {                                                                  // 1126\n\t      self._updateDiff(descriptor.selector, descriptor.modifier);                                                    // 1127\n\t    });                                                                                                              // 1128\n\t  };                                                                                                                 // 1129\n                                                                                                                      // 1130\n\t  return AngularMeteorCollection;                                                                                    // 1131\n\t}]);                                                                                                                 // 1132\n                                                                                                                      // 1133\n\tangularMeteorCollection.factory('$meteorCollectionFS', ['$meteorCollection', 'diffArray', '$angularMeteorSettings', function ($meteorCollection, diffArray, $angularMeteorSettings) {\n\t  function $meteorCollectionFS(reactiveFunc, autoClientSave, collection) {                                           // 1135\n                                                                                                                      // 1136\n\t    if (!$angularMeteorSettings.suppressWarnings) console.warn('[angular-meteor.$meteorCollectionFS] Please note that this method is deprecated since 1.3.0 and will be removed in 1.4.0! For more info: http://www.angular-meteor.com/api/1.3.0/files. You can disable this warning by following this guide http://www.angular-meteor.com/api/1.3.6/settings');\n\t    return new $meteorCollection(reactiveFunc, autoClientSave, collection, diffArray.shallow);                       // 1138\n\t  }                                                                                                                  // 1139\n                                                                                                                      // 1140\n\t  return $meteorCollectionFS;                                                                                        // 1141\n\t}]);                                                                                                                 // 1142\n                                                                                                                      // 1143\n\tangularMeteorCollection.factory('$meteorCollection', ['AngularMeteorCollection', '$rootScope', 'diffArray', function (AngularMeteorCollection, $rootScope, diffArray) {\n\t  function $meteorCollection(reactiveFunc, autoClientSave, collection, diffFn) {                                     // 1145\n\t    // Validate parameters                                                                                           // 1146\n\t    if (!reactiveFunc) {                                                                                             // 1147\n\t      throw new TypeError('The first argument of $meteorCollection is undefined.');                                  // 1148\n\t    }                                                                                                                // 1149\n                                                                                                                      // 1150\n\t    if (!(angular.isFunction(reactiveFunc) || angular.isFunction(reactiveFunc.find))) {                              // 1151\n\t      throw new TypeError('The first argument of $meteorCollection must be a function or ' + 'a have a find function property.');\n\t    }                                                                                                                // 1153\n                                                                                                                      // 1154\n\t    if (!angular.isFunction(reactiveFunc)) {                                                                         // 1155\n\t      collection = angular.isDefined(collection) ? collection : reactiveFunc;                                        // 1156\n\t      reactiveFunc = _underscore2.default.bind(reactiveFunc.find, reactiveFunc);                                     // 1157\n\t    }                                                                                                                // 1158\n                                                                                                                      // 1159\n\t    // By default auto save - true.                                                                                  // 1160\n\t    autoClientSave = angular.isDefined(autoClientSave) ? autoClientSave : true;                                      // 1161\n\t    diffFn = diffFn || diffArray;                                                                                    // 1162\n\t    return new AngularMeteorCollection(reactiveFunc, collection, diffFn, autoClientSave);                            // 1163\n\t  }                                                                                                                  // 1164\n                                                                                                                      // 1165\n\t  return $meteorCollection;                                                                                          // 1166\n\t}]);                                                                                                                 // 1167\n                                                                                                                      // 1168\n\tangularMeteorCollection.run(['$rootScope', '$meteorCollection', '$meteorCollectionFS', '$meteorStopper', function ($rootScope, $meteorCollection, $meteorCollectionFS, $meteorStopper) {\n\t  var scopeProto = Object.getPrototypeOf($rootScope);                                                                // 1170\n\t  scopeProto.$meteorCollection = $meteorStopper($meteorCollection);                                                  // 1171\n\t  scopeProto.$meteorCollectionFS = $meteorStopper($meteorCollectionFS);                                              // 1172\n\t}]);                                                                                                                 // 1173\n                                                                                                                      // 1174\n/***/ },                                                                                                              // 1175\n/* 10 */                                                                                                              // 1176\n/***/ function(module, exports, __webpack_require__) {                                                                // 1177\n                                                                                                                      // 1178\n\t'use strict';                                                                                                        // 1179\n                                                                                                                      // 1180\n\tvar _underscore = __webpack_require__(2);                                                                            // 1181\n                                                                                                                      // 1182\n\tvar _underscore2 = _interopRequireDefault(_underscore);                                                              // 1183\n                                                                                                                      // 1184\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }                      // 1185\n                                                                                                                      // 1186\n\t'use strict'; /*global                                                                                               // 1187\n\t                angular, _, Mongo                                                                                    // 1188\n\t              */                                                                                                     // 1189\n                                                                                                                      // 1190\n\tvar angularMeteorObject = angular.module('angular-meteor.object', ['angular-meteor.utils', 'angular-meteor.subscribe', 'angular-meteor.collection', 'getUpdates', 'diffArray', 'angular-meteor.settings']);\n                                                                                                                      // 1192\n\tangularMeteorObject.factory('AngularMeteorObject', ['$q', '$meteorSubscribe', '$meteorUtils', 'diffArray', 'getUpdates', 'AngularMeteorCollection', '$angularMeteorSettings', function ($q, $meteorSubscribe, $meteorUtils, diffArray, getUpdates, AngularMeteorCollection, $angularMeteorSettings) {\n                                                                                                                      // 1194\n\t  // A list of internals properties to not watch for, nor pass to the Document on update and etc.                    // 1195\n\t  AngularMeteorObject.$$internalProps = ['$$collection', '$$options', '$$id', '$$hashkey', '$$internalProps', '$$scope', 'bind', 'save', 'reset', 'subscribe', 'stop', 'autorunComputation', 'unregisterAutoBind', 'unregisterAutoDestroy', 'getRawObject', '_auto', '_setAutos', '_eventEmitter', '_serverBackup', '_updateDiff', '_updateParallel', '_getId'];\n                                                                                                                      // 1197\n\t  function AngularMeteorObject(collection, selector, options) {                                                      // 1198\n\t    if (!$angularMeteorSettings.suppressWarnings) console.warn('[angular-meteor.$meteorObject] Please note that this method is deprecated since 1.3.0 and will be removed in 1.4.0! For more info: http://www.angular-meteor.com/api/1.3.0/meteorObject. You can disable this warning by following this guide http://www.angular-meteor.com/api/1.3.6/settings');\n\t    // Make data not be an object so we can extend it to preserve                                                    // 1200\n\t    // Collection Helpers and the like                                                                               // 1201\n\t    var helpers = collection._helpers;                                                                               // 1202\n\t    var data = _underscore2.default.isFunction(helpers) ? Object.create(helpers.prototype) : {};                     // 1203\n\t    var doc = collection.findOne(selector, options);                                                                 // 1204\n\t    var collectionExtension = _underscore2.default.pick(AngularMeteorCollection, '_updateParallel');                 // 1205\n\t    _underscore2.default.extend(data, doc);                                                                          // 1206\n\t    _underscore2.default.extend(data, AngularMeteorObject);                                                          // 1207\n\t    _underscore2.default.extend(data, collectionExtension);                                                          // 1208\n                                                                                                                      // 1209\n\t    // Omit options that may spoil document finding                                                                  // 1210\n\t    data.$$options = _underscore2.default.omit(options, 'skip', 'limit');                                            // 1211\n\t    data.$$collection = collection;                                                                                  // 1212\n\t    data.$$id = data._getId(selector);                                                                               // 1213\n\t    data._serverBackup = doc || {};                                                                                  // 1214\n                                                                                                                      // 1215\n\t    return data;                                                                                                     // 1216\n\t  }                                                                                                                  // 1217\n                                                                                                                      // 1218\n\t  AngularMeteorObject.getRawObject = function () {                                                                   // 1219\n\t    return angular.copy(_underscore2.default.omit(this, this.$$internalProps));                                      // 1220\n\t  };                                                                                                                 // 1221\n                                                                                                                      // 1222\n\t  AngularMeteorObject.subscribe = function () {                                                                      // 1223\n\t    $meteorSubscribe.subscribe.apply(this, arguments);                                                               // 1224\n\t    return this;                                                                                                     // 1225\n\t  };                                                                                                                 // 1226\n                                                                                                                      // 1227\n\t  AngularMeteorObject.save = function (custom) {                                                                     // 1228\n\t    var deferred = $q.defer();                                                                                       // 1229\n\t    var collection = this.$$collection;                                                                              // 1230\n\t    var createFulfill = _underscore2.default.partial($meteorUtils.fulfill, deferred, null);                          // 1231\n\t    var oldDoc = collection.findOne(this.$$id);                                                                      // 1232\n\t    var mods;                                                                                                        // 1233\n                                                                                                                      // 1234\n\t    // update                                                                                                        // 1235\n\t    if (oldDoc) {                                                                                                    // 1236\n\t      if (custom) mods = { $set: custom };else {                                                                     // 1237\n\t        mods = getUpdates(oldDoc, this.getRawObject());                                                              // 1238\n\t        // If there are no updates, there is nothing to do here, returning                                           // 1239\n\t        if (_underscore2.default.isEmpty(mods)) {                                                                    // 1240\n\t          return $q.when({ action: 'updated' });                                                                     // 1241\n\t        }                                                                                                            // 1242\n\t      }                                                                                                              // 1243\n                                                                                                                      // 1244\n\t      // NOTE: do not use #upsert() method, since it does not exist in some collections                              // 1245\n\t      this._updateDiff(mods, createFulfill({ action: 'updated' }));                                                  // 1246\n\t    }                                                                                                                // 1247\n\t    // insert                                                                                                        // 1248\n\t    else {                                                                                                           // 1249\n\t        if (custom) mods = _underscore2.default.clone(custom);else mods = this.getRawObject();                       // 1250\n                                                                                                                      // 1251\n\t        mods._id = mods._id || this.$$id;                                                                            // 1252\n\t        collection.insert(mods, createFulfill({ action: 'inserted' }));                                              // 1253\n\t      }                                                                                                              // 1254\n                                                                                                                      // 1255\n\t    return deferred.promise;                                                                                         // 1256\n\t  };                                                                                                                 // 1257\n                                                                                                                      // 1258\n\t  AngularMeteorObject._updateDiff = function (update, callback) {                                                    // 1259\n\t    var selector = this.$$id;                                                                                        // 1260\n\t    AngularMeteorCollection._updateDiff.call(this, selector, update, callback);                                      // 1261\n\t  };                                                                                                                 // 1262\n                                                                                                                      // 1263\n\t  AngularMeteorObject.reset = function (keepClientProps) {                                                           // 1264\n\t    var self = this;                                                                                                 // 1265\n\t    var options = this.$$options;                                                                                    // 1266\n\t    var id = this.$$id;                                                                                              // 1267\n\t    var doc = this.$$collection.findOne(id, options);                                                                // 1268\n                                                                                                                      // 1269\n\t    if (doc) {                                                                                                       // 1270\n\t      // extend SubObject                                                                                            // 1271\n\t      var docKeys = _underscore2.default.keys(doc);                                                                  // 1272\n\t      var docExtension = _underscore2.default.pick(doc, docKeys);                                                    // 1273\n\t      var clientProps;                                                                                               // 1274\n                                                                                                                      // 1275\n\t      _underscore2.default.extend(self, docExtension);                                                               // 1276\n\t      _underscore2.default.extend(self._serverBackup, docExtension);                                                 // 1277\n                                                                                                                      // 1278\n\t      if (keepClientProps) {                                                                                         // 1279\n\t        clientProps = _underscore2.default.intersection(_underscore2.default.keys(self), _underscore2.default.keys(self._serverBackup));\n\t      } else {                                                                                                       // 1281\n\t        clientProps = _underscore2.default.keys(self);                                                               // 1282\n\t      }                                                                                                              // 1283\n                                                                                                                      // 1284\n\t      var serverProps = _underscore2.default.keys(doc);                                                              // 1285\n\t      var removedKeys = _underscore2.default.difference(clientProps, serverProps, self.$$internalProps);             // 1286\n                                                                                                                      // 1287\n\t      removedKeys.forEach(function (prop) {                                                                          // 1288\n\t        delete self[prop];                                                                                           // 1289\n\t        delete self._serverBackup[prop];                                                                             // 1290\n\t      });                                                                                                            // 1291\n\t    } else {                                                                                                         // 1292\n\t      _underscore2.default.keys(this.getRawObject()).forEach(function (prop) {                                       // 1293\n\t        delete self[prop];                                                                                           // 1294\n\t      });                                                                                                            // 1295\n                                                                                                                      // 1296\n\t      self._serverBackup = {};                                                                                       // 1297\n\t    }                                                                                                                // 1298\n\t  };                                                                                                                 // 1299\n                                                                                                                      // 1300\n\t  AngularMeteorObject.stop = function () {                                                                           // 1301\n\t    if (this.unregisterAutoDestroy) this.unregisterAutoDestroy();                                                    // 1302\n                                                                                                                      // 1303\n\t    if (this.unregisterAutoBind) this.unregisterAutoBind();                                                          // 1304\n                                                                                                                      // 1305\n\t    if (this.autorunComputation && this.autorunComputation.stop) this.autorunComputation.stop();                     // 1306\n\t  };                                                                                                                 // 1307\n                                                                                                                      // 1308\n\t  AngularMeteorObject._getId = function (selector) {                                                                 // 1309\n\t    var options = _underscore2.default.extend({}, this.$$options, {                                                  // 1310\n\t      fields: { _id: 1 },                                                                                            // 1311\n\t      reactive: false,                                                                                               // 1312\n\t      transform: null                                                                                                // 1313\n\t    });                                                                                                              // 1314\n                                                                                                                      // 1315\n\t    var doc = this.$$collection.findOne(selector, options);                                                          // 1316\n                                                                                                                      // 1317\n\t    if (doc) return doc._id;                                                                                         // 1318\n\t    if (selector instanceof Mongo.ObjectID) return selector;                                                         // 1319\n\t    if (_underscore2.default.isString(selector)) return selector;                                                    // 1320\n\t    return new Mongo.ObjectID();                                                                                     // 1321\n\t  };                                                                                                                 // 1322\n                                                                                                                      // 1323\n\t  return AngularMeteorObject;                                                                                        // 1324\n\t}]);                                                                                                                 // 1325\n                                                                                                                      // 1326\n\tangularMeteorObject.factory('$meteorObject', ['$rootScope', '$meteorUtils', 'getUpdates', 'AngularMeteorObject', function ($rootScope, $meteorUtils, getUpdates, AngularMeteorObject) {\n\t  function $meteorObject(collection, id, auto, options) {                                                            // 1328\n\t    // Validate parameters                                                                                           // 1329\n\t    if (!collection) {                                                                                               // 1330\n\t      throw new TypeError(\"The first argument of $meteorObject is undefined.\");                                      // 1331\n\t    }                                                                                                                // 1332\n                                                                                                                      // 1333\n\t    if (!angular.isFunction(collection.findOne)) {                                                                   // 1334\n\t      throw new TypeError(\"The first argument of $meteorObject must be a function or a have a findOne function property.\");\n\t    }                                                                                                                // 1336\n                                                                                                                      // 1337\n\t    var data = new AngularMeteorObject(collection, id, options);                                                     // 1338\n\t    // Making auto default true - http://stackoverflow.com/a/15464208/1426570                                        // 1339\n\t    data._auto = auto !== false;                                                                                     // 1340\n\t    _underscore2.default.extend(data, $meteorObject);                                                                // 1341\n\t    data._setAutos();                                                                                                // 1342\n\t    return data;                                                                                                     // 1343\n\t  }                                                                                                                  // 1344\n                                                                                                                      // 1345\n\t  $meteorObject._setAutos = function () {                                                                            // 1346\n\t    var self = this;                                                                                                 // 1347\n                                                                                                                      // 1348\n\t    this.autorunComputation = $meteorUtils.autorun($rootScope, function () {                                         // 1349\n\t      self.reset(true);                                                                                              // 1350\n\t    });                                                                                                              // 1351\n                                                                                                                      // 1352\n\t    // Deep watches the model and performs autobind                                                                  // 1353\n\t    this.unregisterAutoBind = this._auto && $rootScope.$watch(function () {                                          // 1354\n\t      return self.getRawObject();                                                                                    // 1355\n\t    }, function (item, oldItem) {                                                                                    // 1356\n\t      if (item !== oldItem) self.save();                                                                             // 1357\n\t    }, true);                                                                                                        // 1358\n                                                                                                                      // 1359\n\t    this.unregisterAutoDestroy = $rootScope.$on('$destroy', function () {                                            // 1360\n\t      if (self && self.stop) self.pop();                                                                             // 1361\n\t    });                                                                                                              // 1362\n\t  };                                                                                                                 // 1363\n                                                                                                                      // 1364\n\t  return $meteorObject;                                                                                              // 1365\n\t}]);                                                                                                                 // 1366\n                                                                                                                      // 1367\n\tangularMeteorObject.run(['$rootScope', '$meteorObject', '$meteorStopper', function ($rootScope, $meteorObject, $meteorStopper) {\n\t  var scopeProto = Object.getPrototypeOf($rootScope);                                                                // 1369\n\t  scopeProto.$meteorObject = $meteorStopper($meteorObject);                                                          // 1370\n\t}]);                                                                                                                 // 1371\n                                                                                                                      // 1372\n/***/ },                                                                                                              // 1373\n/* 11 */                                                                                                              // 1374\n/***/ function(module, exports, __webpack_require__) {                                                                // 1375\n                                                                                                                      // 1376\n\t'use strict';                                                                                                        // 1377\n                                                                                                                      // 1378\n\tvar _underscore = __webpack_require__(2);                                                                            // 1379\n                                                                                                                      // 1380\n\tvar _underscore2 = _interopRequireDefault(_underscore);                                                              // 1381\n                                                                                                                      // 1382\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }                      // 1383\n                                                                                                                      // 1384\n\t'use strict'; /*global                                                                                               // 1385\n\t               angular, _, Package, Meteor                                                                           // 1386\n\t               */                                                                                                    // 1387\n                                                                                                                      // 1388\n\tvar angularMeteorUser = angular.module('angular-meteor.user', ['angular-meteor.utils', 'angular-meteor.core', 'angular-meteor.settings']);\n                                                                                                                      // 1390\n\t// requires package 'accounts-password'                                                                              // 1391\n\tangularMeteorUser.service('$meteorUser', ['$rootScope', '$meteorUtils', '$q', '$angularMeteorSettings', function ($rootScope, $meteorUtils, $q, $angularMeteorSettings) {\n                                                                                                                      // 1393\n\t  var pack = Package['accounts-base'];                                                                               // 1394\n\t  if (!pack) return;                                                                                                 // 1395\n                                                                                                                      // 1396\n\t  var self = this;                                                                                                   // 1397\n\t  var Accounts = pack.Accounts;                                                                                      // 1398\n                                                                                                                      // 1399\n\t  this.waitForUser = function () {                                                                                   // 1400\n\t    if (!$angularMeteorSettings.suppressWarnings) console.warn('[angular-meteor.waitForUser] Please note that this method is deprecated since 1.3.0 and will be removed in 1.4.0! http://info.meteor.com/blog/angular-meteor-1.3. You can disable this warning by following this guide http://www.angular-meteor.com/api/1.3.6/settings');\n                                                                                                                      // 1402\n\t    var deferred = $q.defer();                                                                                       // 1403\n                                                                                                                      // 1404\n\t    $meteorUtils.autorun($rootScope, function () {                                                                   // 1405\n\t      if (!Meteor.loggingIn()) deferred.resolve(Meteor.user());                                                      // 1406\n\t    }, true);                                                                                                        // 1407\n                                                                                                                      // 1408\n\t    return deferred.promise;                                                                                         // 1409\n\t  };                                                                                                                 // 1410\n                                                                                                                      // 1411\n\t  this.requireUser = function () {                                                                                   // 1412\n\t    if (!$angularMeteorSettings.suppressWarnings) {                                                                  // 1413\n\t      console.warn('[angular-meteor.requireUser] Please note that this method is deprecated since 1.3.0 and will be removed in 1.4.0! http://info.meteor.com/blog/angular-meteor-1.3. You can disable this warning by following this guide http://www.angular-meteor.com/api/1.3.6/settings');\n\t    }                                                                                                                // 1415\n                                                                                                                      // 1416\n\t    var deferred = $q.defer();                                                                                       // 1417\n                                                                                                                      // 1418\n\t    $meteorUtils.autorun($rootScope, function () {                                                                   // 1419\n\t      if (!Meteor.loggingIn()) {                                                                                     // 1420\n\t        if (Meteor.user() === null) deferred.reject(\"AUTH_REQUIRED\");else deferred.resolve(Meteor.user());           // 1421\n\t      }                                                                                                              // 1422\n\t    }, true);                                                                                                        // 1423\n                                                                                                                      // 1424\n\t    return deferred.promise;                                                                                         // 1425\n\t  };                                                                                                                 // 1426\n                                                                                                                      // 1427\n\t  this.requireValidUser = function (validatorFn) {                                                                   // 1428\n\t    if (!$angularMeteorSettings.suppressWarnings) console.warn('[angular-meteor.requireValidUser] Please note that this method is deprecated since 1.3.0 and will be removed in 1.4.0! http://info.meteor.com/blog/angular-meteor-1.3. You can disable this warning by following this guide http://www.angular-meteor.com/api/1.3.6/settings');\n                                                                                                                      // 1430\n\t    return self.requireUser(true).then(function (user) {                                                             // 1431\n\t      var valid = validatorFn(user);                                                                                 // 1432\n                                                                                                                      // 1433\n\t      if (valid === true) return user;else if (typeof valid === \"string\") return $q.reject(valid);else return $q.reject(\"FORBIDDEN\");\n\t    });                                                                                                              // 1435\n\t  };                                                                                                                 // 1436\n                                                                                                                      // 1437\n\t  this.loginWithPassword = $meteorUtils.promissor(Meteor, 'loginWithPassword');                                      // 1438\n\t  this.createUser = $meteorUtils.promissor(Accounts, 'createUser');                                                  // 1439\n\t  this.changePassword = $meteorUtils.promissor(Accounts, 'changePassword');                                          // 1440\n\t  this.forgotPassword = $meteorUtils.promissor(Accounts, 'forgotPassword');                                          // 1441\n\t  this.resetPassword = $meteorUtils.promissor(Accounts, 'resetPassword');                                            // 1442\n\t  this.verifyEmail = $meteorUtils.promissor(Accounts, 'verifyEmail');                                                // 1443\n\t  this.logout = $meteorUtils.promissor(Meteor, 'logout');                                                            // 1444\n\t  this.logoutOtherClients = $meteorUtils.promissor(Meteor, 'logoutOtherClients');                                    // 1445\n\t  this.loginWithFacebook = $meteorUtils.promissor(Meteor, 'loginWithFacebook');                                      // 1446\n\t  this.loginWithTwitter = $meteorUtils.promissor(Meteor, 'loginWithTwitter');                                        // 1447\n\t  this.loginWithGoogle = $meteorUtils.promissor(Meteor, 'loginWithGoogle');                                          // 1448\n\t  this.loginWithGithub = $meteorUtils.promissor(Meteor, 'loginWithGithub');                                          // 1449\n\t  this.loginWithMeteorDeveloperAccount = $meteorUtils.promissor(Meteor, 'loginWithMeteorDeveloperAccount');          // 1450\n\t  this.loginWithMeetup = $meteorUtils.promissor(Meteor, 'loginWithMeetup');                                          // 1451\n\t  this.loginWithWeibo = $meteorUtils.promissor(Meteor, 'loginWithWeibo');                                            // 1452\n\t}]);                                                                                                                 // 1453\n                                                                                                                      // 1454\n\tangularMeteorUser.run(['$rootScope', '$angularMeteorSettings', '$$Core', function ($rootScope, $angularMeteorSettings, $$Core) {\n                                                                                                                      // 1456\n\t  var ScopeProto = Object.getPrototypeOf($rootScope);                                                                // 1457\n\t  _underscore2.default.extend(ScopeProto, $$Core);                                                                   // 1458\n                                                                                                                      // 1459\n\t  $rootScope.autorun(function () {                                                                                   // 1460\n\t    if (!Meteor.user) return;                                                                                        // 1461\n\t    $rootScope.currentUser = Meteor.user();                                                                          // 1462\n\t    $rootScope.loggingIn = Meteor.loggingIn();                                                                       // 1463\n\t  });                                                                                                                // 1464\n\t}]);                                                                                                                 // 1465\n                                                                                                                      // 1466\n/***/ },                                                                                                              // 1467\n/* 12 */                                                                                                              // 1468\n/***/ function(module, exports, __webpack_require__) {                                                                // 1469\n                                                                                                                      // 1470\n\t'use strict';                                                                                                        // 1471\n                                                                                                                      // 1472\n\tvar _underscore = __webpack_require__(2);                                                                            // 1473\n                                                                                                                      // 1474\n\tvar _underscore2 = _interopRequireDefault(_underscore);                                                              // 1475\n                                                                                                                      // 1476\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }                      // 1477\n                                                                                                                      // 1478\n\t'use strict'; /*global                                                                                               // 1479\n\t               angular, _, Meteor                                                                                    // 1480\n\t               */                                                                                                    // 1481\n                                                                                                                      // 1482\n\tvar angularMeteorMethods = angular.module('angular-meteor.methods', ['angular-meteor.utils', 'angular-meteor.settings']);\n                                                                                                                      // 1484\n\tangularMeteorMethods.service('$meteorMethods', ['$q', '$meteorUtils', '$angularMeteorSettings', function ($q, $meteorUtils, $angularMeteorSettings) {\n\t  this.call = function () {                                                                                          // 1486\n\t    if (!$angularMeteorSettings.suppressWarnings) console.warn('[angular-meteor.$meteor.call] Please note that this method is deprecated since 1.3.0 and will be removed in 1.4.0! For more info: http://www.angular-meteor.com/api/1.3.0/methods. You can disable this warning by following this guide http://www.angular-meteor.com/api/1.3.6/settings');\n                                                                                                                      // 1488\n\t    var deferred = $q.defer();                                                                                       // 1489\n\t    var fulfill = $meteorUtils.fulfill(deferred);                                                                    // 1490\n\t    var args = _underscore2.default.toArray(arguments).concat(fulfill);                                              // 1491\n\t    Meteor.call.apply(this, args);                                                                                   // 1492\n\t    return deferred.promise;                                                                                         // 1493\n\t  };                                                                                                                 // 1494\n\t}]);                                                                                                                 // 1495\n                                                                                                                      // 1496\n/***/ },                                                                                                              // 1497\n/* 13 */                                                                                                              // 1498\n/***/ function(module, exports) {                                                                                     // 1499\n                                                                                                                      // 1500\n\t/*global                                                                                                             // 1501\n\t angular, Session                                                                                                    // 1502\n\t */                                                                                                                  // 1503\n                                                                                                                      // 1504\n\t'use strict';                                                                                                        // 1505\n                                                                                                                      // 1506\n\tvar angularMeteorSession = angular.module('angular-meteor.session', ['angular-meteor.utils', 'angular-meteor.settings']);\n                                                                                                                      // 1508\n\tangularMeteorSession.factory('$meteorSession', ['$meteorUtils', '$parse', '$angularMeteorSettings', function ($meteorUtils, $parse, $angularMeteorSettings) {\n\t  return function (session) {                                                                                        // 1510\n                                                                                                                      // 1511\n\t    return {                                                                                                         // 1512\n                                                                                                                      // 1513\n\t      bind: function bind(scope, model) {                                                                            // 1514\n\t        if (!$angularMeteorSettings.suppressWarnings) console.warn('[angular-meteor.session.bind] Please note that this method is deprecated since 1.3.0 and will be removed in 1.4.0! http://www.angular-meteor.com/api/1.3.0/session. You can disable this warning by following this guide http://www.angular-meteor.com/api/1.3.6/settings');\n                                                                                                                      // 1516\n\t        var getter = $parse(model);                                                                                  // 1517\n\t        var setter = getter.assign;                                                                                  // 1518\n\t        $meteorUtils.autorun(scope, function () {                                                                    // 1519\n\t          setter(scope, Session.get(session));                                                                       // 1520\n\t        });                                                                                                          // 1521\n                                                                                                                      // 1522\n\t        scope.$watch(model, function (newItem, oldItem) {                                                            // 1523\n\t          Session.set(session, getter(scope));                                                                       // 1524\n\t        }, true);                                                                                                    // 1525\n\t      }                                                                                                              // 1526\n\t    };                                                                                                               // 1527\n\t  };                                                                                                                 // 1528\n\t}]);                                                                                                                 // 1529\n                                                                                                                      // 1530\n/***/ },                                                                                                              // 1531\n/* 14 */                                                                                                              // 1532\n/***/ function(module, exports) {                                                                                     // 1533\n                                                                                                                      // 1534\n\t/*global                                                                                                             // 1535\n\t angular, Package                                                                                                    // 1536\n\t */                                                                                                                  // 1537\n                                                                                                                      // 1538\n\t'use strict';                                                                                                        // 1539\n                                                                                                                      // 1540\n\tvar angularMeteorCamera = angular.module('angular-meteor.camera', ['angular-meteor.utils', 'angular-meteor.settings']);\n                                                                                                                      // 1542\n\t// requires package 'mdg:camera'                                                                                     // 1543\n\tangularMeteorCamera.service('$meteorCamera', ['$q', '$meteorUtils', '$angularMeteorSettings', function ($q, $meteorUtils, $angularMeteorSettings) {\n\t  if (!$angularMeteorSettings.suppressWarnings) console.warn('[angular-meteor.camera] Please note that this module has moved to a separate package and is deprecated since 1.3.0 and will be removed in 1.4.0! For more info: http://www.angular-meteor.com/api/1.3.0/camera. You can disable this warning by following this guide http://www.angular-meteor.com/api/1.3.6/settings');\n\t  var pack = Package['mdg:camera'];                                                                                  // 1546\n\t  if (!pack) return;                                                                                                 // 1547\n                                                                                                                      // 1548\n\t  var MeteorCamera = pack.MeteorCamera;                                                                              // 1549\n                                                                                                                      // 1550\n\t  this.getPicture = function (options) {                                                                             // 1551\n\t    if (!$angularMeteorSettings.suppressWarnings) console.warn('[angular-meteor.camera] Please note that this module has moved to a separate package and is deprecated since 1.3.0 and will be removed in 1.4.0! For more info: http://www.angular-meteor.com/api/1.3.0/camera. You can disable this warning by following this guide http://www.angular-meteor.com/api/1.3.6/settings');\n                                                                                                                      // 1553\n\t    options = options || {};                                                                                         // 1554\n\t    var deferred = $q.defer();                                                                                       // 1555\n\t    MeteorCamera.getPicture(options, $meteorUtils.fulfill(deferred));                                                // 1556\n\t    return deferred.promise;                                                                                         // 1557\n\t  };                                                                                                                 // 1558\n\t}]);                                                                                                                 // 1559\n                                                                                                                      // 1560\n/***/ },                                                                                                              // 1561\n/* 15 */                                                                                                              // 1562\n/***/ function(module, exports) {                                                                                     // 1563\n                                                                                                                      // 1564\n\t/*global                                                                                                             // 1565\n\t angular                                                                                                             // 1566\n\t */                                                                                                                  // 1567\n                                                                                                                      // 1568\n\t'use strict';                                                                                                        // 1569\n                                                                                                                      // 1570\n\tvar angularMeteorStopper = angular.module('angular-meteor.stopper', ['angular-meteor.subscribe']);                   // 1571\n                                                                                                                      // 1572\n\tangularMeteorStopper.factory('$meteorStopper', ['$q', '$meteorSubscribe', function ($q, $meteorSubscribe) {          // 1573\n\t  function $meteorStopper($meteorEntity) {                                                                           // 1574\n\t    return function () {                                                                                             // 1575\n\t      var args = Array.prototype.slice.call(arguments);                                                              // 1576\n\t      var meteorEntity = $meteorEntity.apply(this, args);                                                            // 1577\n                                                                                                                      // 1578\n\t      angular.extend(meteorEntity, $meteorStopper);                                                                  // 1579\n\t      meteorEntity.$$scope = this;                                                                                   // 1580\n                                                                                                                      // 1581\n\t      this.$on('$destroy', function () {                                                                             // 1582\n\t        meteorEntity.stop();                                                                                         // 1583\n\t        if (meteorEntity.subscription) meteorEntity.subscription.stop();                                             // 1584\n\t      });                                                                                                            // 1585\n                                                                                                                      // 1586\n\t      return meteorEntity;                                                                                           // 1587\n\t    };                                                                                                               // 1588\n\t  }                                                                                                                  // 1589\n                                                                                                                      // 1590\n\t  $meteorStopper.subscribe = function () {                                                                           // 1591\n\t    var args = Array.prototype.slice.call(arguments);                                                                // 1592\n\t    this.subscription = $meteorSubscribe._subscribe(this.$$scope, $q.defer(), args);                                 // 1593\n\t    return this;                                                                                                     // 1594\n\t  };                                                                                                                 // 1595\n                                                                                                                      // 1596\n\t  return $meteorStopper;                                                                                             // 1597\n\t}]);                                                                                                                 // 1598\n                                                                                                                      // 1599\n/***/ },                                                                                                              // 1600\n/* 16 */                                                                                                              // 1601\n/***/ function(module, exports, __webpack_require__) {                                                                // 1602\n                                                                                                                      // 1603\n\t'use strict';                                                                                                        // 1604\n                                                                                                                      // 1605\n\tObject.defineProperty(exports, \"__esModule\", {                                                                       // 1606\n\t  value: true                                                                                                        // 1607\n\t});                                                                                                                  // 1608\n\texports.utils = exports.name = undefined;                                                                            // 1609\n                                                                                                                      // 1610\n\tvar _underscore = __webpack_require__(2);                                                                            // 1611\n                                                                                                                      // 1612\n\tvar _underscore2 = _interopRequireDefault(_underscore);                                                              // 1613\n                                                                                                                      // 1614\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }                      // 1615\n                                                                                                                      // 1616\n\tvar name = exports.name = 'angular-meteor.utilities';                                                                // 1617\n\tvar utils = exports.utils = '$$utils';                                                                               // 1618\n                                                                                                                      // 1619\n\tangular.module(name, [])                                                                                             // 1620\n                                                                                                                      // 1621\n\t/*                                                                                                                   // 1622\n\t  A utility service which is provided with general utility functions                                                 // 1623\n\t */                                                                                                                  // 1624\n\t.service(utils, ['$rootScope', function ($rootScope) {                                                               // 1625\n\t  var self = this;                                                                                                   // 1626\n                                                                                                                      // 1627\n\t  // Checks if an object is a cursor                                                                                 // 1628\n\t  this.isCursor = function (obj) {                                                                                   // 1629\n\t    return obj instanceof Meteor.Collection.Cursor;                                                                  // 1630\n\t  };                                                                                                                 // 1631\n                                                                                                                      // 1632\n\t  // Cheecks if an object is a scope                                                                                 // 1633\n\t  this.isScope = function (obj) {                                                                                    // 1634\n\t    return obj instanceof $rootScope.constructor;                                                                    // 1635\n\t  };                                                                                                                 // 1636\n                                                                                                                      // 1637\n\t  // Checks if an object is a view model                                                                             // 1638\n\t  this.isViewModel = function (obj) {                                                                                // 1639\n\t    return _underscore2.default.isObject(obj) && obj.$$dependencies;                                                 // 1640\n\t  };                                                                                                                 // 1641\n                                                                                                                      // 1642\n\t  // Checks if two objects are siblings                                                                              // 1643\n\t  this.areSiblings = function (obj1, obj2) {                                                                         // 1644\n\t    return _underscore2.default.isObject(obj1) && _underscore2.default.isObject(obj2) && Object.getPrototypeOf(obj1) === Object.getPrototypeOf(obj2);\n\t  };                                                                                                                 // 1646\n                                                                                                                      // 1647\n\t  // Binds function into a scpecified context. If an object is provided, will bind every                             // 1648\n\t  // value in the object which is a function. If a tap function is provided, it will be                              // 1649\n\t  // called right after the function has been invoked.                                                               // 1650\n\t  this.bind = function (fn, context, tap) {                                                                          // 1651\n\t    tap = _underscore2.default.isFunction(tap) ? tap : angular.noop;                                                 // 1652\n\t    if (_underscore2.default.isFunction(fn)) return bindFn(fn, context, tap);                                        // 1653\n\t    if (_underscore2.default.isObject(fn)) return bindObj(fn, context, tap);                                         // 1654\n\t    return fn;                                                                                                       // 1655\n\t  };                                                                                                                 // 1656\n                                                                                                                      // 1657\n\t  function bindFn(fn, context, tap) {                                                                                // 1658\n\t    return function () {                                                                                             // 1659\n\t      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {                         // 1660\n\t        args[_key] = arguments[_key];                                                                                // 1661\n\t      }                                                                                                              // 1662\n                                                                                                                      // 1663\n\t      var result = fn.apply(context, args);                                                                          // 1664\n\t      tap.call(context, {                                                                                            // 1665\n\t        result: result,                                                                                              // 1666\n\t        args: args                                                                                                   // 1667\n\t      });                                                                                                            // 1668\n\t      return result;                                                                                                 // 1669\n\t    };                                                                                                               // 1670\n\t  }                                                                                                                  // 1671\n                                                                                                                      // 1672\n\t  function bindObj(obj, context, tap) {                                                                              // 1673\n\t    return _underscore2.default.keys(obj).reduce(function (bound, k) {                                               // 1674\n\t      bound[k] = self.bind(obj[k], context, tap);                                                                    // 1675\n\t      return bound;                                                                                                  // 1676\n\t    }, {});                                                                                                          // 1677\n\t  }                                                                                                                  // 1678\n\t}]);                                                                                                                 // 1679\n                                                                                                                      // 1680\n/***/ },                                                                                                              // 1681\n/* 17 */                                                                                                              // 1682\n/***/ function(module, exports, __webpack_require__) {                                                                // 1683\n                                                                                                                      // 1684\n\t'use strict';                                                                                                        // 1685\n                                                                                                                      // 1686\n\tObject.defineProperty(exports, \"__esModule\", {                                                                       // 1687\n\t  value: true                                                                                                        // 1688\n\t});                                                                                                                  // 1689\n\texports.Mixer = exports.name = undefined;                                                                            // 1690\n                                                                                                                      // 1691\n\tvar _underscore = __webpack_require__(2);                                                                            // 1692\n                                                                                                                      // 1693\n\tvar _underscore2 = _interopRequireDefault(_underscore);                                                              // 1694\n                                                                                                                      // 1695\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }                      // 1696\n                                                                                                                      // 1697\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n                                                                                                                      // 1699\n\tvar name = exports.name = 'angular-meteor.mixer';                                                                    // 1700\n\tvar Mixer = exports.Mixer = '$Mixer';                                                                                // 1701\n                                                                                                                      // 1702\n\tangular.module(name, [])                                                                                             // 1703\n                                                                                                                      // 1704\n\t/*                                                                                                                   // 1705\n\t  A service which lets us apply mixins into Scope.prototype.                                                         // 1706\n\t  The flow is simple. Once we define a mixin, it will be stored in the `$Mixer`,                                     // 1707\n\t  and any time a `ChildScope` prototype is created                                                                   // 1708\n\t  it will be extended by the `$Mixer`.                                                                               // 1709\n\t  This concept is good because it keeps our code                                                                     // 1710\n\t  clean and simple, and easy to extend.                                                                              // 1711\n\t  So any time we would like to define a new behaviour to our scope,                                                  // 1712\n\t  we will just use the `$Mixer` service.                                                                             // 1713\n\t */                                                                                                                  // 1714\n\t.service(Mixer, function () {                                                                                        // 1715\n\t  var _this = this;                                                                                                  // 1716\n                                                                                                                      // 1717\n\t  // Used to store method's caller                                                                                   // 1718\n\t  var caller = undefined;                                                                                            // 1719\n                                                                                                                      // 1720\n\t  this._mixins = [];                                                                                                 // 1721\n\t  // Apply mixins automatically on specified contexts                                                                // 1722\n\t  this._autoExtend = [];                                                                                             // 1723\n\t  this._autoConstruct = [];                                                                                          // 1724\n                                                                                                                      // 1725\n\t  // Adds a new mixin                                                                                                // 1726\n\t  this.mixin = function (mixin) {                                                                                    // 1727\n\t    if (!_underscore2.default.isObject(mixin)) {                                                                     // 1728\n\t      throw Error('argument 1 must be an object');                                                                   // 1729\n\t    }                                                                                                                // 1730\n                                                                                                                      // 1731\n\t    _this._mixins = _underscore2.default.union(_this._mixins, [mixin]);                                              // 1732\n\t    // Apply mixins to stored contexts                                                                               // 1733\n\t    _this._autoExtend.forEach(function (context) {                                                                   // 1734\n\t      return _this._extend(context);                                                                                 // 1735\n\t    });                                                                                                              // 1736\n\t    _this._autoConstruct.forEach(function (context) {                                                                // 1737\n\t      return _this._construct(context);                                                                              // 1738\n\t    });                                                                                                              // 1739\n\t    return _this;                                                                                                    // 1740\n\t  };                                                                                                                 // 1741\n                                                                                                                      // 1742\n\t  // Removes a mixin. Useful mainly for test purposes                                                                // 1743\n\t  this._mixout = function (mixin) {                                                                                  // 1744\n\t    _this._mixins = _underscore2.default.without(_this._mixins, mixin);                                              // 1745\n\t    return _this;                                                                                                    // 1746\n\t  };                                                                                                                 // 1747\n                                                                                                                      // 1748\n\t  // Invoke function mixins with the provided context and arguments                                                  // 1749\n\t  this._construct = function (context) {                                                                             // 1750\n\t    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {        // 1751\n\t      args[_key - 1] = arguments[_key];                                                                              // 1752\n\t    }                                                                                                                // 1753\n                                                                                                                      // 1754\n\t    _this._mixins.filter(_underscore2.default.isFunction).forEach(function (mixin) {                                 // 1755\n\t      mixin.call.apply(mixin, [context].concat(args));                                                               // 1756\n\t    });                                                                                                              // 1757\n                                                                                                                      // 1758\n\t    return context;                                                                                                  // 1759\n\t  };                                                                                                                 // 1760\n                                                                                                                      // 1761\n\t  // Extend prototype with the defined mixins                                                                        // 1762\n\t  this._extend = function (obj, options) {                                                                           // 1763\n\t    var _$defaults = _underscore2.default.defaults({}, options, {                                                    // 1764\n\t      pattern: /.*/ });                                                                                              // 1765\n                                                                                                                      // 1766\n\t    var pattern = _$defaults.pattern;                                                                                // 1767\n\t    var context = _$defaults.context;                                                                                // 1768\n\t    // The patterns of the keys which will be filtered                                                               // 1769\n                                                                                                                      // 1770\n                                                                                                                      // 1771\n\t    var mixins = _this._mixins.map(function (mixin) {                                                                // 1772\n\t      // Filtering the keys by the specified pattern                                                                 // 1773\n\t      var keys = _underscore2.default.keys(mixin).filter(function (k) {                                              // 1774\n\t        return k.match(pattern);                                                                                     // 1775\n\t      }).filter(function (k) {                                                                                       // 1776\n\t        return _underscore2.default.isFunction(mixin[k]);                                                            // 1777\n\t      });                                                                                                            // 1778\n                                                                                                                      // 1779\n\t      return keys.reduce(function (boundMixin, methodName) {                                                         // 1780\n\t        var methodHandler = mixin[methodName];                                                                       // 1781\n                                                                                                                      // 1782\n\t        // Note that this is not an arrow function so we can conserve the conetxt                                    // 1783\n\t        boundMixin[methodName] = function () {                                                                       // 1784\n\t          // Storing original caller so we will know who actually called the                                         // 1785\n\t          // method event though it is bound to another context                                                      // 1786\n\t          var methodContext = context || this;                                                                       // 1787\n\t          var recentCaller = caller;                                                                                 // 1788\n\t          caller = this;                                                                                             // 1789\n                                                                                                                      // 1790\n\t          try {                                                                                                      // 1791\n\t            for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {             // 1792\n\t              args[_key2] = arguments[_key2];                                                                        // 1793\n\t            }                                                                                                        // 1794\n                                                                                                                      // 1795\n\t            return methodHandler.apply(methodContext, args);                                                         // 1796\n\t          } finally {                                                                                                // 1797\n\t            // No matter what happens, restore variable to the previous one                                          // 1798\n\t            caller = recentCaller;                                                                                   // 1799\n\t          }                                                                                                          // 1800\n\t        };                                                                                                           // 1801\n                                                                                                                      // 1802\n\t        return boundMixin;                                                                                           // 1803\n\t      }, {});                                                                                                        // 1804\n\t    });                                                                                                              // 1805\n                                                                                                                      // 1806\n\t    return _underscore2.default.extend.apply(_underscore2.default, [obj].concat(_toConsumableArray(mixins)));        // 1807\n\t  };                                                                                                                 // 1808\n                                                                                                                      // 1809\n\t  // Caller property can not be set                                                                                  // 1810\n\t  Object.defineProperty(this, 'caller', {                                                                            // 1811\n\t    configurable: true,                                                                                              // 1812\n\t    enumerable: true,                                                                                                // 1813\n                                                                                                                      // 1814\n\t    get: function get() {                                                                                            // 1815\n\t      return caller;                                                                                                 // 1816\n\t    }                                                                                                                // 1817\n\t  });                                                                                                                // 1818\n\t});                                                                                                                  // 1819\n                                                                                                                      // 1820\n/***/ },                                                                                                              // 1821\n/* 18 */                                                                                                              // 1822\n/***/ function(module, exports, __webpack_require__) {                                                                // 1823\n                                                                                                                      // 1824\n\t'use strict';                                                                                                        // 1825\n                                                                                                                      // 1826\n\tObject.defineProperty(exports, \"__esModule\", {                                                                       // 1827\n\t  value: true                                                                                                        // 1828\n\t});                                                                                                                  // 1829\n\texports.name = undefined;                                                                                            // 1830\n                                                                                                                      // 1831\n\tvar _mixer = __webpack_require__(17);                                                                                // 1832\n                                                                                                                      // 1833\n\tvar name = exports.name = 'angular-meteor.scope';                                                                    // 1834\n                                                                                                                      // 1835\n\tangular.module(name, [_mixer.name]).run(['$rootScope', _mixer.Mixer, function ($rootScope, $Mixer) {                 // 1836\n\t  var Scope = $rootScope.constructor;                                                                                // 1837\n\t  var $new = $rootScope.$new;                                                                                        // 1838\n                                                                                                                      // 1839\n\t  // Apply extensions whether a mixin in defined.                                                                    // 1840\n\t  // Note that this way mixins which are initialized later                                                           // 1841\n\t  // can be applied on rootScope.                                                                                    // 1842\n\t  $Mixer._autoExtend.push(Scope.prototype);                                                                          // 1843\n\t  $Mixer._autoConstruct.push($rootScope);                                                                            // 1844\n                                                                                                                      // 1845\n\t  Scope.prototype.$new = function () {                                                                               // 1846\n\t    var scope = $new.apply(this, arguments);                                                                         // 1847\n\t    // Apply constructors to newly created scopes                                                                    // 1848\n\t    return $Mixer._construct(scope);                                                                                 // 1849\n\t  };                                                                                                                 // 1850\n\t}]);                                                                                                                 // 1851\n                                                                                                                      // 1852\n/***/ },                                                                                                              // 1853\n/* 19 */                                                                                                              // 1854\n/***/ function(module, exports, __webpack_require__) {                                                                // 1855\n                                                                                                                      // 1856\n\t'use strict';                                                                                                        // 1857\n                                                                                                                      // 1858\n\tObject.defineProperty(exports, \"__esModule\", {                                                                       // 1859\n\t  value: true                                                                                                        // 1860\n\t});                                                                                                                  // 1861\n\texports.Core = exports.name = undefined;                                                                             // 1862\n                                                                                                                      // 1863\n\tvar _underscore = __webpack_require__(2);                                                                            // 1864\n                                                                                                                      // 1865\n\tvar _underscore2 = _interopRequireDefault(_underscore);                                                              // 1866\n                                                                                                                      // 1867\n\tvar _utils = __webpack_require__(16);                                                                                // 1868\n                                                                                                                      // 1869\n\tvar _mixer = __webpack_require__(17);                                                                                // 1870\n                                                                                                                      // 1871\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }                      // 1872\n                                                                                                                      // 1873\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n                                                                                                                      // 1875\n\tvar name = exports.name = 'angular-meteor.core';                                                                     // 1876\n\tvar Core = exports.Core = '$$Core';                                                                                  // 1877\n                                                                                                                      // 1878\n\tangular.module(name, [_utils.name, _mixer.name])                                                                     // 1879\n                                                                                                                      // 1880\n\t/*                                                                                                                   // 1881\n\t  A mixin which provides us with core Meteor functions.                                                              // 1882\n\t */                                                                                                                  // 1883\n\t.factory(Core, ['$q', _utils.utils, _mixer.Mixer, function ($q, $$utils, $Mixer) {                                   // 1884\n\t  function $$Core() {}                                                                                               // 1885\n                                                                                                                      // 1886\n\t  // Calls Meteor.autorun() which will be digested after each run and automatically destroyed                        // 1887\n\t  $$Core.autorun = function (fn) {                                                                                   // 1888\n\t    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];                           // 1889\n                                                                                                                      // 1890\n\t    fn = this.$bindToContext($Mixer.caller, fn);                                                                     // 1891\n                                                                                                                      // 1892\n\t    if (!_underscore2.default.isFunction(fn)) {                                                                      // 1893\n\t      throw Error('argument 1 must be a function');                                                                  // 1894\n\t    }                                                                                                                // 1895\n\t    if (!_underscore2.default.isObject(options)) {                                                                   // 1896\n\t      throw Error('argument 2 must be an object');                                                                   // 1897\n\t    }                                                                                                                // 1898\n                                                                                                                      // 1899\n\t    var computation = Tracker.autorun(fn, options);                                                                  // 1900\n\t    // Reset to a function that will also stop the listener we just added                                            // 1901\n\t    computation.stop = this.$$autoStop(computation);                                                                 // 1902\n\t    return computation;                                                                                              // 1903\n\t  };                                                                                                                 // 1904\n                                                                                                                      // 1905\n\t  // Calls Meteor.subscribe() which will be digested after each invokation                                           // 1906\n\t  // and automatically destroyed                                                                                     // 1907\n\t  $$Core.subscribe = function (subName, fn, cb) {                                                                    // 1908\n\t    fn = this.$bindToContext($Mixer.caller, fn || angular.noop);                                                     // 1909\n\t    cb = cb ? this.$bindToContext($Mixer.caller, cb) : angular.noop;                                                 // 1910\n                                                                                                                      // 1911\n\t    // Additional callbacks specific for this library                                                                // 1912\n\t    // onStart - right after Meteor.subscribe()                                                                      // 1913\n\t    var hooks = {                                                                                                    // 1914\n\t      onStart: angular.noop                                                                                          // 1915\n\t    };                                                                                                               // 1916\n                                                                                                                      // 1917\n\t    if (!_underscore2.default.isString(subName)) {                                                                   // 1918\n\t      throw Error('argument 1 must be a string');                                                                    // 1919\n\t    }                                                                                                                // 1920\n\t    if (!_underscore2.default.isFunction(fn)) {                                                                      // 1921\n\t      throw Error('argument 2 must be a function');                                                                  // 1922\n\t    }                                                                                                                // 1923\n\t    if (!_underscore2.default.isFunction(cb) && !_underscore2.default.isObject(cb)) {                                // 1924\n\t      throw Error('argument 3 must be a function or an object');                                                     // 1925\n\t    }                                                                                                                // 1926\n                                                                                                                      // 1927\n\t    if (_underscore2.default.isObject(cb)) {                                                                         // 1928\n\t      for (var hook in hooks) {                                                                                      // 1929\n\t        if (hooks.hasOwnProperty(hook) && cb[hook]) {                                                                // 1930\n\t          // Don't use any of additional callbacks in Meteor.subscribe                                               // 1931\n\t          hooks[hook] = cb[hook];                                                                                    // 1932\n\t          delete cb[hook];                                                                                           // 1933\n\t        }                                                                                                            // 1934\n\t      }                                                                                                              // 1935\n\t    }                                                                                                                // 1936\n                                                                                                                      // 1937\n\t    var result = {};                                                                                                 // 1938\n                                                                                                                      // 1939\n\t    var computation = this.autorun(function () {                                                                     // 1940\n\t      var _Meteor;                                                                                                   // 1941\n                                                                                                                      // 1942\n\t      var args = fn();                                                                                               // 1943\n\t      if (angular.isUndefined(args)) args = [];                                                                      // 1944\n                                                                                                                      // 1945\n\t      if (!_underscore2.default.isArray(args)) {                                                                     // 1946\n\t        throw Error('reactive function\\'s return value must be an array');                                           // 1947\n\t      }                                                                                                              // 1948\n                                                                                                                      // 1949\n\t      var subscription = (_Meteor = Meteor).subscribe.apply(_Meteor, [subName].concat(_toConsumableArray(args), [cb]));\n                                                                                                                      // 1951\n\t      hooks.onStart();                                                                                               // 1952\n                                                                                                                      // 1953\n\t      result.ready = subscription.ready.bind(subscription);                                                          // 1954\n\t      result.subscriptionId = subscription.subscriptionId;                                                           // 1955\n\t    });                                                                                                              // 1956\n                                                                                                                      // 1957\n\t    // Once the computation has been stopped,                                                                        // 1958\n\t    // any subscriptions made inside will be stopped as well                                                         // 1959\n\t    result.stop = computation.stop.bind(computation);                                                                // 1960\n\t    return result;                                                                                                   // 1961\n\t  };                                                                                                                 // 1962\n                                                                                                                      // 1963\n\t  // Calls Meteor.call() wrapped by a digestion cycle                                                                // 1964\n\t  $$Core.callMethod = function () {                                                                                  // 1965\n\t    var _Meteor2;                                                                                                    // 1966\n                                                                                                                      // 1967\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {                           // 1968\n\t      args[_key] = arguments[_key];                                                                                  // 1969\n\t    }                                                                                                                // 1970\n                                                                                                                      // 1971\n\t    var fn = args.pop();                                                                                             // 1972\n\t    if (_underscore2.default.isFunction(fn)) fn = this.$bindToContext($Mixer.caller, fn);                            // 1973\n\t    return (_Meteor2 = Meteor).call.apply(_Meteor2, args.concat([fn]));                                              // 1974\n\t  };                                                                                                                 // 1975\n                                                                                                                      // 1976\n\t  // Calls Meteor.apply() wrapped by a digestion cycle                                                               // 1977\n\t  $$Core.applyMethod = function () {                                                                                 // 1978\n\t    var _Meteor3;                                                                                                    // 1979\n                                                                                                                      // 1980\n\t    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {                     // 1981\n\t      args[_key2] = arguments[_key2];                                                                                // 1982\n\t    }                                                                                                                // 1983\n                                                                                                                      // 1984\n\t    var fn = args.pop();                                                                                             // 1985\n\t    if (_underscore2.default.isFunction(fn)) fn = this.$bindToContext($Mixer.caller, fn);                            // 1986\n\t    return (_Meteor3 = Meteor).apply.apply(_Meteor3, args.concat([fn]));                                             // 1987\n\t  };                                                                                                                 // 1988\n                                                                                                                      // 1989\n\t  // Stops a process once the scope has been destroyed                                                               // 1990\n\t  $$Core.$$autoStop = function (stoppable) {                                                                         // 1991\n\t    var removeListener = undefined;                                                                                  // 1992\n\t    var baseStop = stoppable.stop.bind(stoppable);                                                                   // 1993\n                                                                                                                      // 1994\n\t    // Once the process has been stopped the destroy event listener will be removed                                  // 1995\n\t    // to avoid memory leaks and unexpected behaviours                                                               // 1996\n\t    var stop = function stop() {                                                                                     // 1997\n\t      removeListener();                                                                                              // 1998\n\t      return baseStop.apply(undefined, arguments);                                                                   // 1999\n\t    };                                                                                                               // 2000\n                                                                                                                      // 2001\n\t    removeListener = this.$on('$destroy', stop);                                                                     // 2002\n\t    return stop;                                                                                                     // 2003\n\t  };                                                                                                                 // 2004\n                                                                                                                      // 2005\n\t  // Digests scope only if there is no phase at the moment                                                           // 2006\n\t  $$Core.$$throttledDigest = function () {                                                                           // 2007\n\t    var isDigestable = !this.$$destroyed && !this.$$phase && !this.$root.$$phase;                                    // 2008\n                                                                                                                      // 2009\n\t    if (isDigestable) this.$digest();                                                                                // 2010\n\t  };                                                                                                                 // 2011\n                                                                                                                      // 2012\n\t  // Creates a promise only that the digestion cycle will be called at its fulfillment                               // 2013\n\t  $$Core.$$defer = function () {                                                                                     // 2014\n\t    var deferred = $q.defer();                                                                                       // 2015\n\t    // Once promise has been fulfilled, digest                                                                       // 2016\n\t    deferred.promise = deferred.promise.finally(this.$$throttledDigest.bind(this));                                  // 2017\n\t    return deferred;                                                                                                 // 2018\n\t  };                                                                                                                 // 2019\n                                                                                                                      // 2020\n\t  // Binds an object or a function to the provided context and digest it once it is invoked                          // 2021\n\t  $$Core.$bindToContext = function (context, fn) {                                                                   // 2022\n\t    if (_underscore2.default.isFunction(context)) {                                                                  // 2023\n\t      fn = context;                                                                                                  // 2024\n\t      context = this;                                                                                                // 2025\n\t    }                                                                                                                // 2026\n                                                                                                                      // 2027\n\t    return $$utils.bind(fn, context, this.$$throttledDigest.bind(this));                                             // 2028\n\t  };                                                                                                                 // 2029\n                                                                                                                      // 2030\n\t  return $$Core;                                                                                                     // 2031\n\t}]);                                                                                                                 // 2032\n                                                                                                                      // 2033\n/***/ },                                                                                                              // 2034\n/* 20 */                                                                                                              // 2035\n/***/ function(module, exports, __webpack_require__) {                                                                // 2036\n                                                                                                                      // 2037\n\t'use strict';                                                                                                        // 2038\n                                                                                                                      // 2039\n\tObject.defineProperty(exports, \"__esModule\", {                                                                       // 2040\n\t  value: true                                                                                                        // 2041\n\t});                                                                                                                  // 2042\n\texports.reactive = exports.ViewModel = exports.name = undefined;                                                     // 2043\n                                                                                                                      // 2044\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n                                                                                                                      // 2046\n\tvar _underscore = __webpack_require__(2);                                                                            // 2047\n                                                                                                                      // 2048\n\tvar _underscore2 = _interopRequireDefault(_underscore);                                                              // 2049\n                                                                                                                      // 2050\n\tvar _utils = __webpack_require__(16);                                                                                // 2051\n                                                                                                                      // 2052\n\tvar _mixer = __webpack_require__(17);                                                                                // 2053\n                                                                                                                      // 2054\n\tvar _core = __webpack_require__(19);                                                                                 // 2055\n                                                                                                                      // 2056\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }                      // 2057\n                                                                                                                      // 2058\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n                                                                                                                      // 2060\n\tvar name = exports.name = 'angular-meteor.view-model';                                                               // 2061\n\tvar ViewModel = exports.ViewModel = '$$ViewModel';                                                                   // 2062\n\tvar reactive = exports.reactive = '$reactive';                                                                       // 2063\n                                                                                                                      // 2064\n\tangular.module(name, [_utils.name, _mixer.name, _core.name])                                                         // 2065\n                                                                                                                      // 2066\n\t/*                                                                                                                   // 2067\n\t  A mixin which lets us bind a view model into a scope.                                                              // 2068\n\t  Note that only a single view model can be bound,                                                                   // 2069\n\t  otherwise the scope might behave unexpectedly.                                                                     // 2070\n\t  Mainly used to define the controller as the view model,                                                            // 2071\n\t  and very useful when wanting to use Angular's `controllerAs` syntax.                                               // 2072\n\t */                                                                                                                  // 2073\n\t.factory(ViewModel, [_utils.utils, _mixer.Mixer, function ($$utils, $Mixer) {                                        // 2074\n\t  function $$ViewModel() {}                                                                                          // 2075\n                                                                                                                      // 2076\n\t  // Gets an object, wraps it with scope functions and returns it                                                    // 2077\n\t  $$ViewModel.viewModel = function (vm) {                                                                            // 2078\n\t    if (!_underscore2.default.isObject(vm)) {                                                                        // 2079\n\t      throw Error('argument 1 must be an object');                                                                   // 2080\n\t    }                                                                                                                // 2081\n                                                                                                                      // 2082\n\t    // Extend view model with mixin functions                                                                        // 2083\n\t    $Mixer._extend(vm, {                                                                                             // 2084\n\t      pattern: /^(?!\\$\\$).*$/, // Omitting methods which start with a $$ notation                                    // 2085\n\t      context: this // Binding methods to scope                                                                      // 2086\n\t    });                                                                                                              // 2087\n                                                                                                                      // 2088\n\t    // Apply mixin constructors on scope with view model                                                             // 2089\n\t    $Mixer._construct(this, vm);                                                                                     // 2090\n\t    return vm;                                                                                                       // 2091\n\t  };                                                                                                                 // 2092\n                                                                                                                      // 2093\n\t  return $$ViewModel;                                                                                                // 2094\n\t}])                                                                                                                  // 2095\n                                                                                                                      // 2096\n\t/*                                                                                                                   // 2097\n\t  Illustrates the old API where a view model is created using $reactive service                                      // 2098\n\t */                                                                                                                  // 2099\n\t.service(reactive, [_utils.utils, function ($$utils) {                                                               // 2100\n\t  var Reactive = function () {                                                                                       // 2101\n\t    function Reactive(vm) {                                                                                          // 2102\n\t      var _this = this;                                                                                              // 2103\n                                                                                                                      // 2104\n\t      _classCallCheck(this, Reactive);                                                                               // 2105\n                                                                                                                      // 2106\n\t      if (!_underscore2.default.isObject(vm)) {                                                                      // 2107\n\t        throw Error('argument 1 must be an object');                                                                 // 2108\n\t      }                                                                                                              // 2109\n                                                                                                                      // 2110\n\t      _underscore2.default.defer(function () {                                                                       // 2111\n\t        if (!_this._attached) {                                                                                      // 2112\n\t          console.warn('view model was not attached to any scope');                                                  // 2113\n\t        }                                                                                                            // 2114\n\t      });                                                                                                            // 2115\n                                                                                                                      // 2116\n\t      this._vm = vm;                                                                                                 // 2117\n\t    }                                                                                                                // 2118\n                                                                                                                      // 2119\n\t    _createClass(Reactive, [{                                                                                        // 2120\n\t      key: 'attach',                                                                                                 // 2121\n\t      value: function attach(scope) {                                                                                // 2122\n\t        this._attached = true;                                                                                       // 2123\n                                                                                                                      // 2124\n\t        if (!$$utils.isScope(scope)) {                                                                               // 2125\n\t          throw Error('argument 1 must be a scope');                                                                 // 2126\n\t        }                                                                                                            // 2127\n                                                                                                                      // 2128\n\t        var viewModel = scope.viewModel(this._vm);                                                                   // 2129\n                                                                                                                      // 2130\n\t        // Similar to the old/Meteor API                                                                             // 2131\n\t        viewModel.call = viewModel.callMethod;                                                                       // 2132\n\t        viewModel.apply = viewModel.applyMethod;                                                                     // 2133\n                                                                                                                      // 2134\n\t        return viewModel;                                                                                            // 2135\n\t      }                                                                                                              // 2136\n\t    }]);                                                                                                             // 2137\n                                                                                                                      // 2138\n\t    return Reactive;                                                                                                 // 2139\n\t  }();                                                                                                               // 2140\n                                                                                                                      // 2141\n\t  return function (vm) {                                                                                             // 2142\n\t    return new Reactive(vm);                                                                                         // 2143\n\t  };                                                                                                                 // 2144\n\t}]);                                                                                                                 // 2145\n                                                                                                                      // 2146\n/***/ },                                                                                                              // 2147\n/* 21 */                                                                                                              // 2148\n/***/ function(module, exports, __webpack_require__) {                                                                // 2149\n                                                                                                                      // 2150\n\t'use strict';                                                                                                        // 2151\n                                                                                                                      // 2152\n\tObject.defineProperty(exports, \"__esModule\", {                                                                       // 2153\n\t  value: true                                                                                                        // 2154\n\t});                                                                                                                  // 2155\n\texports.Reactive = exports.name = undefined;                                                                         // 2156\n                                                                                                                      // 2157\n\tvar _jsondiffpatch = __webpack_require__(22);                                                                        // 2158\n                                                                                                                      // 2159\n\tvar _jsondiffpatch2 = _interopRequireDefault(_jsondiffpatch);                                                        // 2160\n                                                                                                                      // 2161\n\tvar _underscore = __webpack_require__(2);                                                                            // 2162\n                                                                                                                      // 2163\n\tvar _underscore2 = _interopRequireDefault(_underscore);                                                              // 2164\n                                                                                                                      // 2165\n\tvar _utils = __webpack_require__(16);                                                                                // 2166\n                                                                                                                      // 2167\n\tvar _mixer = __webpack_require__(17);                                                                                // 2168\n                                                                                                                      // 2169\n\tvar _core = __webpack_require__(19);                                                                                 // 2170\n                                                                                                                      // 2171\n\tvar _viewModel = __webpack_require__(20);                                                                            // 2172\n                                                                                                                      // 2173\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }                      // 2174\n                                                                                                                      // 2175\n\tvar name = exports.name = 'angular-meteor.reactive';                                                                 // 2176\n\tvar Reactive = exports.Reactive = '$$Reactive';                                                                      // 2177\n                                                                                                                      // 2178\n\tangular.module(name, [_utils.name, _mixer.name, _core.name, _viewModel.name])                                        // 2179\n                                                                                                                      // 2180\n\t/*                                                                                                                   // 2181\n\t  A mixin which enhance our reactive abilities by providing methods                                                  // 2182\n\t  that are capable of updating our scope reactively.                                                                 // 2183\n\t */                                                                                                                  // 2184\n\t.factory(Reactive, ['$parse', _utils.utils, _mixer.Mixer, function ($parse, $$utils, $Mixer) {                       // 2185\n\t  function $$Reactive() {                                                                                            // 2186\n\t    var vm = arguments.length <= 0 || arguments[0] === undefined ? this : arguments[0];                              // 2187\n                                                                                                                      // 2188\n\t    // Helps us track changes made in the view model                                                                 // 2189\n\t    vm.$$dependencies = {};                                                                                          // 2190\n\t  }                                                                                                                  // 2191\n                                                                                                                      // 2192\n\t  // Gets an object containing functions and define their results as reactive properties.                            // 2193\n\t  // Once a return value has been changed the property will be reset.                                                // 2194\n\t  $$Reactive.helpers = function (vm, props) {                                                                        // 2195\n\t    var _this = this;                                                                                                // 2196\n                                                                                                                      // 2197\n\t    if ($$utils.isViewModel(vm)) {                                                                                   // 2198\n\t      if (!_underscore2.default.isObject(props)) {                                                                   // 2199\n\t        throw Error('argument 2 must be an object');                                                                 // 2200\n\t      }                                                                                                              // 2201\n\t    } else {                                                                                                         // 2202\n\t      props = vm;                                                                                                    // 2203\n\t      vm = $Mixer.caller;                                                                                            // 2204\n                                                                                                                      // 2205\n\t      if (!_underscore2.default.isObject(props)) {                                                                   // 2206\n\t        throw Error('argument 1 must be an object');                                                                 // 2207\n\t      }                                                                                                              // 2208\n\t    }                                                                                                                // 2209\n                                                                                                                      // 2210\n\t    _underscore2.default.each(props, function (v, k) {                                                               // 2211\n\t      if (!_underscore2.default.isFunction(v)) {                                                                     // 2212\n\t        throw Error('helper \\'' + k + '\\' must be a function');                                                      // 2213\n\t      }                                                                                                              // 2214\n\t    });                                                                                                              // 2215\n                                                                                                                      // 2216\n\t    _underscore2.default.each(props, function (v, k) {                                                               // 2217\n\t      if (!vm.$$dependencies[k]) {                                                                                   // 2218\n\t        // Registers a new dependency to the specified helper                                                        // 2219\n\t        vm.$$dependencies[k] = new Tracker.Dependency();                                                             // 2220\n\t      }                                                                                                              // 2221\n                                                                                                                      // 2222\n\t      _this.$$setFnHelper(vm, k, v);                                                                                 // 2223\n\t    });                                                                                                              // 2224\n\t  };                                                                                                                 // 2225\n                                                                                                                      // 2226\n\t  // Gets a model reactively                                                                                         // 2227\n\t  $$Reactive.getReactively = function (vm, k, isDeep) {                                                              // 2228\n\t    if ($$utils.isViewModel(vm)) {                                                                                   // 2229\n\t      if (angular.isUndefined(isDeep)) isDeep = false;                                                               // 2230\n                                                                                                                      // 2231\n\t      if (!_underscore2.default.isString(k)) {                                                                       // 2232\n\t        throw Error('argument 2 must be a string');                                                                  // 2233\n\t      }                                                                                                              // 2234\n\t      if (!_underscore2.default.isBoolean(isDeep)) {                                                                 // 2235\n\t        throw Error('argument 3 must be a boolean');                                                                 // 2236\n\t      }                                                                                                              // 2237\n\t    } else {                                                                                                         // 2238\n\t      isDeep = angular.isDefined(k) ? k : false;                                                                     // 2239\n\t      k = vm;                                                                                                        // 2240\n\t      vm = $Mixer.caller;                                                                                            // 2241\n                                                                                                                      // 2242\n\t      if (!_underscore2.default.isString(k)) {                                                                       // 2243\n\t        throw Error('argument 1 must be a string');                                                                  // 2244\n\t      }                                                                                                              // 2245\n\t      if (!_underscore2.default.isBoolean(isDeep)) {                                                                 // 2246\n\t        throw Error('argument 2 must be a boolean');                                                                 // 2247\n\t      }                                                                                                              // 2248\n\t    }                                                                                                                // 2249\n                                                                                                                      // 2250\n\t    return this.$$reactivateEntity(vm, k, this.$watch, isDeep);                                                      // 2251\n\t  };                                                                                                                 // 2252\n                                                                                                                      // 2253\n\t  // Gets a collection reactively                                                                                    // 2254\n\t  $$Reactive.getCollectionReactively = function (vm, k) {                                                            // 2255\n\t    if ($$utils.isViewModel(vm)) {                                                                                   // 2256\n\t      if (!_underscore2.default.isString(k)) {                                                                       // 2257\n\t        throw Error('argument 2 must be a string');                                                                  // 2258\n\t      }                                                                                                              // 2259\n\t    } else {                                                                                                         // 2260\n\t      k = vm;                                                                                                        // 2261\n\t      vm = $Mixer.caller;                                                                                            // 2262\n                                                                                                                      // 2263\n\t      if (!_underscore2.default.isString(k)) {                                                                       // 2264\n\t        throw Error('argument 1 must be a string');                                                                  // 2265\n\t      }                                                                                                              // 2266\n\t    }                                                                                                                // 2267\n                                                                                                                      // 2268\n\t    return this.$$reactivateEntity(vm, k, this.$watchCollection);                                                    // 2269\n\t  };                                                                                                                 // 2270\n                                                                                                                      // 2271\n\t  // Gets an entity reactively, and once it has been changed the computation will be recomputed                      // 2272\n\t  $$Reactive.$$reactivateEntity = function (vm, k, watcher) {                                                        // 2273\n\t    if (!vm.$$dependencies[k]) {                                                                                     // 2274\n\t      vm.$$dependencies[k] = new Tracker.Dependency();                                                               // 2275\n                                                                                                                      // 2276\n\t      for (var _len = arguments.length, watcherArgs = Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n\t        watcherArgs[_key - 3] = arguments[_key];                                                                     // 2278\n\t      }                                                                                                              // 2279\n                                                                                                                      // 2280\n\t      this.$$watchEntity.apply(this, [vm, k, watcher].concat(watcherArgs));                                          // 2281\n\t    }                                                                                                                // 2282\n                                                                                                                      // 2283\n\t    vm.$$dependencies[k].depend();                                                                                   // 2284\n\t    return $parse(k)(vm);                                                                                            // 2285\n\t  };                                                                                                                 // 2286\n                                                                                                                      // 2287\n\t  // Watches for changes in the view model, and if so will notify a change                                           // 2288\n\t  $$Reactive.$$watchEntity = function (vm, k, watcher) {                                                             // 2289\n\t    var _this2 = this;                                                                                               // 2290\n                                                                                                                      // 2291\n\t    // Gets a deep property from the caller                                                                          // 2292\n\t    var getVal = _underscore2.default.partial($parse(k), vm);                                                        // 2293\n\t    var initialVal = getVal();                                                                                       // 2294\n                                                                                                                      // 2295\n\t    // Watches for changes in the view model                                                                         // 2296\n                                                                                                                      // 2297\n\t    for (var _len2 = arguments.length, watcherArgs = Array(_len2 > 3 ? _len2 - 3 : 0), _key2 = 3; _key2 < _len2; _key2++) {\n\t      watcherArgs[_key2 - 3] = arguments[_key2];                                                                     // 2299\n\t    }                                                                                                                // 2300\n                                                                                                                      // 2301\n\t    watcher.call.apply(watcher, [this, getVal, function (val, oldVal) {                                              // 2302\n\t      var hasChanged = val !== initialVal || val !== oldVal;                                                         // 2303\n                                                                                                                      // 2304\n\t      // Notify if a change has been detected                                                                        // 2305\n\t      if (hasChanged) _this2.$$changed(vm, k);                                                                       // 2306\n\t    }].concat(watcherArgs));                                                                                         // 2307\n\t  };                                                                                                                 // 2308\n                                                                                                                      // 2309\n\t  // Invokes a function and sets the return value as a property                                                      // 2310\n\t  $$Reactive.$$setFnHelper = function (vm, k, fn) {                                                                  // 2311\n\t    var _this3 = this;                                                                                               // 2312\n                                                                                                                      // 2313\n\t    var activeObservation = null;                                                                                    // 2314\n\t    var lastModel = null;                                                                                            // 2315\n\t    var lastModelData = [];                                                                                          // 2316\n                                                                                                                      // 2317\n\t    this.autorun(function () /* computation */{                                                                      // 2318\n\t      // Invokes the reactive functon                                                                                // 2319\n\t      var model = fn.apply(vm);                                                                                      // 2320\n                                                                                                                      // 2321\n\t      // Ignore notifications made by the following handler                                                          // 2322\n\t      Tracker.nonreactive(function () {                                                                              // 2323\n\t        // If a cursor, observe its changes and update acoordingly                                                   // 2324\n\t        if ($$utils.isCursor(model)) {                                                                               // 2325\n\t          var modelData = undefined;                                                                                 // 2326\n                                                                                                                      // 2327\n\t          if (angular.isUndefined(vm[k])) {                                                                          // 2328\n\t            _this3.$$setValHelper(vm, k, [], false);                                                                 // 2329\n\t          }                                                                                                          // 2330\n                                                                                                                      // 2331\n\t          if (activeObservation) {                                                                                   // 2332\n\t            lastModelData = lastModel.fetch();                                                                       // 2333\n\t            activeObservation.stop();                                                                                // 2334\n\t            activeObservation = null;                                                                                // 2335\n\t          }                                                                                                          // 2336\n                                                                                                                      // 2337\n\t          var handle = _this3.$$handleCursor(vm, k, model);                                                          // 2338\n                                                                                                                      // 2339\n\t          activeObservation = handle.observation;                                                                    // 2340\n\t          modelData = handle.data;                                                                                   // 2341\n                                                                                                                      // 2342\n\t          if (lastModelData.length !== 0) {                                                                          // 2343\n\t            var diff = _jsondiffpatch2.default.diff(lastModelData, modelData);                                       // 2344\n\t            vm[k] = _jsondiffpatch2.default.patch(lastModelData, diff);                                              // 2345\n\t          } else {                                                                                                   // 2346\n\t            vm[k] = modelData;                                                                                       // 2347\n\t          }                                                                                                          // 2348\n                                                                                                                      // 2349\n\t          lastModel = model;                                                                                         // 2350\n\t          lastModelData = modelData;                                                                                 // 2351\n                                                                                                                      // 2352\n\t          /* computation.onInvalidate(() => {                                                                        // 2353\n\t            activeObservation.stop();                                                                                // 2354\n\t          });*/                                                                                                      // 2355\n\t        } else {                                                                                                     // 2356\n\t            _this3.$$handleNonCursor(vm, k, model);                                                                  // 2357\n\t          }                                                                                                          // 2358\n                                                                                                                      // 2359\n\t        // Notify change and update the view model                                                                   // 2360\n\t        _this3.$$changed(vm, k);                                                                                     // 2361\n\t      });                                                                                                            // 2362\n\t    });                                                                                                              // 2363\n\t  };                                                                                                                 // 2364\n                                                                                                                      // 2365\n\t  // Sets a value helper as a setter and a getter which will notify computations once used                           // 2366\n\t  $$Reactive.$$setValHelper = function (vm, k, v) {                                                                  // 2367\n\t    var _this4 = this;                                                                                               // 2368\n                                                                                                                      // 2369\n\t    var watch = arguments.length <= 3 || arguments[3] === undefined ? true : arguments[3];                           // 2370\n                                                                                                                      // 2371\n\t    // If set, reactives property                                                                                    // 2372\n\t    if (watch) {                                                                                                     // 2373\n\t      var isDeep = _underscore2.default.isObject(v);                                                                 // 2374\n\t      this.getReactively(vm, k, isDeep);                                                                             // 2375\n\t    }                                                                                                                // 2376\n                                                                                                                      // 2377\n\t    Object.defineProperty(vm, k, {                                                                                   // 2378\n\t      configurable: true,                                                                                            // 2379\n\t      enumerable: true,                                                                                              // 2380\n                                                                                                                      // 2381\n\t      get: function get() {                                                                                          // 2382\n\t        return v;                                                                                                    // 2383\n\t      },                                                                                                             // 2384\n\t      set: function set(newVal) {                                                                                    // 2385\n\t        v = newVal;                                                                                                  // 2386\n\t        _this4.$$changed(vm, k);                                                                                     // 2387\n\t      }                                                                                                              // 2388\n\t    });                                                                                                              // 2389\n\t  };                                                                                                                 // 2390\n                                                                                                                      // 2391\n\t  // Fetching a cursor and updates properties once the result set has been changed                                   // 2392\n\t  $$Reactive.$$handleCursor = function (vm, k, cursor) {                                                             // 2393\n\t    var _this5 = this;                                                                                               // 2394\n                                                                                                                      // 2395\n\t    var data = [];                                                                                                   // 2396\n\t    // Observe changes made in the result set                                                                        // 2397\n\t    var observation = cursor.observe({                                                                               // 2398\n\t      addedAt: function addedAt(doc, atIndex) {                                                                      // 2399\n\t        if (!observation) {                                                                                          // 2400\n\t          data.push(doc);                                                                                            // 2401\n\t          return;                                                                                                    // 2402\n\t        }                                                                                                            // 2403\n\t        vm[k].splice(atIndex, 0, doc);                                                                               // 2404\n\t        _this5.$$changed(vm, k);                                                                                     // 2405\n\t      },                                                                                                             // 2406\n\t      changedAt: function changedAt(doc, oldDoc, atIndex) {                                                          // 2407\n\t        var diff = _jsondiffpatch2.default.diff(vm[k][atIndex], doc);                                                // 2408\n\t        _jsondiffpatch2.default.patch(vm[k][atIndex], diff);                                                         // 2409\n\t        _this5.$$changed(vm, k);                                                                                     // 2410\n\t      },                                                                                                             // 2411\n\t      movedTo: function movedTo(doc, fromIndex, toIndex) {                                                           // 2412\n\t        vm[k].splice(fromIndex, 1);                                                                                  // 2413\n\t        vm[k].splice(toIndex, 0, doc);                                                                               // 2414\n\t        _this5.$$changed(vm, k);                                                                                     // 2415\n\t      },                                                                                                             // 2416\n\t      removedAt: function removedAt(oldDoc, atIndex) {                                                               // 2417\n\t        vm[k].splice(atIndex, 1);                                                                                    // 2418\n\t        _this5.$$changed(vm, k);                                                                                     // 2419\n\t      }                                                                                                              // 2420\n\t    });                                                                                                              // 2421\n                                                                                                                      // 2422\n\t    return {                                                                                                         // 2423\n\t      observation: observation,                                                                                      // 2424\n\t      data: data                                                                                                     // 2425\n\t    };                                                                                                               // 2426\n\t  };                                                                                                                 // 2427\n                                                                                                                      // 2428\n\t  $$Reactive.$$handleNonCursor = function (vm, k, data) {                                                            // 2429\n\t    var v = vm[k];                                                                                                   // 2430\n                                                                                                                      // 2431\n\t    if (angular.isDefined(v)) {                                                                                      // 2432\n\t      delete vm[k];                                                                                                  // 2433\n\t      v = null;                                                                                                      // 2434\n\t    }                                                                                                                // 2435\n                                                                                                                      // 2436\n\t    if (angular.isUndefined(v)) {                                                                                    // 2437\n\t      this.$$setValHelper(vm, k, data);                                                                              // 2438\n\t    }                                                                                                                // 2439\n\t    // Update property if the new value is from the same type                                                        // 2440\n\t    else if ($$utils.areSiblings(v, data)) {                                                                         // 2441\n\t        var diff = _jsondiffpatch2.default.diff(v, data);                                                            // 2442\n\t        _jsondiffpatch2.default.patch(v, diff);                                                                      // 2443\n\t        this.$$changed(vm, k);                                                                                       // 2444\n\t      } else {                                                                                                       // 2445\n\t        vm[k] = data;                                                                                                // 2446\n\t      }                                                                                                              // 2447\n\t  };                                                                                                                 // 2448\n                                                                                                                      // 2449\n\t  // Notifies dependency in view model                                                                               // 2450\n\t  $$Reactive.$$depend = function (vm, k) {                                                                           // 2451\n\t    vm.$$dependencies[k].depend();                                                                                   // 2452\n\t  };                                                                                                                 // 2453\n                                                                                                                      // 2454\n\t  // Notifies change in view model                                                                                   // 2455\n\t  $$Reactive.$$changed = function (vm, k) {                                                                          // 2456\n\t    this.$$throttledDigest();                                                                                        // 2457\n\t    vm.$$dependencies[k].changed();                                                                                  // 2458\n\t  };                                                                                                                 // 2459\n                                                                                                                      // 2460\n\t  return $$Reactive;                                                                                                 // 2461\n\t}]);                                                                                                                 // 2462\n                                                                                                                      // 2463\n/***/ },                                                                                                              // 2464\n/* 22 */                                                                                                              // 2465\n/***/ function(module, exports) {                                                                                     // 2466\n                                                                                                                      // 2467\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_22__;                                                                     // 2468\n                                                                                                                      // 2469\n/***/ },                                                                                                              // 2470\n/* 23 */                                                                                                              // 2471\n/***/ function(module, exports) {                                                                                     // 2472\n                                                                                                                      // 2473\n\t'use strict';                                                                                                        // 2474\n                                                                                                                      // 2475\n\tObject.defineProperty(exports, \"__esModule\", {                                                                       // 2476\n\t  value: true                                                                                                        // 2477\n\t});                                                                                                                  // 2478\n\tvar name = exports.name = 'angular-templates';                                                                       // 2479\n                                                                                                                      // 2480\n\ttry {                                                                                                                // 2481\n\t  angular.module(name);                                                                                              // 2482\n\t} catch (e) {                                                                                                        // 2483\n\t  angular.module(name, []);                                                                                          // 2484\n\t}                                                                                                                    // 2485\n                                                                                                                      // 2486\n/***/ }                                                                                                               // 2487\n/******/ ])                                                                                                           // 2488\n});                                                                                                                   // 2489\n;                                                                                                                     // 2490\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\nPackage['angular-meteor-data'] = {};\n\n})();\n","servePath":"/packages/angular-meteor-data.js","sourceMap":{"version":3,"sources":["/packages/angular-meteor-data/.npm/package/node_modules/angular-meteor/dist/angular-meteor.js"],"names":[],"mappingsfile":"/packages/angular-meteor-data.js","sourcesContent":["/*! angular-meteor v1.3.11 */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"underscore\"), require(\"jsondiffpatch\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"underscore\", \"jsondiffpatch\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"angularMeteor\"] = factory(require(\"underscore\"), require(\"jsondiffpatch\"));\n\telse\n\t\troot[\"angularMeteor\"] = factory(root[\"_\"], root[\"jsondiffpatch\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_22__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\n\t__webpack_require__(1);\n\n\t__webpack_require__(4);\n\n\t__webpack_require__(5);\n\n\t__webpack_require__(6);\n\n\t__webpack_require__(7);\n\n\t__webpack_require__(8);\n\n\t__webpack_require__(9);\n\n\t__webpack_require__(10);\n\n\t__webpack_require__(11);\n\n\t__webpack_require__(12);\n\n\t__webpack_require__(13);\n\n\t__webpack_require__(14);\n\n\t__webpack_require__(15);\n\n\tvar _utils = __webpack_require__(16);\n\n\tvar _mixer = __webpack_require__(17);\n\n\tvar _scope = __webpack_require__(18);\n\n\tvar _core = __webpack_require__(19);\n\n\tvar _viewModel = __webpack_require__(20);\n\n\tvar _reactive = __webpack_require__(21);\n\n\tvar _templates = __webpack_require__(23);\n\n\t// legacy\n\t// lib\n\n\n\tvar name = 'angular-meteor';\n\n\t// new\n\n\texports.default = name;\n\n\n\tangular.module(name, [\n\t// new\n\t_utils.name, _mixer.name, _scope.name, _core.name, _viewModel.name, _reactive.name, _templates.name,\n\n\t// legacy\n\t'angular-meteor.ironrouter', 'angular-meteor.utils', 'angular-meteor.subscribe', 'angular-meteor.collection', 'angular-meteor.object', 'angular-meteor.user', 'angular-meteor.methods', 'angular-meteor.session', 'angular-meteor.camera']).run([_mixer.Mixer, _core.Core, _viewModel.ViewModel, _reactive.Reactive, function ($Mixer, $$Core, $$ViewModel, $$Reactive) {\n\t  // Load all mixins\n\t  $Mixer.mixin($$Core).mixin($$ViewModel).mixin($$Reactive);\n\t}])\n\n\t// legacy\n\t// Putting all services under $meteor service for syntactic sugar\n\t.service('$meteor', ['$meteorCollection', '$meteorCollectionFS', '$meteorObject', '$meteorMethods', '$meteorSession', '$meteorSubscribe', '$meteorUtils', '$meteorCamera', '$meteorUser', function ($meteorCollection, $meteorCollectionFS, $meteorObject, $meteorMethods, $meteorSession, $meteorSubscribe, $meteorUtils, $meteorCamera, $meteorUser) {\n\t  var _this = this;\n\n\t  this.collection = $meteorCollection;\n\t  this.collectionFS = $meteorCollectionFS;\n\t  this.object = $meteorObject;\n\t  this.subscribe = $meteorSubscribe.subscribe;\n\t  this.call = $meteorMethods.call;\n\t  this.session = $meteorSession;\n\t  this.autorun = $meteorUtils.autorun;\n\t  this.getCollectionByName = $meteorUtils.getCollectionByName;\n\t  this.getPicture = $meteorCamera.getPicture;\n\n\t  // $meteorUser\n\t  ['loginWithPassword', 'requireUser', 'requireValidUser', 'waitForUser', 'createUser', 'changePassword', 'forgotPassword', 'resetPassword', 'verifyEmail', 'loginWithMeteorDeveloperAccount', 'loginWithFacebook', 'loginWithGithub', 'loginWithGoogle', 'loginWithMeetup', 'loginWithTwitter', 'loginWithWeibo', 'logout', 'logoutOtherClients'].forEach(function (method) {\n\t    _this[method] = $meteorUser[method];\n\t  });\n\t}]);\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar _underscore = __webpack_require__(2);\n\n\tvar _underscore2 = _interopRequireDefault(_underscore);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\t'use strict';\n\n\t// https://github.com/DAB0mB/get-updates\n\t/*global\n\t angular, _\n\t */\n\n\t(function () {\n\t  var module = angular.module('getUpdates', []);\n\n\t  var utils = function () {\n\t    var rip = function rip(obj, level) {\n\t      if (level < 1) return {};\n\n\t      return _underscore2.default.reduce(obj, function (clone, v, k) {\n\t        v = _underscore2.default.isObject(v) ? rip(v, --level) : v;\n\t        clone[k] = v;\n\t        return clone;\n\t      }, {});\n\t    };\n\n\t    var toPaths = function toPaths(obj) {\n\t      var keys = getKeyPaths(obj);\n\t      var values = getDeepValues(obj);\n\t      return _underscore2.default.object(keys, values);\n\t    };\n\n\t    var getKeyPaths = function getKeyPaths(obj) {\n\t      var keys = _underscore2.default.keys(obj).map(function (k) {\n\t        var v = obj[k];\n\t        if (!_underscore2.default.isObject(v) || _underscore2.default.isEmpty(v) || _underscore2.default.isArray(v)) return k;\n\n\t        return getKeyPaths(v).map(function (subKey) {\n\t          return k + '.' + subKey;\n\t        });\n\t      });\n\n\t      return _underscore2.default.flatten(keys);\n\t    };\n\n\t    var getDeepValues = function getDeepValues(obj, arr) {\n\t      arr = arr || [];\n\n\t      _underscore2.default.values(obj).forEach(function (v) {\n\t        if (!_underscore2.default.isObject(v) || _underscore2.default.isEmpty(v) || _underscore2.default.isArray(v)) arr.push(v);else getDeepValues(v, arr);\n\t      });\n\n\t      return arr;\n\t    };\n\n\t    var flatten = function flatten(arr) {\n\t      return arr.reduce(function (flattened, v, i) {\n\t        if (_underscore2.default.isArray(v) && !_underscore2.default.isEmpty(v)) flattened.push.apply(flattened, flatten(v));else flattened.push(v);\n\n\t        return flattened;\n\t      }, []);\n\t    };\n\n\t    var setFilled = function setFilled(obj, k, v) {\n\t      if (!_underscore2.default.isEmpty(v)) obj[k] = v;\n\t    };\n\n\t    var assert = function assert(result, msg) {\n\t      if (!result) throwErr(msg);\n\t    };\n\n\t    var throwErr = function throwErr(msg) {\n\t      throw Error('get-updates error - ' + msg);\n\t    };\n\n\t    return {\n\t      rip: rip,\n\t      toPaths: toPaths,\n\t      getKeyPaths: getKeyPaths,\n\t      getDeepValues: getDeepValues,\n\t      setFilled: setFilled,\n\t      assert: assert,\n\t      throwErr: throwErr\n\t    };\n\t  }();\n\n\t  var getDifference = function () {\n\t    var getDifference = function getDifference(src, dst, isShallow) {\n\t      var level;\n\n\t      if (isShallow > 1) level = isShallow;else if (isShallow) level = 1;\n\n\t      if (level) {\n\t        src = utils.rip(src, level);\n\t        dst = utils.rip(dst, level);\n\t      }\n\n\t      return compare(src, dst);\n\t    };\n\n\t    var compare = function compare(src, dst) {\n\t      var srcKeys = _underscore2.default.keys(src);\n\t      var dstKeys = _underscore2.default.keys(dst);\n\n\t      var keys = _underscore2.default.chain([]).concat(srcKeys).concat(dstKeys).uniq().without('$$hashKey').value();\n\n\t      return keys.reduce(function (diff, k) {\n\t        var srcValue = src[k];\n\t        var dstValue = dst[k];\n\n\t        if (_underscore2.default.isDate(srcValue) && _underscore2.default.isDate(dstValue)) {\n\t          if (srcValue.getTime() != dstValue.getTime()) diff[k] = dstValue;\n\t        }\n\n\t        if (_underscore2.default.isObject(srcValue) && _underscore2.default.isObject(dstValue)) {\n\t          var valueDiff = getDifference(srcValue, dstValue);\n\t          utils.setFilled(diff, k, valueDiff);\n\t        } else if (srcValue !== dstValue) {\n\t          diff[k] = dstValue;\n\t        }\n\n\t        return diff;\n\t      }, {});\n\t    };\n\n\t    return getDifference;\n\t  }();\n\n\t  var getUpdates = function () {\n\t    var getUpdates = function getUpdates(src, dst, isShallow) {\n\t      utils.assert(_underscore2.default.isObject(src), 'first argument must be an object');\n\t      utils.assert(_underscore2.default.isObject(dst), 'second argument must be an object');\n\n\t      var diff = getDifference(src, dst, isShallow);\n\t      var paths = utils.toPaths(diff);\n\n\t      var set = createSet(paths);\n\t      var unset = createUnset(paths);\n\t      var pull = createPull(unset);\n\n\t      var updates = {};\n\t      utils.setFilled(updates, '$set', set);\n\t      utils.setFilled(updates, '$unset', unset);\n\t      utils.setFilled(updates, '$pull', pull);\n\n\t      return updates;\n\t    };\n\n\t    var createSet = function createSet(paths) {\n\t      var undefinedKeys = getUndefinedKeys(paths);\n\t      return _underscore2.default.omit(paths, undefinedKeys);\n\t    };\n\n\t    var createUnset = function createUnset(paths) {\n\t      var undefinedKeys = getUndefinedKeys(paths);\n\t      var unset = _underscore2.default.pick(paths, undefinedKeys);\n\n\t      return _underscore2.default.reduce(unset, function (result, v, k) {\n\t        result[k] = true;\n\t        return result;\n\t      }, {});\n\t    };\n\n\t    var createPull = function createPull(unset) {\n\t      var arrKeyPaths = _underscore2.default.keys(unset).map(function (k) {\n\t        var split = k.match(/(.*)\\.\\d+$/);\n\t        return split && split[1];\n\t      });\n\n\t      return _underscore2.default.compact(arrKeyPaths).reduce(function (pull, k) {\n\t        pull[k] = null;\n\t        return pull;\n\t      }, {});\n\t    };\n\n\t    var getUndefinedKeys = function getUndefinedKeys(obj) {\n\t      return _underscore2.default.keys(obj).filter(function (k) {\n\t        var v = obj[k];\n\t        return _underscore2.default.isUndefined(v);\n\t      });\n\t    };\n\n\t    return getUpdates;\n\t  }();\n\n\t  module.value('getUpdates', getUpdates);\n\t})();\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\n\tvar _underscore = __webpack_require__(3);\n\n\tvar _underscore2 = _interopRequireDefault(_underscore);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\tif (typeof _underscore2.default === 'undefined') {\n\t  if (typeof Package.underscore === 'undefined') {\n\t    throw new Error('underscore is missing');\n\t  }\n\t}\n\n\texports.default = _underscore2.default || Package.underscore._;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar _underscore = __webpack_require__(2);\n\n\tvar _underscore2 = _interopRequireDefault(_underscore);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\t'use strict'; /*global\n\t               angular, _, Package\n\t               */\n\n\tvar _module = angular.module('diffArray', ['getUpdates']);\n\n\t_module.factory('diffArray', ['getUpdates', function (getUpdates) {\n\t  var LocalCollection = Package.minimongo.LocalCollection;\n\t  var idStringify = LocalCollection._idStringify || Package['mongo-id'].MongoID.idStringify;\n\t  var idParse = LocalCollection._idParse || Package['mongo-id'].MongoID.idParse;\n\n\t  // Calculates the differences between `lastSeqArray` and\n\t  // `seqArray` and calls appropriate functions from `callbacks`.\n\t  // Reuses Minimongo's diff algorithm implementation.\n\t  // XXX Should be replaced with the original diffArray function here:\n\t  // https://github.com/meteor/meteor/blob/devel/packages/observe-sequence/observe_sequence.js#L152\n\t  // When it will become nested as well, tracking here: https://github.com/meteor/meteor/issues/3764\n\t  function diffArray(lastSeqArray, seqArray, callbacks, preventNestedDiff) {\n\t    preventNestedDiff = !!preventNestedDiff;\n\n\t    var diffFn = Package.minimongo.LocalCollection._diffQueryOrderedChanges || Package['diff-sequence'].DiffSequence.diffQueryOrderedChanges;\n\n\t    var oldObjIds = [];\n\t    var newObjIds = [];\n\t    var posOld = {}; // maps from idStringify'd ids\n\t    var posNew = {}; // ditto\n\t    var posCur = {};\n\t    var lengthCur = lastSeqArray.length;\n\n\t    _underscore2.default.each(seqArray, function (doc, i) {\n\t      newObjIds.push({ _id: doc._id });\n\t      posNew[idStringify(doc._id)] = i;\n\t    });\n\n\t    _underscore2.default.each(lastSeqArray, function (doc, i) {\n\t      oldObjIds.push({ _id: doc._id });\n\t      posOld[idStringify(doc._id)] = i;\n\t      posCur[idStringify(doc._id)] = i;\n\t    });\n\n\t    // Arrays can contain arbitrary objects. We don't diff the\n\t    // objects. Instead we always fire 'changedAt' callback on every\n\t    // object. The consumer of `observe-sequence` should deal with\n\t    // it appropriately.\n\t    diffFn(oldObjIds, newObjIds, {\n\t      addedBefore: function addedBefore(id, doc, before) {\n\t        var position = before ? posCur[idStringify(before)] : lengthCur;\n\n\t        _underscore2.default.each(posCur, function (pos, id) {\n\t          if (pos >= position) posCur[id]++;\n\t        });\n\n\t        lengthCur++;\n\t        posCur[idStringify(id)] = position;\n\n\t        callbacks.addedAt(id, seqArray[posNew[idStringify(id)]], position, before);\n\t      },\n\n\t      movedBefore: function movedBefore(id, before) {\n\t        var prevPosition = posCur[idStringify(id)];\n\t        var position = before ? posCur[idStringify(before)] : lengthCur - 1;\n\n\t        _underscore2.default.each(posCur, function (pos, id) {\n\t          if (pos >= prevPosition && pos <= position) posCur[id]--;else if (pos <= prevPosition && pos >= position) posCur[id]++;\n\t        });\n\n\t        posCur[idStringify(id)] = position;\n\n\t        callbacks.movedTo(id, seqArray[posNew[idStringify(id)]], prevPosition, position, before);\n\t      },\n\t      removed: function removed(id) {\n\t        var prevPosition = posCur[idStringify(id)];\n\n\t        _underscore2.default.each(posCur, function (pos, id) {\n\t          if (pos >= prevPosition) posCur[id]--;\n\t        });\n\n\t        delete posCur[idStringify(id)];\n\t        lengthCur--;\n\n\t        callbacks.removedAt(id, lastSeqArray[posOld[idStringify(id)]], prevPosition);\n\t      }\n\t    });\n\n\t    _underscore2.default.each(posNew, function (pos, idString) {\n\t      if (!_underscore2.default.has(posOld, idString)) return;\n\n\t      var id = idParse(idString);\n\t      var newItem = seqArray[pos] || {};\n\t      var oldItem = lastSeqArray[posOld[idString]];\n\t      var updates = getUpdates(oldItem, newItem, preventNestedDiff);\n\n\t      if (!_underscore2.default.isEmpty(updates)) callbacks.changedAt(id, updates, pos, oldItem);\n\t    });\n\t  }\n\n\t  diffArray.shallow = function (lastSeqArray, seqArray, callbacks) {\n\t    return diffArray(lastSeqArray, seqArray, callbacks, true);\n\t  };\n\n\t  diffArray.deepCopyChanges = function (oldItem, newItem) {\n\t    var setDiff = getUpdates(oldItem, newItem).$set;\n\n\t    _underscore2.default.each(setDiff, function (v, deepKey) {\n\t      setDeep(oldItem, deepKey, v);\n\t    });\n\t  };\n\n\t  diffArray.deepCopyRemovals = function (oldItem, newItem) {\n\t    var unsetDiff = getUpdates(oldItem, newItem).$unset;\n\n\t    _underscore2.default.each(unsetDiff, function (v, deepKey) {\n\t      unsetDeep(oldItem, deepKey);\n\t    });\n\t  };\n\n\t  // Finds changes between two collections\n\t  diffArray.getChanges = function (newCollection, oldCollection, diffMethod) {\n\t    var changes = { added: [], removed: [], changed: [] };\n\n\t    diffMethod(oldCollection, newCollection, {\n\t      addedAt: function addedAt(id, item, index) {\n\t        changes.added.push({ item: item, index: index });\n\t      },\n\n\t      removedAt: function removedAt(id, item, index) {\n\t        changes.removed.push({ item: item, index: index });\n\t      },\n\n\t      changedAt: function changedAt(id, updates, index, oldItem) {\n\t        changes.changed.push({ selector: id, modifier: updates });\n\t      },\n\n\t      movedTo: function movedTo(id, item, fromIndex, toIndex) {\n\t        // XXX do we need this?\n\t      }\n\t    });\n\n\t    return changes;\n\t  };\n\n\t  var setDeep = function setDeep(obj, deepKey, v) {\n\t    var split = deepKey.split('.');\n\t    var initialKeys = _underscore2.default.initial(split);\n\t    var lastKey = _underscore2.default.last(split);\n\n\t    initialKeys.reduce(function (subObj, k, i) {\n\t      var nextKey = split[i + 1];\n\n\t      if (isNumStr(nextKey)) {\n\t        if (subObj[k] === null) subObj[k] = [];\n\t        if (subObj[k].length == parseInt(nextKey)) subObj[k].push(null);\n\t      } else if (subObj[k] === null || !isHash(subObj[k])) {\n\t        subObj[k] = {};\n\t      }\n\n\t      return subObj[k];\n\t    }, obj);\n\n\t    var deepObj = getDeep(obj, initialKeys);\n\t    deepObj[lastKey] = v;\n\t    return v;\n\t  };\n\n\t  var unsetDeep = function unsetDeep(obj, deepKey) {\n\t    var split = deepKey.split('.');\n\t    var initialKeys = _underscore2.default.initial(split);\n\t    var lastKey = _underscore2.default.last(split);\n\t    var deepObj = getDeep(obj, initialKeys);\n\n\t    if (_underscore2.default.isArray(deepObj) && isNumStr(lastKey)) return !!deepObj.splice(lastKey, 1);else return delete deepObj[lastKey];\n\t  };\n\n\t  var getDeep = function getDeep(obj, keys) {\n\t    return keys.reduce(function (subObj, k) {\n\t      return subObj[k];\n\t    }, obj);\n\t  };\n\n\t  var isHash = function isHash(obj) {\n\t    return _underscore2.default.isObject(obj) && Object.getPrototypeOf(obj) === Object.prototype;\n\t  };\n\n\t  var isNumStr = function isNumStr(str) {\n\t    return str.match(/^\\d+$/);\n\t  };\n\n\t  return diffArray;\n\t}]);\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\n\tangular.module('angular-meteor.settings', []).constant('$angularMeteorSettings', {\n\t  suppressWarnings: true\n\t});\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\n\tangular.module('angular-meteor.ironrouter', []).run(['$compile', '$document', '$rootScope', function ($compile, $document, $rootScope) {\n\t  var Router = (Package['iron:router'] || {}).Router;\n\t  if (!Router) return;\n\n\t  var isLoaded = false;\n\n\t  // Recompile after iron:router builds page\n\t  Router.onAfterAction(function (req, res, next) {\n\t    Tracker.afterFlush(function () {\n\t      if (isLoaded) return;\n\t      $compile($document)($rootScope);\n\t      if (!$rootScope.$$phase) $rootScope.$apply();\n\t      isLoaded = true;\n\t    });\n\t  });\n\t}]);\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; }; /*global\n\t                                                                                                                                                                                                                                                   angular, _, Tracker, EJSON, FS, Mongo\n\t                                                                                                                                                                                                                                                   */\n\n\tvar _underscore = __webpack_require__(2);\n\n\tvar _underscore2 = _interopRequireDefault(_underscore);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\t'use strict';\n\n\tvar angularMeteorUtils = angular.module('angular-meteor.utils', ['angular-meteor.settings']);\n\n\tangularMeteorUtils.service('$meteorUtils', ['$q', '$timeout', '$angularMeteorSettings', function ($q, $timeout, $angularMeteorSettings) {\n\n\t  var self = this;\n\n\t  this.autorun = function (scope, fn) {\n\t    if (!$angularMeteorSettings.suppressWarnings) console.warn('[angular-meteor.utils.autorun] Please note that this method is deprecated since 1.3.0 and will be removed in 1.4.0! For more info: http://www.angular-meteor.com/api/1.3.6/autorun. You can disable this warning by following this guide http://www.angular-meteor.com/api/1.3.6/settings');\n\n\t    // wrapping around Deps.autorun\n\t    var comp = Tracker.autorun(function (c) {\n\t      fn(c);\n\t      // this is run immediately for the first call\n\t      // but after that, we need to $apply to start Angular digest\n\t      if (!c.firstRun) $timeout(angular.noop, 0);\n\t    });\n\n\t    // stop autorun when scope is destroyed\n\t    scope.$on('$destroy', function () {\n\t      comp.stop();\n\t    });\n\n\t    // return autorun object so that it can be stopped manually\n\t    return comp;\n\t  };\n\n\t  // Borrowed from angularFire\n\t  // https://github.com/firebase/angularfire/blob/master/src/utils.js#L445-L454\n\t  this.stripDollarPrefixedKeys = function (data) {\n\t    if (!_underscore2.default.isObject(data) || data instanceof Date || data instanceof File || EJSON.toJSONValue(data).$type === 'oid' || (typeof FS === 'undefined' ? 'undefined' : _typeof(FS)) === 'object' && data instanceof FS.File) return data;\n\n\t    var out = _underscore2.default.isArray(data) ? [] : {};\n\n\t    _underscore2.default.each(data, function (v, k) {\n\t      if (typeof k !== 'string' || k.charAt(0) !== '$') out[k] = self.stripDollarPrefixedKeys(v);\n\t    });\n\n\t    return out;\n\t  };\n\n\t  // Returns a callback which fulfills promise\n\t  this.fulfill = function (deferred, boundError, boundResult) {\n\t    return function (err, result) {\n\t      if (err) deferred.reject(boundError == null ? err : boundError);else if (typeof boundResult == \"function\") deferred.resolve(boundResult == null ? result : boundResult(result));else deferred.resolve(boundResult == null ? result : boundResult);\n\t    };\n\t  };\n\n\t  // creates a function which invokes method with the given arguments and returns a promise\n\t  this.promissor = function (obj, method) {\n\t    return function () {\n\t      var deferred = $q.defer();\n\t      var fulfill = self.fulfill(deferred);\n\t      var args = _underscore2.default.toArray(arguments).concat(fulfill);\n\t      obj[method].apply(obj, args);\n\t      return deferred.promise;\n\t    };\n\t  };\n\n\t  // creates a $q.all() promise and call digestion loop on fulfillment\n\t  this.promiseAll = function (promises) {\n\t    var allPromise = $q.all(promises);\n\n\t    allPromise.finally(function () {\n\t      // calls digestion loop with no conflicts\n\t      $timeout(angular.noop);\n\t    });\n\n\t    return allPromise;\n\t  };\n\n\t  this.getCollectionByName = function (string) {\n\t    return Mongo.Collection.get(string);\n\t  };\n\n\t  this.findIndexById = function (collection, doc) {\n\t    var foundDoc = _underscore2.default.find(collection, function (colDoc) {\n\t      // EJSON.equals used to compare Mongo.ObjectIDs and Strings.\n\t      return EJSON.equals(colDoc._id, doc._id);\n\t    });\n\n\t    return _underscore2.default.indexOf(collection, foundDoc);\n\t  };\n\t}]);\n\n\tangularMeteorUtils.run(['$rootScope', '$meteorUtils', function ($rootScope, $meteorUtils) {\n\t  Object.getPrototypeOf($rootScope).$meteorAutorun = function (fn) {\n\t    return $meteorUtils.autorun(this, fn);\n\t  };\n\t}]);\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t/*global\n\t angular, Meteor\n\t */\n\n\t'use strict';\n\n\tvar angularMeteorSubscribe = angular.module('angular-meteor.subscribe', ['angular-meteor.settings']);\n\n\tangularMeteorSubscribe.service('$meteorSubscribe', ['$q', '$angularMeteorSettings', function ($q, $angularMeteorSettings) {\n\n\t  var self = this;\n\n\t  this._subscribe = function (scope, deferred, args) {\n\t    if (!$angularMeteorSettings.suppressWarnings) console.warn('[angular-meteor.subscribe] Please note that this module is deprecated since 1.3.0 and will be removed in 1.4.0! Replace it with the new syntax described here: http://www.angular-meteor.com/api/1.3.6/subscribe. You can disable this warning by following this guide http://www.angular-meteor.com/api/1.3.6/settings');\n\n\t    var subscription = null;\n\t    var lastArg = args[args.length - 1];\n\n\t    // User supplied onStop callback\n\t    // save it for later use and remove\n\t    // from subscription arguments\n\t    if (angular.isObject(lastArg) && angular.isFunction(lastArg.onStop)) {\n\t      var _onStop = lastArg.onStop;\n\n\t      args.pop();\n\t    }\n\n\t    args.push({\n\t      onReady: function onReady() {\n\t        deferred.resolve(subscription);\n\t      },\n\t      onStop: function onStop(err) {\n\t        if (!deferred.promise.$$state.status) {\n\t          if (err) deferred.reject(err);else deferred.reject(new Meteor.Error(\"Subscription Stopped\", \"Subscription stopped by a call to stop method. Either by the client or by the server.\"));\n\t        } else if (_onStop)\n\t          // After promise was resolved or rejected\n\t          // call user supplied onStop callback.\n\t          _onStop.apply(this, Array.prototype.slice.call(arguments));\n\t      }\n\t    });\n\n\t    subscription = Meteor.subscribe.apply(scope, args);\n\n\t    return subscription;\n\t  };\n\n\t  this.subscribe = function () {\n\t    var deferred = $q.defer();\n\t    var args = Array.prototype.slice.call(arguments);\n\t    var subscription = null;\n\n\t    self._subscribe(this, deferred, args);\n\n\t    return deferred.promise;\n\t  };\n\t}]);\n\n\tangularMeteorSubscribe.run(['$rootScope', '$q', '$meteorSubscribe', function ($rootScope, $q, $meteorSubscribe) {\n\t  Object.getPrototypeOf($rootScope).$meteorSubscribe = function () {\n\t    var deferred = $q.defer();\n\t    var args = Array.prototype.slice.call(arguments);\n\n\t    var subscription = $meteorSubscribe._subscribe(this, deferred, args);\n\n\t    this.$on('$destroy', function () {\n\t      subscription.stop();\n\t    });\n\n\t    return deferred.promise;\n\t  };\n\t}]);\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar _underscore = __webpack_require__(2);\n\n\tvar _underscore2 = _interopRequireDefault(_underscore);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\t'use strict'; /*global\n\t               angular, _, Tracker, check, Match, Mongo\n\t               */\n\n\tvar angularMeteorCollection = angular.module('angular-meteor.collection', ['angular-meteor.stopper', 'angular-meteor.subscribe', 'angular-meteor.utils', 'diffArray', 'angular-meteor.settings']);\n\n\t// The reason angular meteor collection is a factory function and not something\n\t// that inherit from array comes from here:\n\t// http://perfectionkills.com/how-ecmascript-5-still-does-not-allow-to-subclass-an-array/\n\t// We went with the direct extensions approach.\n\tangularMeteorCollection.factory('AngularMeteorCollection', ['$q', '$meteorSubscribe', '$meteorUtils', '$rootScope', '$timeout', 'diffArray', '$angularMeteorSettings', function ($q, $meteorSubscribe, $meteorUtils, $rootScope, $timeout, diffArray, $angularMeteorSettings) {\n\n\t  function AngularMeteorCollection(curDefFunc, collection, diffArrayFunc, autoClientSave) {\n\t    if (!$angularMeteorSettings.suppressWarnings) console.warn('[angular-meteor.$meteorCollection] Please note that this method is deprecated since 1.3.0 and will be removed in 1.4.0! For more info: http://www.angular-meteor.com/api/1.3.0/meteorCollection. You can disable this warning by following this guide http://www.angular-meteor.com/api/1.3.6/settings');\n\n\t    var data = [];\n\t    // Server backup data to evaluate what changes come from client\n\t    // after each server update.\n\t    data._serverBackup = [];\n\t    // Array differ function.\n\t    data._diffArrayFunc = diffArrayFunc;\n\t    // Handler of the cursor observer.\n\t    data._hObserve = null;\n\t    // On new cursor autorun handler\n\t    // (autorun for reactive variables).\n\t    data._hNewCurAutorun = null;\n\t    // On new data autorun handler\n\t    // (autorun for cursor.fetch).\n\t    data._hDataAutorun = null;\n\n\t    if (angular.isDefined(collection)) {\n\t      data.$$collection = collection;\n\t    } else {\n\t      var cursor = curDefFunc();\n\t      data.$$collection = $meteorUtils.getCollectionByName(cursor.collection.name);\n\t    }\n\n\t    _underscore2.default.extend(data, AngularMeteorCollection);\n\t    data._startCurAutorun(curDefFunc, autoClientSave);\n\n\t    return data;\n\t  }\n\n\t  AngularMeteorCollection._startCurAutorun = function (curDefFunc, autoClientSave) {\n\t    var self = this;\n\n\t    self._hNewCurAutorun = Tracker.autorun(function () {\n\t      // When the reactive func gets recomputated we need to stop any previous\n\t      // observeChanges.\n\t      Tracker.onInvalidate(function () {\n\t        self._stopCursor();\n\t      });\n\n\t      if (autoClientSave) self._setAutoClientSave();\n\t      self._updateCursor(curDefFunc(), autoClientSave);\n\t    });\n\t  };\n\n\t  AngularMeteorCollection.subscribe = function () {\n\t    $meteorSubscribe.subscribe.apply(this, arguments);\n\t    return this;\n\t  };\n\n\t  AngularMeteorCollection.save = function (docs, useUnsetModifier) {\n\t    // save whole collection\n\t    if (!docs) docs = this;\n\t    // save single doc\n\t    docs = [].concat(docs);\n\n\t    var promises = docs.map(function (doc) {\n\t      return this._upsertDoc(doc, useUnsetModifier);\n\t    }, this);\n\n\t    return $meteorUtils.promiseAll(promises);\n\t  };\n\n\t  AngularMeteorCollection._upsertDoc = function (doc, useUnsetModifier) {\n\t    var deferred = $q.defer();\n\t    var collection = this.$$collection;\n\t    var createFulfill = _underscore2.default.partial($meteorUtils.fulfill, deferred, null);\n\n\t    // delete $$hashkey\n\t    doc = $meteorUtils.stripDollarPrefixedKeys(doc);\n\t    var docId = doc._id;\n\t    var isExist = collection.findOne(docId);\n\n\t    // update\n\t    if (isExist) {\n\t      // Deletes _id property (from the copy) so that\n\t      // it can be $set using update.\n\t      delete doc._id;\n\t      var modifier = useUnsetModifier ? { $unset: doc } : { $set: doc };\n\t      // NOTE: do not use #upsert() method, since it does not exist in some collections\n\t      collection.update(docId, modifier, createFulfill(function () {\n\t        return { _id: docId, action: 'updated' };\n\t      }));\n\t    }\n\t    // insert\n\t    else {\n\t        collection.insert(doc, createFulfill(function (id) {\n\t          return { _id: id, action: 'inserted' };\n\t        }));\n\t      }\n\n\t    return deferred.promise;\n\t  };\n\n\t  // performs $pull operations parallely.\n\t  // used for handling splice operations returned from getUpdates() to prevent conflicts.\n\t  // see issue: https://github.com/Urigo/angular-meteor/issues/793\n\t  AngularMeteorCollection._updateDiff = function (selector, update, callback) {\n\t    callback = callback || angular.noop;\n\t    var setters = _underscore2.default.omit(update, '$pull');\n\t    var updates = [setters];\n\n\t    _underscore2.default.each(update.$pull, function (pull, prop) {\n\t      var puller = {};\n\t      puller[prop] = pull;\n\t      updates.push({ $pull: puller });\n\t    });\n\n\t    this._updateParallel(selector, updates, callback);\n\t  };\n\n\t  // performs each update operation parallely\n\t  AngularMeteorCollection._updateParallel = function (selector, updates, callback) {\n\t    var self = this;\n\t    var done = _underscore2.default.after(updates.length, callback);\n\n\t    var next = function next(err, affectedDocsNum) {\n\t      if (err) return callback(err);\n\t      done(null, affectedDocsNum);\n\t    };\n\n\t    _underscore2.default.each(updates, function (update) {\n\t      self.$$collection.update(selector, update, next);\n\t    });\n\t  };\n\n\t  AngularMeteorCollection.remove = function (keyOrDocs) {\n\t    var keys;\n\n\t    // remove whole collection\n\t    if (!keyOrDocs) {\n\t      keys = _underscore2.default.pluck(this, '_id');\n\t    }\n\t    // remove docs\n\t    else {\n\t        keyOrDocs = [].concat(keyOrDocs);\n\n\t        keys = _underscore2.default.map(keyOrDocs, function (keyOrDoc) {\n\t          return keyOrDoc._id || keyOrDoc;\n\t        });\n\t      }\n\n\t    // Checks if all keys are correct.\n\t    check(keys, [Match.OneOf(String, Mongo.ObjectID)]);\n\n\t    var promises = keys.map(function (key) {\n\t      return this._removeDoc(key);\n\t    }, this);\n\n\t    return $meteorUtils.promiseAll(promises);\n\t  };\n\n\t  AngularMeteorCollection._removeDoc = function (id) {\n\t    var deferred = $q.defer();\n\t    var collection = this.$$collection;\n\t    var fulfill = $meteorUtils.fulfill(deferred, null, { _id: id, action: 'removed' });\n\t    collection.remove(id, fulfill);\n\t    return deferred.promise;\n\t  };\n\n\t  AngularMeteorCollection._updateCursor = function (cursor, autoClientSave) {\n\t    var self = this;\n\t    // XXX - consider adding an option for a non-orderd result for faster performance\n\t    if (self._hObserve) self._stopObserving();\n\n\t    self._hObserve = cursor.observe({\n\t      addedAt: function addedAt(doc, atIndex) {\n\t        self.splice(atIndex, 0, doc);\n\t        self._serverBackup.splice(atIndex, 0, doc);\n\t        self._setServerUpdateMode();\n\t      },\n\n\t      changedAt: function changedAt(doc, oldDoc, atIndex) {\n\t        diffArray.deepCopyChanges(self[atIndex], doc);\n\t        diffArray.deepCopyRemovals(self[atIndex], doc);\n\t        self._serverBackup[atIndex] = self[atIndex];\n\t        self._setServerUpdateMode();\n\t      },\n\n\t      movedTo: function movedTo(doc, fromIndex, toIndex) {\n\t        self.splice(fromIndex, 1);\n\t        self.splice(toIndex, 0, doc);\n\t        self._serverBackup.splice(fromIndex, 1);\n\t        self._serverBackup.splice(toIndex, 0, doc);\n\t        self._setServerUpdateMode();\n\t      },\n\n\t      removedAt: function removedAt(oldDoc) {\n\t        var removedIndex = $meteorUtils.findIndexById(self, oldDoc);\n\n\t        if (removedIndex != -1) {\n\t          self.splice(removedIndex, 1);\n\t          self._serverBackup.splice(removedIndex, 1);\n\t          self._setServerUpdateMode();\n\t        } else {\n\t          // If it's been removed on client then it's already not in collection\n\t          // itself but still is in the _serverBackup.\n\t          removedIndex = $meteorUtils.findIndexById(self._serverBackup, oldDoc);\n\n\t          if (removedIndex != -1) {\n\t            self._serverBackup.splice(removedIndex, 1);\n\t          }\n\t        }\n\t      }\n\t    });\n\n\t    self._hDataAutorun = Tracker.autorun(function () {\n\t      cursor.fetch();\n\t      if (self._serverMode) self._unsetServerUpdateMode(autoClientSave);\n\t    });\n\t  };\n\n\t  AngularMeteorCollection._stopObserving = function () {\n\t    this._hObserve.stop();\n\t    this._hDataAutorun.stop();\n\t    delete this._serverMode;\n\t    delete this._hUnsetTimeout;\n\t  };\n\n\t  AngularMeteorCollection._setServerUpdateMode = function (name) {\n\t    this._serverMode = true;\n\t    // To simplify server update logic, we don't follow\n\t    // updates from the client at the same time.\n\t    this._unsetAutoClientSave();\n\t  };\n\n\t  // Here we use $timeout to combine multiple updates that go\n\t  // each one after another.\n\t  AngularMeteorCollection._unsetServerUpdateMode = function (autoClientSave) {\n\t    var self = this;\n\n\t    if (self._hUnsetTimeout) {\n\t      $timeout.cancel(self._hUnsetTimeout);\n\t      self._hUnsetTimeout = null;\n\t    }\n\n\t    self._hUnsetTimeout = $timeout(function () {\n\t      self._serverMode = false;\n\t      // Finds updates that was potentially done from the client side\n\t      // and saves them.\n\t      var changes = diffArray.getChanges(self, self._serverBackup, self._diffArrayFunc);\n\t      self._saveChanges(changes);\n\t      // After, continues following client updates.\n\t      if (autoClientSave) self._setAutoClientSave();\n\t    }, 0);\n\t  };\n\n\t  AngularMeteorCollection.stop = function () {\n\t    this._stopCursor();\n\t    this._hNewCurAutorun.stop();\n\t  };\n\n\t  AngularMeteorCollection._stopCursor = function () {\n\t    this._unsetAutoClientSave();\n\n\t    if (this._hObserve) {\n\t      this._hObserve.stop();\n\t      this._hDataAutorun.stop();\n\t    }\n\n\t    this.splice(0);\n\t    this._serverBackup.splice(0);\n\t  };\n\n\t  AngularMeteorCollection._unsetAutoClientSave = function (name) {\n\t    if (this._hRegAutoBind) {\n\t      this._hRegAutoBind();\n\t      this._hRegAutoBind = null;\n\t    }\n\t  };\n\n\t  AngularMeteorCollection._setAutoClientSave = function () {\n\t    var self = this;\n\n\t    // Always unsets auto save to keep only one $watch handler.\n\t    self._unsetAutoClientSave();\n\n\t    self._hRegAutoBind = $rootScope.$watch(function () {\n\t      return self;\n\t    }, function (nItems, oItems) {\n\t      if (nItems === oItems) return;\n\n\t      var changes = diffArray.getChanges(self, oItems, self._diffArrayFunc);\n\t      self._unsetAutoClientSave();\n\t      self._saveChanges(changes);\n\t      self._setAutoClientSave();\n\t    }, true);\n\t  };\n\n\t  AngularMeteorCollection._saveChanges = function (changes) {\n\t    var self = this;\n\n\t    // Saves added documents\n\t    // Using reversed iteration to prevent indexes from changing during splice\n\t    var addedDocs = changes.added.reverse().map(function (descriptor) {\n\t      self.splice(descriptor.index, 1);\n\t      return descriptor.item;\n\t    });\n\n\t    if (addedDocs.length) self.save(addedDocs);\n\n\t    // Removes deleted documents\n\t    var removedDocs = changes.removed.map(function (descriptor) {\n\t      return descriptor.item;\n\t    });\n\n\t    if (removedDocs.length) self.remove(removedDocs);\n\n\t    // Updates changed documents\n\t    changes.changed.forEach(function (descriptor) {\n\t      self._updateDiff(descriptor.selector, descriptor.modifier);\n\t    });\n\t  };\n\n\t  return AngularMeteorCollection;\n\t}]);\n\n\tangularMeteorCollection.factory('$meteorCollectionFS', ['$meteorCollection', 'diffArray', '$angularMeteorSettings', function ($meteorCollection, diffArray, $angularMeteorSettings) {\n\t  function $meteorCollectionFS(reactiveFunc, autoClientSave, collection) {\n\n\t    if (!$angularMeteorSettings.suppressWarnings) console.warn('[angular-meteor.$meteorCollectionFS] Please note that this method is deprecated since 1.3.0 and will be removed in 1.4.0! For more info: http://www.angular-meteor.com/api/1.3.0/files. You can disable this warning by following this guide http://www.angular-meteor.com/api/1.3.6/settings');\n\t    return new $meteorCollection(reactiveFunc, autoClientSave, collection, diffArray.shallow);\n\t  }\n\n\t  return $meteorCollectionFS;\n\t}]);\n\n\tangularMeteorCollection.factory('$meteorCollection', ['AngularMeteorCollection', '$rootScope', 'diffArray', function (AngularMeteorCollection, $rootScope, diffArray) {\n\t  function $meteorCollection(reactiveFunc, autoClientSave, collection, diffFn) {\n\t    // Validate parameters\n\t    if (!reactiveFunc) {\n\t      throw new TypeError('The first argument of $meteorCollection is undefined.');\n\t    }\n\n\t    if (!(angular.isFunction(reactiveFunc) || angular.isFunction(reactiveFunc.find))) {\n\t      throw new TypeError('The first argument of $meteorCollection must be a function or ' + 'a have a find function property.');\n\t    }\n\n\t    if (!angular.isFunction(reactiveFunc)) {\n\t      collection = angular.isDefined(collection) ? collection : reactiveFunc;\n\t      reactiveFunc = _underscore2.default.bind(reactiveFunc.find, reactiveFunc);\n\t    }\n\n\t    // By default auto save - true.\n\t    autoClientSave = angular.isDefined(autoClientSave) ? autoClientSave : true;\n\t    diffFn = diffFn || diffArray;\n\t    return new AngularMeteorCollection(reactiveFunc, collection, diffFn, autoClientSave);\n\t  }\n\n\t  return $meteorCollection;\n\t}]);\n\n\tangularMeteorCollection.run(['$rootScope', '$meteorCollection', '$meteorCollectionFS', '$meteorStopper', function ($rootScope, $meteorCollection, $meteorCollectionFS, $meteorStopper) {\n\t  var scopeProto = Object.getPrototypeOf($rootScope);\n\t  scopeProto.$meteorCollection = $meteorStopper($meteorCollection);\n\t  scopeProto.$meteorCollectionFS = $meteorStopper($meteorCollectionFS);\n\t}]);\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar _underscore = __webpack_require__(2);\n\n\tvar _underscore2 = _interopRequireDefault(_underscore);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\t'use strict'; /*global\n\t                angular, _, Mongo\n\t              */\n\n\tvar angularMeteorObject = angular.module('angular-meteor.object', ['angular-meteor.utils', 'angular-meteor.subscribe', 'angular-meteor.collection', 'getUpdates', 'diffArray', 'angular-meteor.settings']);\n\n\tangularMeteorObject.factory('AngularMeteorObject', ['$q', '$meteorSubscribe', '$meteorUtils', 'diffArray', 'getUpdates', 'AngularMeteorCollection', '$angularMeteorSettings', function ($q, $meteorSubscribe, $meteorUtils, diffArray, getUpdates, AngularMeteorCollection, $angularMeteorSettings) {\n\n\t  // A list of internals properties to not watch for, nor pass to the Document on update and etc.\n\t  AngularMeteorObject.$$internalProps = ['$$collection', '$$options', '$$id', '$$hashkey', '$$internalProps', '$$scope', 'bind', 'save', 'reset', 'subscribe', 'stop', 'autorunComputation', 'unregisterAutoBind', 'unregisterAutoDestroy', 'getRawObject', '_auto', '_setAutos', '_eventEmitter', '_serverBackup', '_updateDiff', '_updateParallel', '_getId'];\n\n\t  function AngularMeteorObject(collection, selector, options) {\n\t    if (!$angularMeteorSettings.suppressWarnings) console.warn('[angular-meteor.$meteorObject] Please note that this method is deprecated since 1.3.0 and will be removed in 1.4.0! For more info: http://www.angular-meteor.com/api/1.3.0/meteorObject. You can disable this warning by following this guide http://www.angular-meteor.com/api/1.3.6/settings');\n\t    // Make data not be an object so we can extend it to preserve\n\t    // Collection Helpers and the like\n\t    var helpers = collection._helpers;\n\t    var data = _underscore2.default.isFunction(helpers) ? Object.create(helpers.prototype) : {};\n\t    var doc = collection.findOne(selector, options);\n\t    var collectionExtension = _underscore2.default.pick(AngularMeteorCollection, '_updateParallel');\n\t    _underscore2.default.extend(data, doc);\n\t    _underscore2.default.extend(data, AngularMeteorObject);\n\t    _underscore2.default.extend(data, collectionExtension);\n\n\t    // Omit options that may spoil document finding\n\t    data.$$options = _underscore2.default.omit(options, 'skip', 'limit');\n\t    data.$$collection = collection;\n\t    data.$$id = data._getId(selector);\n\t    data._serverBackup = doc || {};\n\n\t    return data;\n\t  }\n\n\t  AngularMeteorObject.getRawObject = function () {\n\t    return angular.copy(_underscore2.default.omit(this, this.$$internalProps));\n\t  };\n\n\t  AngularMeteorObject.subscribe = function () {\n\t    $meteorSubscribe.subscribe.apply(this, arguments);\n\t    return this;\n\t  };\n\n\t  AngularMeteorObject.save = function (custom) {\n\t    var deferred = $q.defer();\n\t    var collection = this.$$collection;\n\t    var createFulfill = _underscore2.default.partial($meteorUtils.fulfill, deferred, null);\n\t    var oldDoc = collection.findOne(this.$$id);\n\t    var mods;\n\n\t    // update\n\t    if (oldDoc) {\n\t      if (custom) mods = { $set: custom };else {\n\t        mods = getUpdates(oldDoc, this.getRawObject());\n\t        // If there are no updates, there is nothing to do here, returning\n\t        if (_underscore2.default.isEmpty(mods)) {\n\t          return $q.when({ action: 'updated' });\n\t        }\n\t      }\n\n\t      // NOTE: do not use #upsert() method, since it does not exist in some collections\n\t      this._updateDiff(mods, createFulfill({ action: 'updated' }));\n\t    }\n\t    // insert\n\t    else {\n\t        if (custom) mods = _underscore2.default.clone(custom);else mods = this.getRawObject();\n\n\t        mods._id = mods._id || this.$$id;\n\t        collection.insert(mods, createFulfill({ action: 'inserted' }));\n\t      }\n\n\t    return deferred.promise;\n\t  };\n\n\t  AngularMeteorObject._updateDiff = function (update, callback) {\n\t    var selector = this.$$id;\n\t    AngularMeteorCollection._updateDiff.call(this, selector, update, callback);\n\t  };\n\n\t  AngularMeteorObject.reset = function (keepClientProps) {\n\t    var self = this;\n\t    var options = this.$$options;\n\t    var id = this.$$id;\n\t    var doc = this.$$collection.findOne(id, options);\n\n\t    if (doc) {\n\t      // extend SubObject\n\t      var docKeys = _underscore2.default.keys(doc);\n\t      var docExtension = _underscore2.default.pick(doc, docKeys);\n\t      var clientProps;\n\n\t      _underscore2.default.extend(self, docExtension);\n\t      _underscore2.default.extend(self._serverBackup, docExtension);\n\n\t      if (keepClientProps) {\n\t        clientProps = _underscore2.default.intersection(_underscore2.default.keys(self), _underscore2.default.keys(self._serverBackup));\n\t      } else {\n\t        clientProps = _underscore2.default.keys(self);\n\t      }\n\n\t      var serverProps = _underscore2.default.keys(doc);\n\t      var removedKeys = _underscore2.default.difference(clientProps, serverProps, self.$$internalProps);\n\n\t      removedKeys.forEach(function (prop) {\n\t        delete self[prop];\n\t        delete self._serverBackup[prop];\n\t      });\n\t    } else {\n\t      _underscore2.default.keys(this.getRawObject()).forEach(function (prop) {\n\t        delete self[prop];\n\t      });\n\n\t      self._serverBackup = {};\n\t    }\n\t  };\n\n\t  AngularMeteorObject.stop = function () {\n\t    if (this.unregisterAutoDestroy) this.unregisterAutoDestroy();\n\n\t    if (this.unregisterAutoBind) this.unregisterAutoBind();\n\n\t    if (this.autorunComputation && this.autorunComputation.stop) this.autorunComputation.stop();\n\t  };\n\n\t  AngularMeteorObject._getId = function (selector) {\n\t    var options = _underscore2.default.extend({}, this.$$options, {\n\t      fields: { _id: 1 },\n\t      reactive: false,\n\t      transform: null\n\t    });\n\n\t    var doc = this.$$collection.findOne(selector, options);\n\n\t    if (doc) return doc._id;\n\t    if (selector instanceof Mongo.ObjectID) return selector;\n\t    if (_underscore2.default.isString(selector)) return selector;\n\t    return new Mongo.ObjectID();\n\t  };\n\n\t  return AngularMeteorObject;\n\t}]);\n\n\tangularMeteorObject.factory('$meteorObject', ['$rootScope', '$meteorUtils', 'getUpdates', 'AngularMeteorObject', function ($rootScope, $meteorUtils, getUpdates, AngularMeteorObject) {\n\t  function $meteorObject(collection, id, auto, options) {\n\t    // Validate parameters\n\t    if (!collection) {\n\t      throw new TypeError(\"The first argument of $meteorObject is undefined.\");\n\t    }\n\n\t    if (!angular.isFunction(collection.findOne)) {\n\t      throw new TypeError(\"The first argument of $meteorObject must be a function or a have a findOne function property.\");\n\t    }\n\n\t    var data = new AngularMeteorObject(collection, id, options);\n\t    // Making auto default true - http://stackoverflow.com/a/15464208/1426570\n\t    data._auto = auto !== false;\n\t    _underscore2.default.extend(data, $meteorObject);\n\t    data._setAutos();\n\t    return data;\n\t  }\n\n\t  $meteorObject._setAutos = function () {\n\t    var self = this;\n\n\t    this.autorunComputation = $meteorUtils.autorun($rootScope, function () {\n\t      self.reset(true);\n\t    });\n\n\t    // Deep watches the model and performs autobind\n\t    this.unregisterAutoBind = this._auto && $rootScope.$watch(function () {\n\t      return self.getRawObject();\n\t    }, function (item, oldItem) {\n\t      if (item !== oldItem) self.save();\n\t    }, true);\n\n\t    this.unregisterAutoDestroy = $rootScope.$on('$destroy', function () {\n\t      if (self && self.stop) self.pop();\n\t    });\n\t  };\n\n\t  return $meteorObject;\n\t}]);\n\n\tangularMeteorObject.run(['$rootScope', '$meteorObject', '$meteorStopper', function ($rootScope, $meteorObject, $meteorStopper) {\n\t  var scopeProto = Object.getPrototypeOf($rootScope);\n\t  scopeProto.$meteorObject = $meteorStopper($meteorObject);\n\t}]);\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar _underscore = __webpack_require__(2);\n\n\tvar _underscore2 = _interopRequireDefault(_underscore);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\t'use strict'; /*global\n\t               angular, _, Package, Meteor\n\t               */\n\n\tvar angularMeteorUser = angular.module('angular-meteor.user', ['angular-meteor.utils', 'angular-meteor.core', 'angular-meteor.settings']);\n\n\t// requires package 'accounts-password'\n\tangularMeteorUser.service('$meteorUser', ['$rootScope', '$meteorUtils', '$q', '$angularMeteorSettings', function ($rootScope, $meteorUtils, $q, $angularMeteorSettings) {\n\n\t  var pack = Package['accounts-base'];\n\t  if (!pack) return;\n\n\t  var self = this;\n\t  var Accounts = pack.Accounts;\n\n\t  this.waitForUser = function () {\n\t    if (!$angularMeteorSettings.suppressWarnings) console.warn('[angular-meteor.waitForUser] Please note that this method is deprecated since 1.3.0 and will be removed in 1.4.0! http://info.meteor.com/blog/angular-meteor-1.3. You can disable this warning by following this guide http://www.angular-meteor.com/api/1.3.6/settings');\n\n\t    var deferred = $q.defer();\n\n\t    $meteorUtils.autorun($rootScope, function () {\n\t      if (!Meteor.loggingIn()) deferred.resolve(Meteor.user());\n\t    }, true);\n\n\t    return deferred.promise;\n\t  };\n\n\t  this.requireUser = function () {\n\t    if (!$angularMeteorSettings.suppressWarnings) {\n\t      console.warn('[angular-meteor.requireUser] Please note that this method is deprecated since 1.3.0 and will be removed in 1.4.0! http://info.meteor.com/blog/angular-meteor-1.3. You can disable this warning by following this guide http://www.angular-meteor.com/api/1.3.6/settings');\n\t    }\n\n\t    var deferred = $q.defer();\n\n\t    $meteorUtils.autorun($rootScope, function () {\n\t      if (!Meteor.loggingIn()) {\n\t        if (Meteor.user() === null) deferred.reject(\"AUTH_REQUIRED\");else deferred.resolve(Meteor.user());\n\t      }\n\t    }, true);\n\n\t    return deferred.promise;\n\t  };\n\n\t  this.requireValidUser = function (validatorFn) {\n\t    if (!$angularMeteorSettings.suppressWarnings) console.warn('[angular-meteor.requireValidUser] Please note that this method is deprecated since 1.3.0 and will be removed in 1.4.0! http://info.meteor.com/blog/angular-meteor-1.3. You can disable this warning by following this guide http://www.angular-meteor.com/api/1.3.6/settings');\n\n\t    return self.requireUser(true).then(function (user) {\n\t      var valid = validatorFn(user);\n\n\t      if (valid === true) return user;else if (typeof valid === \"string\") return $q.reject(valid);else return $q.reject(\"FORBIDDEN\");\n\t    });\n\t  };\n\n\t  this.loginWithPassword = $meteorUtils.promissor(Meteor, 'loginWithPassword');\n\t  this.createUser = $meteorUtils.promissor(Accounts, 'createUser');\n\t  this.changePassword = $meteorUtils.promissor(Accounts, 'changePassword');\n\t  this.forgotPassword = $meteorUtils.promissor(Accounts, 'forgotPassword');\n\t  this.resetPassword = $meteorUtils.promissor(Accounts, 'resetPassword');\n\t  this.verifyEmail = $meteorUtils.promissor(Accounts, 'verifyEmail');\n\t  this.logout = $meteorUtils.promissor(Meteor, 'logout');\n\t  this.logoutOtherClients = $meteorUtils.promissor(Meteor, 'logoutOtherClients');\n\t  this.loginWithFacebook = $meteorUtils.promissor(Meteor, 'loginWithFacebook');\n\t  this.loginWithTwitter = $meteorUtils.promissor(Meteor, 'loginWithTwitter');\n\t  this.loginWithGoogle = $meteorUtils.promissor(Meteor, 'loginWithGoogle');\n\t  this.loginWithGithub = $meteorUtils.promissor(Meteor, 'loginWithGithub');\n\t  this.loginWithMeteorDeveloperAccount = $meteorUtils.promissor(Meteor, 'loginWithMeteorDeveloperAccount');\n\t  this.loginWithMeetup = $meteorUtils.promissor(Meteor, 'loginWithMeetup');\n\t  this.loginWithWeibo = $meteorUtils.promissor(Meteor, 'loginWithWeibo');\n\t}]);\n\n\tangularMeteorUser.run(['$rootScope', '$angularMeteorSettings', '$$Core', function ($rootScope, $angularMeteorSettings, $$Core) {\n\n\t  var ScopeProto = Object.getPrototypeOf($rootScope);\n\t  _underscore2.default.extend(ScopeProto, $$Core);\n\n\t  $rootScope.autorun(function () {\n\t    if (!Meteor.user) return;\n\t    $rootScope.currentUser = Meteor.user();\n\t    $rootScope.loggingIn = Meteor.loggingIn();\n\t  });\n\t}]);\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar _underscore = __webpack_require__(2);\n\n\tvar _underscore2 = _interopRequireDefault(_underscore);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\t'use strict'; /*global\n\t               angular, _, Meteor\n\t               */\n\n\tvar angularMeteorMethods = angular.module('angular-meteor.methods', ['angular-meteor.utils', 'angular-meteor.settings']);\n\n\tangularMeteorMethods.service('$meteorMethods', ['$q', '$meteorUtils', '$angularMeteorSettings', function ($q, $meteorUtils, $angularMeteorSettings) {\n\t  this.call = function () {\n\t    if (!$angularMeteorSettings.suppressWarnings) console.warn('[angular-meteor.$meteor.call] Please note that this method is deprecated since 1.3.0 and will be removed in 1.4.0! For more info: http://www.angular-meteor.com/api/1.3.0/methods. You can disable this warning by following this guide http://www.angular-meteor.com/api/1.3.6/settings');\n\n\t    var deferred = $q.defer();\n\t    var fulfill = $meteorUtils.fulfill(deferred);\n\t    var args = _underscore2.default.toArray(arguments).concat(fulfill);\n\t    Meteor.call.apply(this, args);\n\t    return deferred.promise;\n\t  };\n\t}]);\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\t/*global\n\t angular, Session\n\t */\n\n\t'use strict';\n\n\tvar angularMeteorSession = angular.module('angular-meteor.session', ['angular-meteor.utils', 'angular-meteor.settings']);\n\n\tangularMeteorSession.factory('$meteorSession', ['$meteorUtils', '$parse', '$angularMeteorSettings', function ($meteorUtils, $parse, $angularMeteorSettings) {\n\t  return function (session) {\n\n\t    return {\n\n\t      bind: function bind(scope, model) {\n\t        if (!$angularMeteorSettings.suppressWarnings) console.warn('[angular-meteor.session.bind] Please note that this method is deprecated since 1.3.0 and will be removed in 1.4.0! http://www.angular-meteor.com/api/1.3.0/session. You can disable this warning by following this guide http://www.angular-meteor.com/api/1.3.6/settings');\n\n\t        var getter = $parse(model);\n\t        var setter = getter.assign;\n\t        $meteorUtils.autorun(scope, function () {\n\t          setter(scope, Session.get(session));\n\t        });\n\n\t        scope.$watch(model, function (newItem, oldItem) {\n\t          Session.set(session, getter(scope));\n\t        }, true);\n\t      }\n\t    };\n\t  };\n\t}]);\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\n\t/*global\n\t angular, Package\n\t */\n\n\t'use strict';\n\n\tvar angularMeteorCamera = angular.module('angular-meteor.camera', ['angular-meteor.utils', 'angular-meteor.settings']);\n\n\t// requires package 'mdg:camera'\n\tangularMeteorCamera.service('$meteorCamera', ['$q', '$meteorUtils', '$angularMeteorSettings', function ($q, $meteorUtils, $angularMeteorSettings) {\n\t  if (!$angularMeteorSettings.suppressWarnings) console.warn('[angular-meteor.camera] Please note that this module has moved to a separate package and is deprecated since 1.3.0 and will be removed in 1.4.0! For more info: http://www.angular-meteor.com/api/1.3.0/camera. You can disable this warning by following this guide http://www.angular-meteor.com/api/1.3.6/settings');\n\t  var pack = Package['mdg:camera'];\n\t  if (!pack) return;\n\n\t  var MeteorCamera = pack.MeteorCamera;\n\n\t  this.getPicture = function (options) {\n\t    if (!$angularMeteorSettings.suppressWarnings) console.warn('[angular-meteor.camera] Please note that this module has moved to a separate package and is deprecated since 1.3.0 and will be removed in 1.4.0! For more info: http://www.angular-meteor.com/api/1.3.0/camera. You can disable this warning by following this guide http://www.angular-meteor.com/api/1.3.6/settings');\n\n\t    options = options || {};\n\t    var deferred = $q.defer();\n\t    MeteorCamera.getPicture(options, $meteorUtils.fulfill(deferred));\n\t    return deferred.promise;\n\t  };\n\t}]);\n\n/***/ },\n/* 15 */\n/***/ function(module, exports) {\n\n\t/*global\n\t angular\n\t */\n\n\t'use strict';\n\n\tvar angularMeteorStopper = angular.module('angular-meteor.stopper', ['angular-meteor.subscribe']);\n\n\tangularMeteorStopper.factory('$meteorStopper', ['$q', '$meteorSubscribe', function ($q, $meteorSubscribe) {\n\t  function $meteorStopper($meteorEntity) {\n\t    return function () {\n\t      var args = Array.prototype.slice.call(arguments);\n\t      var meteorEntity = $meteorEntity.apply(this, args);\n\n\t      angular.extend(meteorEntity, $meteorStopper);\n\t      meteorEntity.$$scope = this;\n\n\t      this.$on('$destroy', function () {\n\t        meteorEntity.stop();\n\t        if (meteorEntity.subscription) meteorEntity.subscription.stop();\n\t      });\n\n\t      return meteorEntity;\n\t    };\n\t  }\n\n\t  $meteorStopper.subscribe = function () {\n\t    var args = Array.prototype.slice.call(arguments);\n\t    this.subscription = $meteorSubscribe._subscribe(this.$$scope, $q.defer(), args);\n\t    return this;\n\t  };\n\n\t  return $meteorStopper;\n\t}]);\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.utils = exports.name = undefined;\n\n\tvar _underscore = __webpack_require__(2);\n\n\tvar _underscore2 = _interopRequireDefault(_underscore);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\tvar name = exports.name = 'angular-meteor.utilities';\n\tvar utils = exports.utils = '$$utils';\n\n\tangular.module(name, [])\n\n\t/*\n\t  A utility service which is provided with general utility functions\n\t */\n\t.service(utils, ['$rootScope', function ($rootScope) {\n\t  var self = this;\n\n\t  // Checks if an object is a cursor\n\t  this.isCursor = function (obj) {\n\t    return obj instanceof Meteor.Collection.Cursor;\n\t  };\n\n\t  // Cheecks if an object is a scope\n\t  this.isScope = function (obj) {\n\t    return obj instanceof $rootScope.constructor;\n\t  };\n\n\t  // Checks if an object is a view model\n\t  this.isViewModel = function (obj) {\n\t    return _underscore2.default.isObject(obj) && obj.$$dependencies;\n\t  };\n\n\t  // Checks if two objects are siblings\n\t  this.areSiblings = function (obj1, obj2) {\n\t    return _underscore2.default.isObject(obj1) && _underscore2.default.isObject(obj2) && Object.getPrototypeOf(obj1) === Object.getPrototypeOf(obj2);\n\t  };\n\n\t  // Binds function into a scpecified context. If an object is provided, will bind every\n\t  // value in the object which is a function. If a tap function is provided, it will be\n\t  // called right after the function has been invoked.\n\t  this.bind = function (fn, context, tap) {\n\t    tap = _underscore2.default.isFunction(tap) ? tap : angular.noop;\n\t    if (_underscore2.default.isFunction(fn)) return bindFn(fn, context, tap);\n\t    if (_underscore2.default.isObject(fn)) return bindObj(fn, context, tap);\n\t    return fn;\n\t  };\n\n\t  function bindFn(fn, context, tap) {\n\t    return function () {\n\t      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t        args[_key] = arguments[_key];\n\t      }\n\n\t      var result = fn.apply(context, args);\n\t      tap.call(context, {\n\t        result: result,\n\t        args: args\n\t      });\n\t      return result;\n\t    };\n\t  }\n\n\t  function bindObj(obj, context, tap) {\n\t    return _underscore2.default.keys(obj).reduce(function (bound, k) {\n\t      bound[k] = self.bind(obj[k], context, tap);\n\t      return bound;\n\t    }, {});\n\t  }\n\t}]);\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Mixer = exports.name = undefined;\n\n\tvar _underscore = __webpack_require__(2);\n\n\tvar _underscore2 = _interopRequireDefault(_underscore);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n\tvar name = exports.name = 'angular-meteor.mixer';\n\tvar Mixer = exports.Mixer = '$Mixer';\n\n\tangular.module(name, [])\n\n\t/*\n\t  A service which lets us apply mixins into Scope.prototype.\n\t  The flow is simple. Once we define a mixin, it will be stored in the `$Mixer`,\n\t  and any time a `ChildScope` prototype is created\n\t  it will be extended by the `$Mixer`.\n\t  This concept is good because it keeps our code\n\t  clean and simple, and easy to extend.\n\t  So any time we would like to define a new behaviour to our scope,\n\t  we will just use the `$Mixer` service.\n\t */\n\t.service(Mixer, function () {\n\t  var _this = this;\n\n\t  // Used to store method's caller\n\t  var caller = undefined;\n\n\t  this._mixins = [];\n\t  // Apply mixins automatically on specified contexts\n\t  this._autoExtend = [];\n\t  this._autoConstruct = [];\n\n\t  // Adds a new mixin\n\t  this.mixin = function (mixin) {\n\t    if (!_underscore2.default.isObject(mixin)) {\n\t      throw Error('argument 1 must be an object');\n\t    }\n\n\t    _this._mixins = _underscore2.default.union(_this._mixins, [mixin]);\n\t    // Apply mixins to stored contexts\n\t    _this._autoExtend.forEach(function (context) {\n\t      return _this._extend(context);\n\t    });\n\t    _this._autoConstruct.forEach(function (context) {\n\t      return _this._construct(context);\n\t    });\n\t    return _this;\n\t  };\n\n\t  // Removes a mixin. Useful mainly for test purposes\n\t  this._mixout = function (mixin) {\n\t    _this._mixins = _underscore2.default.without(_this._mixins, mixin);\n\t    return _this;\n\t  };\n\n\t  // Invoke function mixins with the provided context and arguments\n\t  this._construct = function (context) {\n\t    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t      args[_key - 1] = arguments[_key];\n\t    }\n\n\t    _this._mixins.filter(_underscore2.default.isFunction).forEach(function (mixin) {\n\t      mixin.call.apply(mixin, [context].concat(args));\n\t    });\n\n\t    return context;\n\t  };\n\n\t  // Extend prototype with the defined mixins\n\t  this._extend = function (obj, options) {\n\t    var _$defaults = _underscore2.default.defaults({}, options, {\n\t      pattern: /.*/ });\n\n\t    var pattern = _$defaults.pattern;\n\t    var context = _$defaults.context;\n\t    // The patterns of the keys which will be filtered\n\n\n\t    var mixins = _this._mixins.map(function (mixin) {\n\t      // Filtering the keys by the specified pattern\n\t      var keys = _underscore2.default.keys(mixin).filter(function (k) {\n\t        return k.match(pattern);\n\t      }).filter(function (k) {\n\t        return _underscore2.default.isFunction(mixin[k]);\n\t      });\n\n\t      return keys.reduce(function (boundMixin, methodName) {\n\t        var methodHandler = mixin[methodName];\n\n\t        // Note that this is not an arrow function so we can conserve the conetxt\n\t        boundMixin[methodName] = function () {\n\t          // Storing original caller so we will know who actually called the\n\t          // method event though it is bound to another context\n\t          var methodContext = context || this;\n\t          var recentCaller = caller;\n\t          caller = this;\n\n\t          try {\n\t            for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n\t              args[_key2] = arguments[_key2];\n\t            }\n\n\t            return methodHandler.apply(methodContext, args);\n\t          } finally {\n\t            // No matter what happens, restore variable to the previous one\n\t            caller = recentCaller;\n\t          }\n\t        };\n\n\t        return boundMixin;\n\t      }, {});\n\t    });\n\n\t    return _underscore2.default.extend.apply(_underscore2.default, [obj].concat(_toConsumableArray(mixins)));\n\t  };\n\n\t  // Caller property can not be set\n\t  Object.defineProperty(this, 'caller', {\n\t    configurable: true,\n\t    enumerable: true,\n\n\t    get: function get() {\n\t      return caller;\n\t    }\n\t  });\n\t});\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.name = undefined;\n\n\tvar _mixer = __webpack_require__(17);\n\n\tvar name = exports.name = 'angular-meteor.scope';\n\n\tangular.module(name, [_mixer.name]).run(['$rootScope', _mixer.Mixer, function ($rootScope, $Mixer) {\n\t  var Scope = $rootScope.constructor;\n\t  var $new = $rootScope.$new;\n\n\t  // Apply extensions whether a mixin in defined.\n\t  // Note that this way mixins which are initialized later\n\t  // can be applied on rootScope.\n\t  $Mixer._autoExtend.push(Scope.prototype);\n\t  $Mixer._autoConstruct.push($rootScope);\n\n\t  Scope.prototype.$new = function () {\n\t    var scope = $new.apply(this, arguments);\n\t    // Apply constructors to newly created scopes\n\t    return $Mixer._construct(scope);\n\t  };\n\t}]);\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Core = exports.name = undefined;\n\n\tvar _underscore = __webpack_require__(2);\n\n\tvar _underscore2 = _interopRequireDefault(_underscore);\n\n\tvar _utils = __webpack_require__(16);\n\n\tvar _mixer = __webpack_require__(17);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n\tvar name = exports.name = 'angular-meteor.core';\n\tvar Core = exports.Core = '$$Core';\n\n\tangular.module(name, [_utils.name, _mixer.name])\n\n\t/*\n\t  A mixin which provides us with core Meteor functions.\n\t */\n\t.factory(Core, ['$q', _utils.utils, _mixer.Mixer, function ($q, $$utils, $Mixer) {\n\t  function $$Core() {}\n\n\t  // Calls Meteor.autorun() which will be digested after each run and automatically destroyed\n\t  $$Core.autorun = function (fn) {\n\t    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n\t    fn = this.$bindToContext($Mixer.caller, fn);\n\n\t    if (!_underscore2.default.isFunction(fn)) {\n\t      throw Error('argument 1 must be a function');\n\t    }\n\t    if (!_underscore2.default.isObject(options)) {\n\t      throw Error('argument 2 must be an object');\n\t    }\n\n\t    var computation = Tracker.autorun(fn, options);\n\t    // Reset to a function that will also stop the listener we just added\n\t    computation.stop = this.$$autoStop(computation);\n\t    return computation;\n\t  };\n\n\t  // Calls Meteor.subscribe() which will be digested after each invokation\n\t  // and automatically destroyed\n\t  $$Core.subscribe = function (subName, fn, cb) {\n\t    fn = this.$bindToContext($Mixer.caller, fn || angular.noop);\n\t    cb = cb ? this.$bindToContext($Mixer.caller, cb) : angular.noop;\n\n\t    // Additional callbacks specific for this library\n\t    // onStart - right after Meteor.subscribe()\n\t    var hooks = {\n\t      onStart: angular.noop\n\t    };\n\n\t    if (!_underscore2.default.isString(subName)) {\n\t      throw Error('argument 1 must be a string');\n\t    }\n\t    if (!_underscore2.default.isFunction(fn)) {\n\t      throw Error('argument 2 must be a function');\n\t    }\n\t    if (!_underscore2.default.isFunction(cb) && !_underscore2.default.isObject(cb)) {\n\t      throw Error('argument 3 must be a function or an object');\n\t    }\n\n\t    if (_underscore2.default.isObject(cb)) {\n\t      for (var hook in hooks) {\n\t        if (hooks.hasOwnProperty(hook) && cb[hook]) {\n\t          // Don't use any of additional callbacks in Meteor.subscribe\n\t          hooks[hook] = cb[hook];\n\t          delete cb[hook];\n\t        }\n\t      }\n\t    }\n\n\t    var result = {};\n\n\t    var computation = this.autorun(function () {\n\t      var _Meteor;\n\n\t      var args = fn();\n\t      if (angular.isUndefined(args)) args = [];\n\n\t      if (!_underscore2.default.isArray(args)) {\n\t        throw Error('reactive function\\'s return value must be an array');\n\t      }\n\n\t      var subscription = (_Meteor = Meteor).subscribe.apply(_Meteor, [subName].concat(_toConsumableArray(args), [cb]));\n\n\t      hooks.onStart();\n\n\t      result.ready = subscription.ready.bind(subscription);\n\t      result.subscriptionId = subscription.subscriptionId;\n\t    });\n\n\t    // Once the computation has been stopped,\n\t    // any subscriptions made inside will be stopped as well\n\t    result.stop = computation.stop.bind(computation);\n\t    return result;\n\t  };\n\n\t  // Calls Meteor.call() wrapped by a digestion cycle\n\t  $$Core.callMethod = function () {\n\t    var _Meteor2;\n\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\n\t    var fn = args.pop();\n\t    if (_underscore2.default.isFunction(fn)) fn = this.$bindToContext($Mixer.caller, fn);\n\t    return (_Meteor2 = Meteor).call.apply(_Meteor2, args.concat([fn]));\n\t  };\n\n\t  // Calls Meteor.apply() wrapped by a digestion cycle\n\t  $$Core.applyMethod = function () {\n\t    var _Meteor3;\n\n\t    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n\t      args[_key2] = arguments[_key2];\n\t    }\n\n\t    var fn = args.pop();\n\t    if (_underscore2.default.isFunction(fn)) fn = this.$bindToContext($Mixer.caller, fn);\n\t    return (_Meteor3 = Meteor).apply.apply(_Meteor3, args.concat([fn]));\n\t  };\n\n\t  // Stops a process once the scope has been destroyed\n\t  $$Core.$$autoStop = function (stoppable) {\n\t    var removeListener = undefined;\n\t    var baseStop = stoppable.stop.bind(stoppable);\n\n\t    // Once the process has been stopped the destroy event listener will be removed\n\t    // to avoid memory leaks and unexpected behaviours\n\t    var stop = function stop() {\n\t      removeListener();\n\t      return baseStop.apply(undefined, arguments);\n\t    };\n\n\t    removeListener = this.$on('$destroy', stop);\n\t    return stop;\n\t  };\n\n\t  // Digests scope only if there is no phase at the moment\n\t  $$Core.$$throttledDigest = function () {\n\t    var isDigestable = !this.$$destroyed && !this.$$phase && !this.$root.$$phase;\n\n\t    if (isDigestable) this.$digest();\n\t  };\n\n\t  // Creates a promise only that the digestion cycle will be called at its fulfillment\n\t  $$Core.$$defer = function () {\n\t    var deferred = $q.defer();\n\t    // Once promise has been fulfilled, digest\n\t    deferred.promise = deferred.promise.finally(this.$$throttledDigest.bind(this));\n\t    return deferred;\n\t  };\n\n\t  // Binds an object or a function to the provided context and digest it once it is invoked\n\t  $$Core.$bindToContext = function (context, fn) {\n\t    if (_underscore2.default.isFunction(context)) {\n\t      fn = context;\n\t      context = this;\n\t    }\n\n\t    return $$utils.bind(fn, context, this.$$throttledDigest.bind(this));\n\t  };\n\n\t  return $$Core;\n\t}]);\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.reactive = exports.ViewModel = exports.name = undefined;\n\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n\tvar _underscore = __webpack_require__(2);\n\n\tvar _underscore2 = _interopRequireDefault(_underscore);\n\n\tvar _utils = __webpack_require__(16);\n\n\tvar _mixer = __webpack_require__(17);\n\n\tvar _core = __webpack_require__(19);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\tvar name = exports.name = 'angular-meteor.view-model';\n\tvar ViewModel = exports.ViewModel = '$$ViewModel';\n\tvar reactive = exports.reactive = '$reactive';\n\n\tangular.module(name, [_utils.name, _mixer.name, _core.name])\n\n\t/*\n\t  A mixin which lets us bind a view model into a scope.\n\t  Note that only a single view model can be bound,\n\t  otherwise the scope might behave unexpectedly.\n\t  Mainly used to define the controller as the view model,\n\t  and very useful when wanting to use Angular's `controllerAs` syntax.\n\t */\n\t.factory(ViewModel, [_utils.utils, _mixer.Mixer, function ($$utils, $Mixer) {\n\t  function $$ViewModel() {}\n\n\t  // Gets an object, wraps it with scope functions and returns it\n\t  $$ViewModel.viewModel = function (vm) {\n\t    if (!_underscore2.default.isObject(vm)) {\n\t      throw Error('argument 1 must be an object');\n\t    }\n\n\t    // Extend view model with mixin functions\n\t    $Mixer._extend(vm, {\n\t      pattern: /^(?!\\$\\$).*$/, // Omitting methods which start with a $$ notation\n\t      context: this // Binding methods to scope\n\t    });\n\n\t    // Apply mixin constructors on scope with view model\n\t    $Mixer._construct(this, vm);\n\t    return vm;\n\t  };\n\n\t  return $$ViewModel;\n\t}])\n\n\t/*\n\t  Illustrates the old API where a view model is created using $reactive service\n\t */\n\t.service(reactive, [_utils.utils, function ($$utils) {\n\t  var Reactive = function () {\n\t    function Reactive(vm) {\n\t      var _this = this;\n\n\t      _classCallCheck(this, Reactive);\n\n\t      if (!_underscore2.default.isObject(vm)) {\n\t        throw Error('argument 1 must be an object');\n\t      }\n\n\t      _underscore2.default.defer(function () {\n\t        if (!_this._attached) {\n\t          console.warn('view model was not attached to any scope');\n\t        }\n\t      });\n\n\t      this._vm = vm;\n\t    }\n\n\t    _createClass(Reactive, [{\n\t      key: 'attach',\n\t      value: function attach(scope) {\n\t        this._attached = true;\n\n\t        if (!$$utils.isScope(scope)) {\n\t          throw Error('argument 1 must be a scope');\n\t        }\n\n\t        var viewModel = scope.viewModel(this._vm);\n\n\t        // Similar to the old/Meteor API\n\t        viewModel.call = viewModel.callMethod;\n\t        viewModel.apply = viewModel.applyMethod;\n\n\t        return viewModel;\n\t      }\n\t    }]);\n\n\t    return Reactive;\n\t  }();\n\n\t  return function (vm) {\n\t    return new Reactive(vm);\n\t  };\n\t}]);\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Reactive = exports.name = undefined;\n\n\tvar _jsondiffpatch = __webpack_require__(22);\n\n\tvar _jsondiffpatch2 = _interopRequireDefault(_jsondiffpatch);\n\n\tvar _underscore = __webpack_require__(2);\n\n\tvar _underscore2 = _interopRequireDefault(_underscore);\n\n\tvar _utils = __webpack_require__(16);\n\n\tvar _mixer = __webpack_require__(17);\n\n\tvar _core = __webpack_require__(19);\n\n\tvar _viewModel = __webpack_require__(20);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\tvar name = exports.name = 'angular-meteor.reactive';\n\tvar Reactive = exports.Reactive = '$$Reactive';\n\n\tangular.module(name, [_utils.name, _mixer.name, _core.name, _viewModel.name])\n\n\t/*\n\t  A mixin which enhance our reactive abilities by providing methods\n\t  that are capable of updating our scope reactively.\n\t */\n\t.factory(Reactive, ['$parse', _utils.utils, _mixer.Mixer, function ($parse, $$utils, $Mixer) {\n\t  function $$Reactive() {\n\t    var vm = arguments.length <= 0 || arguments[0] === undefined ? this : arguments[0];\n\n\t    // Helps us track changes made in the view model\n\t    vm.$$dependencies = {};\n\t  }\n\n\t  // Gets an object containing functions and define their results as reactive properties.\n\t  // Once a return value has been changed the property will be reset.\n\t  $$Reactive.helpers = function (vm, props) {\n\t    var _this = this;\n\n\t    if ($$utils.isViewModel(vm)) {\n\t      if (!_underscore2.default.isObject(props)) {\n\t        throw Error('argument 2 must be an object');\n\t      }\n\t    } else {\n\t      props = vm;\n\t      vm = $Mixer.caller;\n\n\t      if (!_underscore2.default.isObject(props)) {\n\t        throw Error('argument 1 must be an object');\n\t      }\n\t    }\n\n\t    _underscore2.default.each(props, function (v, k) {\n\t      if (!_underscore2.default.isFunction(v)) {\n\t        throw Error('helper \\'' + k + '\\' must be a function');\n\t      }\n\t    });\n\n\t    _underscore2.default.each(props, function (v, k) {\n\t      if (!vm.$$dependencies[k]) {\n\t        // Registers a new dependency to the specified helper\n\t        vm.$$dependencies[k] = new Tracker.Dependency();\n\t      }\n\n\t      _this.$$setFnHelper(vm, k, v);\n\t    });\n\t  };\n\n\t  // Gets a model reactively\n\t  $$Reactive.getReactively = function (vm, k, isDeep) {\n\t    if ($$utils.isViewModel(vm)) {\n\t      if (angular.isUndefined(isDeep)) isDeep = false;\n\n\t      if (!_underscore2.default.isString(k)) {\n\t        throw Error('argument 2 must be a string');\n\t      }\n\t      if (!_underscore2.default.isBoolean(isDeep)) {\n\t        throw Error('argument 3 must be a boolean');\n\t      }\n\t    } else {\n\t      isDeep = angular.isDefined(k) ? k : false;\n\t      k = vm;\n\t      vm = $Mixer.caller;\n\n\t      if (!_underscore2.default.isString(k)) {\n\t        throw Error('argument 1 must be a string');\n\t      }\n\t      if (!_underscore2.default.isBoolean(isDeep)) {\n\t        throw Error('argument 2 must be a boolean');\n\t      }\n\t    }\n\n\t    return this.$$reactivateEntity(vm, k, this.$watch, isDeep);\n\t  };\n\n\t  // Gets a collection reactively\n\t  $$Reactive.getCollectionReactively = function (vm, k) {\n\t    if ($$utils.isViewModel(vm)) {\n\t      if (!_underscore2.default.isString(k)) {\n\t        throw Error('argument 2 must be a string');\n\t      }\n\t    } else {\n\t      k = vm;\n\t      vm = $Mixer.caller;\n\n\t      if (!_underscore2.default.isString(k)) {\n\t        throw Error('argument 1 must be a string');\n\t      }\n\t    }\n\n\t    return this.$$reactivateEntity(vm, k, this.$watchCollection);\n\t  };\n\n\t  // Gets an entity reactively, and once it has been changed the computation will be recomputed\n\t  $$Reactive.$$reactivateEntity = function (vm, k, watcher) {\n\t    if (!vm.$$dependencies[k]) {\n\t      vm.$$dependencies[k] = new Tracker.Dependency();\n\n\t      for (var _len = arguments.length, watcherArgs = Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n\t        watcherArgs[_key - 3] = arguments[_key];\n\t      }\n\n\t      this.$$watchEntity.apply(this, [vm, k, watcher].concat(watcherArgs));\n\t    }\n\n\t    vm.$$dependencies[k].depend();\n\t    return $parse(k)(vm);\n\t  };\n\n\t  // Watches for changes in the view model, and if so will notify a change\n\t  $$Reactive.$$watchEntity = function (vm, k, watcher) {\n\t    var _this2 = this;\n\n\t    // Gets a deep property from the caller\n\t    var getVal = _underscore2.default.partial($parse(k), vm);\n\t    var initialVal = getVal();\n\n\t    // Watches for changes in the view model\n\n\t    for (var _len2 = arguments.length, watcherArgs = Array(_len2 > 3 ? _len2 - 3 : 0), _key2 = 3; _key2 < _len2; _key2++) {\n\t      watcherArgs[_key2 - 3] = arguments[_key2];\n\t    }\n\n\t    watcher.call.apply(watcher, [this, getVal, function (val, oldVal) {\n\t      var hasChanged = val !== initialVal || val !== oldVal;\n\n\t      // Notify if a change has been detected\n\t      if (hasChanged) _this2.$$changed(vm, k);\n\t    }].concat(watcherArgs));\n\t  };\n\n\t  // Invokes a function and sets the return value as a property\n\t  $$Reactive.$$setFnHelper = function (vm, k, fn) {\n\t    var _this3 = this;\n\n\t    var activeObservation = null;\n\t    var lastModel = null;\n\t    var lastModelData = [];\n\n\t    this.autorun(function () /* computation */{\n\t      // Invokes the reactive functon\n\t      var model = fn.apply(vm);\n\n\t      // Ignore notifications made by the following handler\n\t      Tracker.nonreactive(function () {\n\t        // If a cursor, observe its changes and update acoordingly\n\t        if ($$utils.isCursor(model)) {\n\t          var modelData = undefined;\n\n\t          if (angular.isUndefined(vm[k])) {\n\t            _this3.$$setValHelper(vm, k, [], false);\n\t          }\n\n\t          if (activeObservation) {\n\t            lastModelData = lastModel.fetch();\n\t            activeObservation.stop();\n\t            activeObservation = null;\n\t          }\n\n\t          var handle = _this3.$$handleCursor(vm, k, model);\n\n\t          activeObservation = handle.observation;\n\t          modelData = handle.data;\n\n\t          if (lastModelData.length !== 0) {\n\t            var diff = _jsondiffpatch2.default.diff(lastModelData, modelData);\n\t            vm[k] = _jsondiffpatch2.default.patch(lastModelData, diff);\n\t          } else {\n\t            vm[k] = modelData;\n\t          }\n\n\t          lastModel = model;\n\t          lastModelData = modelData;\n\n\t          /* computation.onInvalidate(() => {\n\t            activeObservation.stop();\n\t          });*/\n\t        } else {\n\t            _this3.$$handleNonCursor(vm, k, model);\n\t          }\n\n\t        // Notify change and update the view model\n\t        _this3.$$changed(vm, k);\n\t      });\n\t    });\n\t  };\n\n\t  // Sets a value helper as a setter and a getter which will notify computations once used\n\t  $$Reactive.$$setValHelper = function (vm, k, v) {\n\t    var _this4 = this;\n\n\t    var watch = arguments.length <= 3 || arguments[3] === undefined ? true : arguments[3];\n\n\t    // If set, reactives property\n\t    if (watch) {\n\t      var isDeep = _underscore2.default.isObject(v);\n\t      this.getReactively(vm, k, isDeep);\n\t    }\n\n\t    Object.defineProperty(vm, k, {\n\t      configurable: true,\n\t      enumerable: true,\n\n\t      get: function get() {\n\t        return v;\n\t      },\n\t      set: function set(newVal) {\n\t        v = newVal;\n\t        _this4.$$changed(vm, k);\n\t      }\n\t    });\n\t  };\n\n\t  // Fetching a cursor and updates properties once the result set has been changed\n\t  $$Reactive.$$handleCursor = function (vm, k, cursor) {\n\t    var _this5 = this;\n\n\t    var data = [];\n\t    // Observe changes made in the result set\n\t    var observation = cursor.observe({\n\t      addedAt: function addedAt(doc, atIndex) {\n\t        if (!observation) {\n\t          data.push(doc);\n\t          return;\n\t        }\n\t        vm[k].splice(atIndex, 0, doc);\n\t        _this5.$$changed(vm, k);\n\t      },\n\t      changedAt: function changedAt(doc, oldDoc, atIndex) {\n\t        var diff = _jsondiffpatch2.default.diff(vm[k][atIndex], doc);\n\t        _jsondiffpatch2.default.patch(vm[k][atIndex], diff);\n\t        _this5.$$changed(vm, k);\n\t      },\n\t      movedTo: function movedTo(doc, fromIndex, toIndex) {\n\t        vm[k].splice(fromIndex, 1);\n\t        vm[k].splice(toIndex, 0, doc);\n\t        _this5.$$changed(vm, k);\n\t      },\n\t      removedAt: function removedAt(oldDoc, atIndex) {\n\t        vm[k].splice(atIndex, 1);\n\t        _this5.$$changed(vm, k);\n\t      }\n\t    });\n\n\t    return {\n\t      observation: observation,\n\t      data: data\n\t    };\n\t  };\n\n\t  $$Reactive.$$handleNonCursor = function (vm, k, data) {\n\t    var v = vm[k];\n\n\t    if (angular.isDefined(v)) {\n\t      delete vm[k];\n\t      v = null;\n\t    }\n\n\t    if (angular.isUndefined(v)) {\n\t      this.$$setValHelper(vm, k, data);\n\t    }\n\t    // Update property if the new value is from the same type\n\t    else if ($$utils.areSiblings(v, data)) {\n\t        var diff = _jsondiffpatch2.default.diff(v, data);\n\t        _jsondiffpatch2.default.patch(v, diff);\n\t        this.$$changed(vm, k);\n\t      } else {\n\t        vm[k] = data;\n\t      }\n\t  };\n\n\t  // Notifies dependency in view model\n\t  $$Reactive.$$depend = function (vm, k) {\n\t    vm.$$dependencies[k].depend();\n\t  };\n\n\t  // Notifies change in view model\n\t  $$Reactive.$$changed = function (vm, k) {\n\t    this.$$throttledDigest();\n\t    vm.$$dependencies[k].changed();\n\t  };\n\n\t  return $$Reactive;\n\t}]);\n\n/***/ },\n/* 22 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_22__;\n\n/***/ },\n/* 23 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tvar name = exports.name = 'angular-templates';\n\n\ttry {\n\t  angular.module(name);\n\t} catch (e) {\n\t  angular.module(name, []);\n\t}\n\n/***/ }\n/******/ ])\n});\n;"]}}]